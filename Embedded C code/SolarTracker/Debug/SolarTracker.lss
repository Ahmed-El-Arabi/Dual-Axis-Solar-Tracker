
SolarTracker.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00002e48  00002edc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002e48  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800106  00800106  00002ee2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002ee2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002f14  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00002f54  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002569  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b66  00000000  00000000  000055f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000df3  00000000  00000000  0000615b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000274  00000000  00000000  00006f50  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006db  00000000  00000000  000071c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001d7a  00000000  00000000  0000789f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  00009619  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__ctors_end>
       4:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
       8:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
       c:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      10:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      14:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      18:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      1c:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      20:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      24:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      28:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      2c:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      30:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      34:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      38:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      3c:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      40:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      44:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      48:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      4c:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      50:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      54:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      58:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      5c:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      60:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      64:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      68:	03 6e       	ori	r16, 0xE3	; 227
      6a:	db 36       	cpi	r29, 0x6B	; 107
      6c:	3d 9a       	sbi	0x07, 5	; 7
      6e:	99 99       	sbic	0x13, 1	; 19
      70:	99 3d       	cpi	r25, 0xD9	; 217
      72:	ab aa       	std	Y+51, r10	; 0x33
      74:	aa 2a       	or	r10, r26
      76:	3e 00       	.word	0x003e	; ????
      78:	00 00       	nop
      7a:	80 3f       	cpi	r24, 0xF0	; 240
      7c:	07 2c       	mov	r0, r7
      7e:	7a a5       	ldd	r23, Y+42	; 0x2a
      80:	ba 6c       	ori	r27, 0xCA	; 202
      82:	c5 90       	lpm	r12, Z+
      84:	da 3b       	cpi	r29, 0xBA	; 186
      86:	93 65       	ori	r25, 0x53	; 83
      88:	fc 8b       	std	Y+20, r31	; 0x14
      8a:	bc 53       	subi	r27, 0x3C	; 60
      8c:	f8 10       	cpse	r15, r8
      8e:	fd 3c       	cpi	r31, 0xCD	; 205
      90:	56 92       	lac	Z, r5
      92:	83 4d       	sbci	r24, 0xD3	; 211
      94:	bd 87       	std	Y+13, r27	; 0x0d
      96:	9d 3a       	cpi	r25, 0xAD	; 173
      98:	b6 3d       	cpi	r27, 0xD6	; 214
      9a:	cb c9       	rjmp	.-3178   	; 0xfffff432 <__eeprom_end+0xff7ef432>
      9c:	bf 5b       	subi	r27, 0xBF	; 191
      9e:	be 73       	andi	r27, 0x3E	; 62
      a0:	da 0f       	add	r29, r26
      a2:	c9 3f       	cpi	r28, 0xF9	; 249
      a4:	05 a8       	ldd	r0, Z+53	; 0x35
      a6:	4c cd       	rjmp	.-1384   	; 0xfffffb40 <__eeprom_end+0xff7efb40>
      a8:	b2 d4       	rcall	.+2404   	; 0xa0e <__stack+0x10f>
      aa:	4e b9       	out	0x0e, r20	; 14
      ac:	38 36       	cpi	r19, 0x68	; 104
      ae:	a9 02       	muls	r26, r25
      b0:	0c 50       	subi	r16, 0x0C	; 12
      b2:	b9 91       	ld	r27, Y+
      b4:	86 88       	ldd	r8, Z+22	; 0x16
      b6:	08 3c       	cpi	r16, 0xC8	; 200
      b8:	a6 aa       	std	Z+54, r10	; 0x36
      ba:	aa 2a       	or	r10, r26
      bc:	be 00       	.word	0x00be	; ????
      be:	00 00       	nop
      c0:	80 3f       	cpi	r24, 0xF0	; 240
      c2:	06 64       	ori	r16, 0x46	; 70
      c4:	ec 1b       	sub	r30, r28
      c6:	3c 04       	cpc	r3, r12
      c8:	bc 16       	cp	r11, r28
      ca:	3e 3b       	cpi	r19, 0xBE	; 190
      cc:	e5 b9       	out	0x05, r30	; 5
      ce:	3c c9       	rjmp	.-3464   	; 0xfffff348 <__eeprom_end+0xff7ef348>
      d0:	3c 37       	cpi	r19, 0x7C	; 124
      d2:	c2 9e       	mul	r12, r18
      d4:	5a 3d       	cpi	r21, 0xDA	; 218
      d6:	66 04       	cpc	r6, r6
      d8:	98 08       	sbc	r9, r8
      da:	3e ea       	ldi	r19, 0xAE	; 174
      dc:	69 aa       	std	Y+49, r6	; 0x31
      de:	aa 3e       	cpi	r26, 0xEA	; 234
      e0:	00 00       	nop
      e2:	00 80       	ld	r0, Z
      e4:	3f 00       	.word	0x003f	; ????

000000e6 <__ctors_end>:
      e6:	11 24       	eor	r1, r1
      e8:	1f be       	out	0x3f, r1	; 63
      ea:	cf ef       	ldi	r28, 0xFF	; 255
      ec:	d8 e0       	ldi	r29, 0x08	; 8
      ee:	de bf       	out	0x3e, r29	; 62
      f0:	cd bf       	out	0x3d, r28	; 61

000000f2 <__do_copy_data>:
      f2:	11 e0       	ldi	r17, 0x01	; 1
      f4:	a0 e0       	ldi	r26, 0x00	; 0
      f6:	b1 e0       	ldi	r27, 0x01	; 1
      f8:	e8 e4       	ldi	r30, 0x48	; 72
      fa:	fe e2       	ldi	r31, 0x2E	; 46
      fc:	02 c0       	rjmp	.+4      	; 0x102 <__do_copy_data+0x10>
      fe:	05 90       	lpm	r0, Z+
     100:	0d 92       	st	X+, r0
     102:	a6 30       	cpi	r26, 0x06	; 6
     104:	b1 07       	cpc	r27, r17
     106:	d9 f7       	brne	.-10     	; 0xfe <__do_copy_data+0xc>

00000108 <__do_clear_bss>:
     108:	21 e0       	ldi	r18, 0x01	; 1
     10a:	a6 e0       	ldi	r26, 0x06	; 6
     10c:	b1 e0       	ldi	r27, 0x01	; 1
     10e:	01 c0       	rjmp	.+2      	; 0x112 <.do_clear_bss_start>

00000110 <.do_clear_bss_loop>:
     110:	1d 92       	st	X+, r1

00000112 <.do_clear_bss_start>:
     112:	a6 31       	cpi	r26, 0x16	; 22
     114:	b2 07       	cpc	r27, r18
     116:	e1 f7       	brne	.-8      	; 0x110 <.do_clear_bss_loop>
     118:	0e 94 0b 12 	call	0x2416	; 0x2416 <main>
     11c:	0c 94 22 17 	jmp	0x2e44	; 0x2e44 <_exit>

00000120 <__bad_interrupt>:
     120:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000124 <APP_init>:
#include <math.h>

void APP_init(void){
	
	//Timer init
	TIMER_init();
     124:	0e 94 fe 10 	call	0x21fc	; 0x21fc <TIMER_init>
	
	//Stepper motor 
	STEPPER_init(STEPPER_PORT,ENA_PIN); //Holding torque
     128:	61 e0       	ldi	r22, 0x01	; 1
     12a:	84 e4       	ldi	r24, 0x44	; 68
     12c:	0e 94 88 10 	call	0x2110	; 0x2110 <STEPPER_init>
	STEPPER_init(STEPPER_PORT,DIR_PIN); //Direction
     130:	62 e0       	ldi	r22, 0x02	; 2
     132:	84 e4       	ldi	r24, 0x44	; 68
     134:	0e 94 88 10 	call	0x2110	; 0x2110 <STEPPER_init>
	STEPPER_init(STEPPER_PORT,PUL_PIN); //Pulse
     138:	63 e0       	ldi	r22, 0x03	; 3
     13a:	84 e4       	ldi	r24, 0x44	; 68
     13c:	0e 94 88 10 	call	0x2110	; 0x2110 <STEPPER_init>
	DDRB = 0xFF;
     140:	8f ef       	ldi	r24, 0xFF	; 255
     142:	84 b9       	out	0x04, r24	; 4
	
	//Linear actuator
	LINEAR_init(LINEAR_PORT,FORWARD_PIN);
     144:	65 e0       	ldi	r22, 0x05	; 5
     146:	83 e4       	ldi	r24, 0x43	; 67
     148:	0e 94 11 10 	call	0x2022	; 0x2022 <LINEAR_init>
	LINEAR_init(LINEAR_PORT,BACKWARD_PIN);
     14c:	64 e0       	ldi	r22, 0x04	; 4
     14e:	83 e4       	ldi	r24, 0x43	; 67
     150:	0e 94 11 10 	call	0x2022	; 0x2022 <LINEAR_init>


    //Interrupt init
	sei(); //enable global interrupt
     154:	78 94       	sei
     156:	08 95       	ret

00000158 <APP_start>:

}



void APP_start(void){
     158:	cf 93       	push	r28
     15a:	df 93       	push	r29
     15c:	cd b7       	in	r28, 0x3d	; 61
     15e:	de b7       	in	r29, 0x3e	; 62
     160:	ae 97       	sbiw	r28, 0x2e	; 46
     162:	0f b6       	in	r0, 0x3f	; 63
     164:	f8 94       	cli
     166:	de bf       	out	0x3e, r29	; 62
     168:	0f be       	out	0x3f, r0	; 63
     16a:	cd bf       	out	0x3d, r28	; 61
// 		TIMER_delay(10000);


 		//step_backward(50000);		                 //for setting up for the first time linear actuator must be fully retracted
		//TIMER_delay(6000);
		STEPPER_on(STEPPER_PORT,DIR_PIN);            //HIGH CCW
     16c:	62 e0       	ldi	r22, 0x02	; 2
     16e:	84 e4       	ldi	r24, 0x44	; 68
     170:	0e 94 8c 10 	call	0x2118	; 0x2118 <STEPPER_on>
		//LINEAR_off(LINEAR_PORT,FORWARD_PIN);
		//LINEAR_off(LINEAR_PORT,BACKWARD_PIN); 
		 //first step which is used as a reference
		double LSTM = 15 * GMT;double B = ((double)(360) / (double)(365)) * (days - 81);double EoT = 9.87 * sin(2 * B * conv) - 7.53 * cos(B * conv) - 1.5 * sin(B * conv);double TC = EoT + (4 * (lon - LSTM));double LST = hourD + ((double)(TC) / (double)(60));double HRA = (15 * (LST - 12));double declination = (23.45 * sin(B * conv));		double sunrise = 12 - ((double)1 / (double)15) * (acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);double sunset = 12 + (((double)1 / (double)15) * acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);double elevation = asin(((sin(declination * conv) * sin(lat * conv)) + (cos(declination * conv) * cos(lat * conv) * cos(HRA * conv)))) * conv2;float A = 21.6;float Beta = 17.1;float phi = elevation * PI/180;float alpha = pow(A,2) + pow(Beta,2);float beta = (float)2*A*Beta;
     174:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     178:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     17c:	61 55       	subi	r22, 0x51	; 81
     17e:	71 09       	sbc	r23, r1
     180:	07 2e       	mov	r0, r23
     182:	00 0c       	add	r0, r0
     184:	88 0b       	sbc	r24, r24
     186:	99 0b       	sbc	r25, r25
     188:	0e 94 68 14 	call	0x28d0	; 0x28d0 <__floatsisf>
     18c:	2f e3       	ldi	r18, 0x3F	; 63
     18e:	3e e7       	ldi	r19, 0x7E	; 126
     190:	4c e7       	ldi	r20, 0x7C	; 124
     192:	5f e3       	ldi	r21, 0x3F	; 63
     194:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     198:	6b 01       	movw	r12, r22
     19a:	7c 01       	movw	r14, r24
     19c:	9b 01       	movw	r18, r22
     19e:	ac 01       	movw	r20, r24
     1a0:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     1a4:	25 e3       	ldi	r18, 0x35	; 53
     1a6:	3a ef       	ldi	r19, 0xFA	; 250
     1a8:	4e e8       	ldi	r20, 0x8E	; 142
     1aa:	5c e3       	ldi	r21, 0x3C	; 60
     1ac:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     1b0:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
     1b4:	25 e8       	ldi	r18, 0x85	; 133
     1b6:	3b ee       	ldi	r19, 0xEB	; 235
     1b8:	4d e1       	ldi	r20, 0x1D	; 29
     1ba:	51 e4       	ldi	r21, 0x41	; 65
     1bc:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     1c0:	4b 01       	movw	r8, r22
     1c2:	5c 01       	movw	r10, r24
     1c4:	25 e3       	ldi	r18, 0x35	; 53
     1c6:	3a ef       	ldi	r19, 0xFA	; 250
     1c8:	4e e8       	ldi	r20, 0x8E	; 142
     1ca:	5c e3       	ldi	r21, 0x3C	; 60
     1cc:	c7 01       	movw	r24, r14
     1ce:	b6 01       	movw	r22, r12
     1d0:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     1d4:	6b 01       	movw	r12, r22
     1d6:	7c 01       	movw	r14, r24
     1d8:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     1dc:	23 ec       	ldi	r18, 0xC3	; 195
     1de:	35 ef       	ldi	r19, 0xF5	; 245
     1e0:	40 ef       	ldi	r20, 0xF0	; 240
     1e2:	50 e4       	ldi	r21, 0x40	; 64
     1e4:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     1e8:	9b 01       	movw	r18, r22
     1ea:	ac 01       	movw	r20, r24
     1ec:	c5 01       	movw	r24, r10
     1ee:	b4 01       	movw	r22, r8
     1f0:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     1f4:	4b 01       	movw	r8, r22
     1f6:	5c 01       	movw	r10, r24
     1f8:	c7 01       	movw	r24, r14
     1fa:	b6 01       	movw	r22, r12
     1fc:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
     200:	6b 01       	movw	r12, r22
     202:	7c 01       	movw	r14, r24
     204:	20 e0       	ldi	r18, 0x00	; 0
     206:	30 e0       	ldi	r19, 0x00	; 0
     208:	40 ec       	ldi	r20, 0xC0	; 192
     20a:	5f e3       	ldi	r21, 0x3F	; 63
     20c:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     210:	9b 01       	movw	r18, r22
     212:	ac 01       	movw	r20, r24
     214:	c5 01       	movw	r24, r10
     216:	b4 01       	movw	r22, r8
     218:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     21c:	20 e7       	ldi	r18, 0x70	; 112
     21e:	36 ea       	ldi	r19, 0xA6	; 166
     220:	49 ed       	ldi	r20, 0xD9	; 217
     222:	50 e4       	ldi	r21, 0x40	; 64
     224:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     228:	20 e0       	ldi	r18, 0x00	; 0
     22a:	30 e0       	ldi	r19, 0x00	; 0
     22c:	40 e7       	ldi	r20, 0x70	; 112
     22e:	52 e4       	ldi	r21, 0x42	; 66
     230:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
     234:	4b 01       	movw	r8, r22
     236:	5c 01       	movw	r10, r24
     238:	40 90 02 01 	lds	r4, 0x0102	; 0x800102 <hourD>
     23c:	50 90 03 01 	lds	r5, 0x0103	; 0x800103 <hourD+0x1>
     240:	60 90 04 01 	lds	r6, 0x0104	; 0x800104 <hourD+0x2>
     244:	70 90 05 01 	lds	r7, 0x0105	; 0x800105 <hourD+0x3>
     248:	a3 01       	movw	r20, r6
     24a:	92 01       	movw	r18, r4
     24c:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     250:	20 e0       	ldi	r18, 0x00	; 0
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e4       	ldi	r20, 0x40	; 64
     256:	51 e4       	ldi	r21, 0x41	; 65
     258:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     25c:	20 e0       	ldi	r18, 0x00	; 0
     25e:	30 e0       	ldi	r19, 0x00	; 0
     260:	40 e7       	ldi	r20, 0x70	; 112
     262:	51 e4       	ldi	r21, 0x41	; 65
     264:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     268:	6d a3       	std	Y+37, r22	; 0x25
     26a:	7e a3       	std	Y+38, r23	; 0x26
     26c:	8f a3       	std	Y+39, r24	; 0x27
     26e:	98 a7       	std	Y+40, r25	; 0x28
     270:	2a e9       	ldi	r18, 0x9A	; 154
     272:	39 e9       	ldi	r19, 0x99	; 153
     274:	4b eb       	ldi	r20, 0xBB	; 187
     276:	51 e4       	ldi	r21, 0x41	; 65
     278:	c7 01       	movw	r24, r14
     27a:	b6 01       	movw	r22, r12
     27c:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     280:	25 e3       	ldi	r18, 0x35	; 53
     282:	3a ef       	ldi	r19, 0xFA	; 250
     284:	4e e8       	ldi	r20, 0x8E	; 142
     286:	5c e3       	ldi	r21, 0x3C	; 60
     288:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     28c:	6b 01       	movw	r12, r22
     28e:	7c 01       	movw	r14, r24
     290:	0e 94 ee 16 	call	0x2ddc	; 0x2ddc <tan>
     294:	29 e7       	ldi	r18, 0x79	; 121
     296:	33 ed       	ldi	r19, 0xD3	; 211
     298:	43 e1       	ldi	r20, 0x13	; 19
     29a:	5f eb       	ldi	r21, 0xBF	; 191
     29c:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     2a0:	0e 94 04 13 	call	0x2608	; 0x2608 <acos>
     2a4:	6d 83       	std	Y+5, r22	; 0x05
     2a6:	7e 83       	std	Y+6, r23	; 0x06
     2a8:	8f 83       	std	Y+7, r24	; 0x07
     2aa:	98 87       	std	Y+8, r25	; 0x08
     2ac:	21 ee       	ldi	r18, 0xE1	; 225
     2ae:	3e e2       	ldi	r19, 0x2E	; 46
     2b0:	45 e6       	ldi	r20, 0x65	; 101
     2b2:	52 e4       	ldi	r21, 0x42	; 66
     2b4:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     2b8:	29 e8       	ldi	r18, 0x89	; 137
     2ba:	38 e8       	ldi	r19, 0x88	; 136
     2bc:	48 e8       	ldi	r20, 0x88	; 136
     2be:	5d e3       	ldi	r21, 0x3D	; 61
     2c0:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     2c4:	9b 01       	movw	r18, r22
     2c6:	ac 01       	movw	r20, r24
     2c8:	60 e0       	ldi	r22, 0x00	; 0
     2ca:	70 e0       	ldi	r23, 0x00	; 0
     2cc:	80 e4       	ldi	r24, 0x40	; 64
     2ce:	91 e4       	ldi	r25, 0x41	; 65
     2d0:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     2d4:	a5 01       	movw	r20, r10
     2d6:	94 01       	movw	r18, r8
     2d8:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     2dc:	69 8f       	std	Y+25, r22	; 0x19
     2de:	7a 8f       	std	Y+26, r23	; 0x1a
     2e0:	8b 8f       	std	Y+27, r24	; 0x1b
     2e2:	9c 8f       	std	Y+28, r25	; 0x1c
     2e4:	29 e8       	ldi	r18, 0x89	; 137
     2e6:	38 e8       	ldi	r19, 0x88	; 136
     2e8:	48 e8       	ldi	r20, 0x88	; 136
     2ea:	5d e3       	ldi	r21, 0x3D	; 61
     2ec:	6d 81       	ldd	r22, Y+5	; 0x05
     2ee:	7e 81       	ldd	r23, Y+6	; 0x06
     2f0:	8f 81       	ldd	r24, Y+7	; 0x07
     2f2:	98 85       	ldd	r25, Y+8	; 0x08
     2f4:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     2f8:	21 ee       	ldi	r18, 0xE1	; 225
     2fa:	3e e2       	ldi	r19, 0x2E	; 46
     2fc:	45 e6       	ldi	r20, 0x65	; 101
     2fe:	52 e4       	ldi	r21, 0x42	; 66
     300:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     304:	20 e0       	ldi	r18, 0x00	; 0
     306:	30 e0       	ldi	r19, 0x00	; 0
     308:	40 e4       	ldi	r20, 0x40	; 64
     30a:	51 e4       	ldi	r21, 0x41	; 65
     30c:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     310:	a5 01       	movw	r20, r10
     312:	94 01       	movw	r18, r8
     314:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     318:	6d 8f       	std	Y+29, r22	; 0x1d
     31a:	7e 8f       	std	Y+30, r23	; 0x1e
     31c:	8f 8f       	std	Y+31, r24	; 0x1f
     31e:	98 a3       	std	Y+32, r25	; 0x20
     320:	c7 01       	movw	r24, r14
     322:	b6 01       	movw	r22, r12
     324:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
     328:	6d 83       	std	Y+5, r22	; 0x05
     32a:	7e 83       	std	Y+6, r23	; 0x06
     32c:	8f 83       	std	Y+7, r24	; 0x07
     32e:	98 87       	std	Y+8, r25	; 0x08
     330:	2f e0       	ldi	r18, 0x0F	; 15
     332:	34 e0       	ldi	r19, 0x04	; 4
     334:	40 e0       	ldi	r20, 0x00	; 0
     336:	5f e3       	ldi	r21, 0x3F	; 63
     338:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     33c:	4b 01       	movw	r8, r22
     33e:	5c 01       	movw	r10, r24
     340:	c7 01       	movw	r24, r14
     342:	b6 01       	movw	r22, r12
     344:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     348:	69 87       	std	Y+9, r22	; 0x09
     34a:	7a 87       	std	Y+10, r23	; 0x0a
     34c:	8b 87       	std	Y+11, r24	; 0x0b
     34e:	9c 87       	std	Y+12, r25	; 0x0c
     350:	20 e8       	ldi	r18, 0x80	; 128
     352:	31 eb       	ldi	r19, 0xB1	; 177
     354:	4d e5       	ldi	r20, 0x5D	; 93
     356:	5f e3       	ldi	r21, 0x3F	; 63
     358:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     35c:	6b 01       	movw	r12, r22
     35e:	7c 01       	movw	r14, r24
     360:	25 e3       	ldi	r18, 0x35	; 53
     362:	3a ef       	ldi	r19, 0xFA	; 250
     364:	4e e8       	ldi	r20, 0x8E	; 142
     366:	5c e3       	ldi	r21, 0x3C	; 60
     368:	6d a1       	ldd	r22, Y+37	; 0x25
     36a:	7e a1       	ldd	r23, Y+38	; 0x26
     36c:	8f a1       	ldd	r24, Y+39	; 0x27
     36e:	98 a5       	ldd	r25, Y+40	; 0x28
     370:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     374:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     378:	69 83       	std	Y+1, r22	; 0x01
     37a:	7a 83       	std	Y+2, r23	; 0x02
     37c:	8b 83       	std	Y+3, r24	; 0x03
     37e:	9c 83       	std	Y+4, r25	; 0x04
     380:	9b 01       	movw	r18, r22
     382:	ac 01       	movw	r20, r24
     384:	c7 01       	movw	r24, r14
     386:	b6 01       	movw	r22, r12
     388:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     38c:	9b 01       	movw	r18, r22
     38e:	ac 01       	movw	r20, r24
     390:	c5 01       	movw	r24, r10
     392:	b4 01       	movw	r22, r8
     394:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     398:	0e 94 82 13 	call	0x2704	; 0x2704 <asin>
     39c:	21 ee       	ldi	r18, 0xE1	; 225
     39e:	3e e2       	ldi	r19, 0x2E	; 46
     3a0:	45 e6       	ldi	r20, 0x65	; 101
     3a2:	52 e4       	ldi	r21, 0x42	; 66
     3a4:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     3a8:	6b 01       	movw	r12, r22
     3aa:	7c 01       	movw	r14, r24
     3ac:	2b ed       	ldi	r18, 0xDB	; 219
     3ae:	3f e0       	ldi	r19, 0x0F	; 15
     3b0:	49 e4       	ldi	r20, 0x49	; 73
     3b2:	50 e4       	ldi	r21, 0x40	; 64
     3b4:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     3b8:	20 e0       	ldi	r18, 0x00	; 0
     3ba:	30 e0       	ldi	r19, 0x00	; 0
     3bc:	44 e3       	ldi	r20, 0x34	; 52
     3be:	53 e4       	ldi	r21, 0x43	; 67
     3c0:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
     3c4:	4b 01       	movw	r8, r22
     3c6:	5c 01       	movw	r10, r24

		
		
		
		if((HRA<0) && (hourD > sunrise && hourD < sunset)){
     3c8:	20 e0       	ldi	r18, 0x00	; 0
     3ca:	30 e0       	ldi	r19, 0x00	; 0
     3cc:	a9 01       	movw	r20, r18
     3ce:	6d a1       	ldd	r22, Y+37	; 0x25
     3d0:	7e a1       	ldd	r23, Y+38	; 0x26
     3d2:	8f a1       	ldd	r24, Y+39	; 0x27
     3d4:	98 a5       	ldd	r25, Y+40	; 0x28
     3d6:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
     3da:	88 23       	and	r24, r24
     3dc:	14 f0       	brlt	.+4      	; 0x3e2 <APP_start+0x28a>
     3de:	0c 94 4f 0a 	jmp	0x149e	; 0x149e <__stack+0xb9f>
     3e2:	29 8d       	ldd	r18, Y+25	; 0x19
     3e4:	3a 8d       	ldd	r19, Y+26	; 0x1a
     3e6:	4b 8d       	ldd	r20, Y+27	; 0x1b
     3e8:	5c 8d       	ldd	r21, Y+28	; 0x1c
     3ea:	c3 01       	movw	r24, r6
     3ec:	b2 01       	movw	r22, r4
     3ee:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__gesf2>
     3f2:	18 16       	cp	r1, r24
     3f4:	14 f0       	brlt	.+4      	; 0x3fa <APP_start+0x2a2>
     3f6:	0c 94 4f 0a 	jmp	0x149e	; 0x149e <__stack+0xb9f>
     3fa:	2d 8d       	ldd	r18, Y+29	; 0x1d
     3fc:	3e 8d       	ldd	r19, Y+30	; 0x1e
     3fe:	4f 8d       	ldd	r20, Y+31	; 0x1f
     400:	58 a1       	ldd	r21, Y+32	; 0x20
     402:	c3 01       	movw	r24, r6
     404:	b2 01       	movw	r22, r4
     406:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
     40a:	88 23       	and	r24, r24
     40c:	14 f0       	brlt	.+4      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
     40e:	0c 94 4f 0a 	jmp	0x149e	; 0x149e <__stack+0xb9f>
			
			float S = 10* (sqrt(alpha - (beta*cos(phi))) - 7.3);
     412:	c5 01       	movw	r24, r10
     414:	b4 01       	movw	r22, r8
     416:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     41a:	25 e1       	ldi	r18, 0x15	; 21
     41c:	3e ea       	ldi	r19, 0xAE	; 174
     41e:	48 e3       	ldi	r20, 0x38	; 56
     420:	54 e4       	ldi	r21, 0x44	; 68
     422:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     426:	4b 01       	movw	r8, r22
     428:	5c 01       	movw	r10, r24
     42a:	a5 01       	movw	r20, r10
     42c:	94 01       	movw	r18, r8
     42e:	65 e1       	ldi	r22, 0x15	; 21
     430:	7e eb       	ldi	r23, 0xBE	; 190
     432:	8d e3       	ldi	r24, 0x3D	; 61
     434:	94 e4       	ldi	r25, 0x44	; 68
     436:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     43a:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <sqrt>
     43e:	2a e9       	ldi	r18, 0x9A	; 154
     440:	39 e9       	ldi	r19, 0x99	; 153
     442:	49 ee       	ldi	r20, 0xE9	; 233
     444:	50 e4       	ldi	r21, 0x40	; 64
     446:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     44a:	20 e0       	ldi	r18, 0x00	; 0
     44c:	30 e0       	ldi	r19, 0x00	; 0
     44e:	40 e2       	ldi	r20, 0x20	; 32
     450:	51 e4       	ldi	r21, 0x41	; 65
     452:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     456:	4b 01       	movw	r8, r22
     458:	5c 01       	movw	r10, r24
			if(elevation>13 && elevation<81){
     45a:	20 e0       	ldi	r18, 0x00	; 0
     45c:	30 e0       	ldi	r19, 0x00	; 0
     45e:	40 e5       	ldi	r20, 0x50	; 80
     460:	51 e4       	ldi	r21, 0x41	; 65
     462:	c7 01       	movw	r24, r14
     464:	b6 01       	movw	r22, r12
     466:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__gesf2>
     46a:	18 16       	cp	r1, r24
     46c:	74 f4       	brge	.+28     	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
     46e:	20 e0       	ldi	r18, 0x00	; 0
     470:	30 e0       	ldi	r19, 0x00	; 0
     472:	42 ea       	ldi	r20, 0xA2	; 162
     474:	52 e4       	ldi	r21, 0x42	; 66
     476:	c7 01       	movw	r24, r14
     478:	b6 01       	movw	r22, r12
     47a:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
     47e:	88 23       	and	r24, r24
     480:	24 f4       	brge	.+8      	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
				step_lin(S);
     482:	c5 01       	movw	r24, r10
     484:	b4 01       	movw	r22, r8
     486:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <step_lin>
			}
			double RefAzimuth = (acos(((sin(declination * conv) * cos(lat * conv)) - (cos(declination * conv) * sin(lat * conv) * cos(HRA * conv))) / (cos(elevation * conv))) * conv2);
     48a:	20 e8       	ldi	r18, 0x80	; 128
     48c:	31 eb       	ldi	r19, 0xB1	; 177
     48e:	4d e5       	ldi	r20, 0x5D	; 93
     490:	5f e3       	ldi	r21, 0x3F	; 63
     492:	6d 81       	ldd	r22, Y+5	; 0x05
     494:	7e 81       	ldd	r23, Y+6	; 0x06
     496:	8f 81       	ldd	r24, Y+7	; 0x07
     498:	98 85       	ldd	r25, Y+8	; 0x08
     49a:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     49e:	2b 01       	movw	r4, r22
     4a0:	3c 01       	movw	r6, r24
     4a2:	2f e0       	ldi	r18, 0x0F	; 15
     4a4:	34 e0       	ldi	r19, 0x04	; 4
     4a6:	40 e0       	ldi	r20, 0x00	; 0
     4a8:	5f e3       	ldi	r21, 0x3F	; 63
     4aa:	69 85       	ldd	r22, Y+9	; 0x09
     4ac:	7a 85       	ldd	r23, Y+10	; 0x0a
     4ae:	8b 85       	ldd	r24, Y+11	; 0x0b
     4b0:	9c 85       	ldd	r25, Y+12	; 0x0c
     4b2:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     4b6:	9b 01       	movw	r18, r22
     4b8:	ac 01       	movw	r20, r24
     4ba:	69 81       	ldd	r22, Y+1	; 0x01
     4bc:	7a 81       	ldd	r23, Y+2	; 0x02
     4be:	8b 81       	ldd	r24, Y+3	; 0x03
     4c0:	9c 81       	ldd	r25, Y+4	; 0x04
     4c2:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     4c6:	9b 01       	movw	r18, r22
     4c8:	ac 01       	movw	r20, r24
     4ca:	c3 01       	movw	r24, r6
     4cc:	b2 01       	movw	r22, r4
     4ce:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     4d2:	2b 01       	movw	r4, r22
     4d4:	3c 01       	movw	r6, r24
     4d6:	25 e3       	ldi	r18, 0x35	; 53
     4d8:	3a ef       	ldi	r19, 0xFA	; 250
     4da:	4e e8       	ldi	r20, 0x8E	; 142
     4dc:	5c e3       	ldi	r21, 0x3C	; 60
     4de:	c7 01       	movw	r24, r14
     4e0:	b6 01       	movw	r22, r12
     4e2:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     4e6:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     4ea:	9b 01       	movw	r18, r22
     4ec:	ac 01       	movw	r20, r24
     4ee:	c3 01       	movw	r24, r6
     4f0:	b2 01       	movw	r22, r4
     4f2:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
     4f6:	0e 94 04 13 	call	0x2608	; 0x2608 <acos>
     4fa:	21 ee       	ldi	r18, 0xE1	; 225
     4fc:	3e e2       	ldi	r19, 0x2E	; 46
     4fe:	45 e6       	ldi	r20, 0x65	; 101
     500:	52 e4       	ldi	r21, 0x42	; 66
     502:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     506:	6d 83       	std	Y+5, r22	; 0x05
     508:	79 87       	std	Y+9, r23	; 0x09
     50a:	28 2e       	mov	r2, r24
     50c:	39 2e       	mov	r3, r25
			
			step(RefAzimuth);
     50e:	0e 94 94 10 	call	0x2128	; 0x2128 <step>
			hourD += 0.166667;
     512:	21 ec       	ldi	r18, 0xC1	; 193
     514:	3a ea       	ldi	r19, 0xAA	; 170
     516:	4a e2       	ldi	r20, 0x2A	; 42
     518:	5e e3       	ldi	r21, 0x3E	; 62
     51a:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <hourD>
     51e:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <hourD+0x1>
     522:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <hourD+0x2>
     526:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <hourD+0x3>
     52a:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     52e:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <hourD>
     532:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <hourD+0x1>
     536:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <hourD+0x2>
     53a:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <hourD+0x3>
			double sunrise2 = sunrise;
			double sunset2 = sunset; 
			double HRA2 = HRA;
			
			while((HRA2<0) && (hourD > sunrise2 && hourD < sunset2)){
     53e:	a4 c4       	rjmp	.+2376   	; 0xe88 <__stack+0x589>
				double LSTM = 15 * GMT;double B = ((double)(360) / (double)(365)) * (days - 81);
     540:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     544:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     548:	61 55       	subi	r22, 0x51	; 81
     54a:	71 09       	sbc	r23, r1
     54c:	07 2e       	mov	r0, r23
     54e:	00 0c       	add	r0, r0
     550:	88 0b       	sbc	r24, r24
     552:	99 0b       	sbc	r25, r25
     554:	0e 94 68 14 	call	0x28d0	; 0x28d0 <__floatsisf>
     558:	2f e3       	ldi	r18, 0x3F	; 63
     55a:	3e e7       	ldi	r19, 0x7E	; 126
     55c:	4c e7       	ldi	r20, 0x7C	; 124
     55e:	5f e3       	ldi	r21, 0x3F	; 63
     560:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     564:	6b 01       	movw	r12, r22
     566:	7c 01       	movw	r14, r24
				double EoT = 9.87 * sin(2 * B * conv) - 7.53 * cos(B * conv) - 1.5 * sin(B * conv);
     568:	9b 01       	movw	r18, r22
     56a:	ac 01       	movw	r20, r24
     56c:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     570:	25 e3       	ldi	r18, 0x35	; 53
     572:	3a ef       	ldi	r19, 0xFA	; 250
     574:	4e e8       	ldi	r20, 0x8E	; 142
     576:	5c e3       	ldi	r21, 0x3C	; 60
     578:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     57c:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
     580:	25 e8       	ldi	r18, 0x85	; 133
     582:	3b ee       	ldi	r19, 0xEB	; 235
     584:	4d e1       	ldi	r20, 0x1D	; 29
     586:	51 e4       	ldi	r21, 0x41	; 65
     588:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     58c:	69 83       	std	Y+1, r22	; 0x01
     58e:	7a 83       	std	Y+2, r23	; 0x02
     590:	8b 83       	std	Y+3, r24	; 0x03
     592:	9c 83       	std	Y+4, r25	; 0x04
     594:	25 e3       	ldi	r18, 0x35	; 53
     596:	3a ef       	ldi	r19, 0xFA	; 250
     598:	4e e8       	ldi	r20, 0x8E	; 142
     59a:	5c e3       	ldi	r21, 0x3C	; 60
     59c:	c7 01       	movw	r24, r14
     59e:	b6 01       	movw	r22, r12
     5a0:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     5a4:	6b 01       	movw	r12, r22
     5a6:	7c 01       	movw	r14, r24
     5a8:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     5ac:	23 ec       	ldi	r18, 0xC3	; 195
     5ae:	35 ef       	ldi	r19, 0xF5	; 245
     5b0:	40 ef       	ldi	r20, 0xF0	; 240
     5b2:	50 e4       	ldi	r21, 0x40	; 64
     5b4:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     5b8:	9b 01       	movw	r18, r22
     5ba:	ac 01       	movw	r20, r24
     5bc:	69 81       	ldd	r22, Y+1	; 0x01
     5be:	7a 81       	ldd	r23, Y+2	; 0x02
     5c0:	8b 81       	ldd	r24, Y+3	; 0x03
     5c2:	9c 81       	ldd	r25, Y+4	; 0x04
     5c4:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     5c8:	69 83       	std	Y+1, r22	; 0x01
     5ca:	7a 83       	std	Y+2, r23	; 0x02
     5cc:	8b 83       	std	Y+3, r24	; 0x03
     5ce:	9c 83       	std	Y+4, r25	; 0x04
     5d0:	c7 01       	movw	r24, r14
     5d2:	b6 01       	movw	r22, r12
     5d4:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
     5d8:	6b 01       	movw	r12, r22
     5da:	7c 01       	movw	r14, r24
     5dc:	20 e0       	ldi	r18, 0x00	; 0
     5de:	30 e0       	ldi	r19, 0x00	; 0
     5e0:	40 ec       	ldi	r20, 0xC0	; 192
     5e2:	5f e3       	ldi	r21, 0x3F	; 63
     5e4:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     5e8:	9b 01       	movw	r18, r22
     5ea:	ac 01       	movw	r20, r24
     5ec:	69 81       	ldd	r22, Y+1	; 0x01
     5ee:	7a 81       	ldd	r23, Y+2	; 0x02
     5f0:	8b 81       	ldd	r24, Y+3	; 0x03
     5f2:	9c 81       	ldd	r25, Y+4	; 0x04
     5f4:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
				double TC = EoT + (4 * (lon - LSTM));double LST = hourD + ((double)(TC) / (double)(60));
     5f8:	20 e7       	ldi	r18, 0x70	; 112
     5fa:	36 ea       	ldi	r19, 0xA6	; 166
     5fc:	49 ed       	ldi	r20, 0xD9	; 217
     5fe:	50 e4       	ldi	r21, 0x40	; 64
     600:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     604:	20 e0       	ldi	r18, 0x00	; 0
     606:	30 e0       	ldi	r19, 0x00	; 0
     608:	40 e7       	ldi	r20, 0x70	; 112
     60a:	52 e4       	ldi	r21, 0x42	; 66
     60c:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
     610:	69 83       	std	Y+1, r22	; 0x01
     612:	7a 83       	std	Y+2, r23	; 0x02
     614:	8b 83       	std	Y+3, r24	; 0x03
     616:	9c 83       	std	Y+4, r25	; 0x04
     618:	9b 01       	movw	r18, r22
     61a:	ac 01       	movw	r20, r24
     61c:	c3 01       	movw	r24, r6
     61e:	b2 01       	movw	r22, r4
     620:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
				double HRA = (15 * (LST - 12));
     624:	20 e0       	ldi	r18, 0x00	; 0
     626:	30 e0       	ldi	r19, 0x00	; 0
     628:	40 e4       	ldi	r20, 0x40	; 64
     62a:	51 e4       	ldi	r21, 0x41	; 65
     62c:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     630:	20 e0       	ldi	r18, 0x00	; 0
     632:	30 e0       	ldi	r19, 0x00	; 0
     634:	40 e7       	ldi	r20, 0x70	; 112
     636:	51 e4       	ldi	r21, 0x41	; 65
     638:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     63c:	6d 8b       	std	Y+21, r22	; 0x15
     63e:	7e 8b       	std	Y+22, r23	; 0x16
     640:	8f 8b       	std	Y+23, r24	; 0x17
     642:	98 8f       	std	Y+24, r25	; 0x18
				double declination = (23.45 * sin(B * conv));			
     644:	2a e9       	ldi	r18, 0x9A	; 154
     646:	39 e9       	ldi	r19, 0x99	; 153
     648:	4b eb       	ldi	r20, 0xBB	; 187
     64a:	51 e4       	ldi	r21, 0x41	; 65
     64c:	c7 01       	movw	r24, r14
     64e:	b6 01       	movw	r22, r12
     650:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
				double sunrise = 12 - ((double)1 / (double)15) * (acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);
     654:	25 e3       	ldi	r18, 0x35	; 53
     656:	3a ef       	ldi	r19, 0xFA	; 250
     658:	4e e8       	ldi	r20, 0x8E	; 142
     65a:	5c e3       	ldi	r21, 0x3C	; 60
     65c:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     660:	6b 01       	movw	r12, r22
     662:	7c 01       	movw	r14, r24
				double sunset = 12 + (((double)1 / (double)15) * acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);
				double elevation = asin(((sin(declination * conv) * sin(lat * conv)) + (cos(declination * conv) * cos(lat * conv) * cos(HRA * conv)))) * conv2;float phi = elevation * PI/180;float alpha = pow(A,2) + pow(Beta,2);float beta = (float)2*A*Beta;
     664:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
     668:	6d 87       	std	Y+13, r22	; 0x0d
     66a:	7e 87       	std	Y+14, r23	; 0x0e
     66c:	8f 87       	std	Y+15, r24	; 0x0f
     66e:	98 8b       	std	Y+16, r25	; 0x10
     670:	2f e0       	ldi	r18, 0x0F	; 15
     672:	34 e0       	ldi	r19, 0x04	; 4
     674:	40 e0       	ldi	r20, 0x00	; 0
     676:	5f e3       	ldi	r21, 0x3F	; 63
     678:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     67c:	2b 01       	movw	r4, r22
     67e:	3c 01       	movw	r6, r24
     680:	c7 01       	movw	r24, r14
     682:	b6 01       	movw	r22, r12
     684:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     688:	69 8b       	std	Y+17, r22	; 0x11
     68a:	7a 8b       	std	Y+18, r23	; 0x12
     68c:	8b 8b       	std	Y+19, r24	; 0x13
     68e:	9c 8b       	std	Y+20, r25	; 0x14
     690:	20 e8       	ldi	r18, 0x80	; 128
     692:	31 eb       	ldi	r19, 0xB1	; 177
     694:	4d e5       	ldi	r20, 0x5D	; 93
     696:	5f e3       	ldi	r21, 0x3F	; 63
     698:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     69c:	6b 01       	movw	r12, r22
     69e:	7c 01       	movw	r14, r24
     6a0:	25 e3       	ldi	r18, 0x35	; 53
     6a2:	3a ef       	ldi	r19, 0xFA	; 250
     6a4:	4e e8       	ldi	r20, 0x8E	; 142
     6a6:	5c e3       	ldi	r21, 0x3C	; 60
     6a8:	6d 89       	ldd	r22, Y+21	; 0x15
     6aa:	7e 89       	ldd	r23, Y+22	; 0x16
     6ac:	8f 89       	ldd	r24, Y+23	; 0x17
     6ae:	98 8d       	ldd	r25, Y+24	; 0x18
     6b0:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     6b4:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     6b8:	6d 8b       	std	Y+21, r22	; 0x15
     6ba:	7e 8b       	std	Y+22, r23	; 0x16
     6bc:	8f 8b       	std	Y+23, r24	; 0x17
     6be:	98 8f       	std	Y+24, r25	; 0x18
     6c0:	9b 01       	movw	r18, r22
     6c2:	ac 01       	movw	r20, r24
     6c4:	c7 01       	movw	r24, r14
     6c6:	b6 01       	movw	r22, r12
     6c8:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     6cc:	9b 01       	movw	r18, r22
     6ce:	ac 01       	movw	r20, r24
     6d0:	c3 01       	movw	r24, r6
     6d2:	b2 01       	movw	r22, r4
     6d4:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     6d8:	0e 94 82 13 	call	0x2704	; 0x2704 <asin>
     6dc:	21 ee       	ldi	r18, 0xE1	; 225
     6de:	3e e2       	ldi	r19, 0x2E	; 46
     6e0:	45 e6       	ldi	r20, 0x65	; 101
     6e2:	52 e4       	ldi	r21, 0x42	; 66
     6e4:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     6e8:	6b 01       	movw	r12, r22
     6ea:	7c 01       	movw	r14, r24
     6ec:	2b ed       	ldi	r18, 0xDB	; 219
     6ee:	3f e0       	ldi	r19, 0x0F	; 15
     6f0:	49 e4       	ldi	r20, 0x49	; 73
     6f2:	50 e4       	ldi	r21, 0x40	; 64
     6f4:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	44 e3       	ldi	r20, 0x34	; 52
     6fe:	53 e4       	ldi	r21, 0x43	; 67
     700:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
				float newS = 10* (sqrt(alpha - (beta*cos(phi))) - 7.3);
     704:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     708:	25 e1       	ldi	r18, 0x15	; 21
     70a:	3e ea       	ldi	r19, 0xAE	; 174
     70c:	48 e3       	ldi	r20, 0x38	; 56
     70e:	54 e4       	ldi	r21, 0x44	; 68
     710:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     714:	2b 01       	movw	r4, r22
     716:	3c 01       	movw	r6, r24
     718:	a3 01       	movw	r20, r6
     71a:	92 01       	movw	r18, r4
     71c:	65 e1       	ldi	r22, 0x15	; 21
     71e:	7e eb       	ldi	r23, 0xBE	; 190
     720:	8d e3       	ldi	r24, 0x3D	; 61
     722:	94 e4       	ldi	r25, 0x44	; 68
     724:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     728:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <sqrt>
     72c:	2a e9       	ldi	r18, 0x9A	; 154
     72e:	39 e9       	ldi	r19, 0x99	; 153
     730:	49 ee       	ldi	r20, 0xE9	; 233
     732:	50 e4       	ldi	r21, 0x40	; 64
     734:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     738:	20 e0       	ldi	r18, 0x00	; 0
     73a:	30 e0       	ldi	r19, 0x00	; 0
     73c:	40 e2       	ldi	r20, 0x20	; 32
     73e:	51 e4       	ldi	r21, 0x41	; 65
     740:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     744:	6e a7       	std	Y+46, r22	; 0x2e
     746:	7d a7       	std	Y+45, r23	; 0x2d
     748:	18 2f       	mov	r17, r24
     74a:	09 2f       	mov	r16, r25
				float diffS = newS - S;
     74c:	a5 01       	movw	r20, r10
     74e:	94 01       	movw	r18, r8
     750:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     754:	4b 01       	movw	r8, r22
     756:	5c 01       	movw	r10, r24
				S = newS;
				if(elevation>13 && elevation<81){
     758:	20 e0       	ldi	r18, 0x00	; 0
     75a:	30 e0       	ldi	r19, 0x00	; 0
     75c:	40 e5       	ldi	r20, 0x50	; 80
     75e:	51 e4       	ldi	r21, 0x41	; 65
     760:	c7 01       	movw	r24, r14
     762:	b6 01       	movw	r22, r12
     764:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__gesf2>
     768:	18 16       	cp	r1, r24
     76a:	74 f4       	brge	.+28     	; 0x788 <__EEPROM_REGION_LENGTH__+0x388>
     76c:	20 e0       	ldi	r18, 0x00	; 0
     76e:	30 e0       	ldi	r19, 0x00	; 0
     770:	42 ea       	ldi	r20, 0xA2	; 162
     772:	52 e4       	ldi	r21, 0x42	; 66
     774:	c7 01       	movw	r24, r14
     776:	b6 01       	movw	r22, r12
     778:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
     77c:	88 23       	and	r24, r24
     77e:	24 f4       	brge	.+8      	; 0x788 <__EEPROM_REGION_LENGTH__+0x388>
					step_lin(diffS);
     780:	c5 01       	movw	r24, r10
     782:	b4 01       	movw	r22, r8
     784:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <step_lin>
				
				}
			
				double NewAzimuth = acos(((sin(declination * conv) * cos(lat * conv)) - (cos(declination * conv) * sin(lat * conv) * cos(HRA * conv))) / (cos(elevation * conv))) * conv2;
     788:	20 e8       	ldi	r18, 0x80	; 128
     78a:	31 eb       	ldi	r19, 0xB1	; 177
     78c:	4d e5       	ldi	r20, 0x5D	; 93
     78e:	5f e3       	ldi	r21, 0x3F	; 63
     790:	6d 85       	ldd	r22, Y+13	; 0x0d
     792:	7e 85       	ldd	r23, Y+14	; 0x0e
     794:	8f 85       	ldd	r24, Y+15	; 0x0f
     796:	98 89       	ldd	r25, Y+16	; 0x10
     798:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     79c:	4b 01       	movw	r8, r22
     79e:	5c 01       	movw	r10, r24
     7a0:	2f e0       	ldi	r18, 0x0F	; 15
     7a2:	34 e0       	ldi	r19, 0x04	; 4
     7a4:	40 e0       	ldi	r20, 0x00	; 0
     7a6:	5f e3       	ldi	r21, 0x3F	; 63
     7a8:	69 89       	ldd	r22, Y+17	; 0x11
     7aa:	7a 89       	ldd	r23, Y+18	; 0x12
     7ac:	8b 89       	ldd	r24, Y+19	; 0x13
     7ae:	9c 89       	ldd	r25, Y+20	; 0x14
     7b0:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     7b4:	9b 01       	movw	r18, r22
     7b6:	ac 01       	movw	r20, r24
     7b8:	6d 89       	ldd	r22, Y+21	; 0x15
     7ba:	7e 89       	ldd	r23, Y+22	; 0x16
     7bc:	8f 89       	ldd	r24, Y+23	; 0x17
     7be:	98 8d       	ldd	r25, Y+24	; 0x18
     7c0:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     7c4:	9b 01       	movw	r18, r22
     7c6:	ac 01       	movw	r20, r24
     7c8:	c5 01       	movw	r24, r10
     7ca:	b4 01       	movw	r22, r8
     7cc:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     7d0:	4b 01       	movw	r8, r22
     7d2:	5c 01       	movw	r10, r24
     7d4:	25 e3       	ldi	r18, 0x35	; 53
     7d6:	3a ef       	ldi	r19, 0xFA	; 250
     7d8:	4e e8       	ldi	r20, 0x8E	; 142
     7da:	5c e3       	ldi	r21, 0x3C	; 60
     7dc:	c7 01       	movw	r24, r14
     7de:	b6 01       	movw	r22, r12
     7e0:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     7e4:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     7e8:	9b 01       	movw	r18, r22
     7ea:	ac 01       	movw	r20, r24
     7ec:	c5 01       	movw	r24, r10
     7ee:	b4 01       	movw	r22, r8
     7f0:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
     7f4:	0e 94 04 13 	call	0x2608	; 0x2608 <acos>
     7f8:	21 ee       	ldi	r18, 0xE1	; 225
     7fa:	3e e2       	ldi	r19, 0x2E	; 46
     7fc:	45 e6       	ldi	r20, 0x65	; 101
     7fe:	52 e4       	ldi	r21, 0x42	; 66
     800:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     804:	69 a7       	std	Y+41, r22	; 0x29
     806:	7a a7       	std	Y+42, r23	; 0x2a
     808:	8b a7       	std	Y+43, r24	; 0x2b
     80a:	9c a7       	std	Y+44, r25	; 0x2c
			
				double diffAzi = NewAzimuth - RefAzimuth;
     80c:	2d 81       	ldd	r18, Y+5	; 0x05
     80e:	39 85       	ldd	r19, Y+9	; 0x09
     810:	42 2d       	mov	r20, r2
     812:	53 2d       	mov	r21, r3
     814:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
				RefAzimuth = NewAzimuth;
				step(diffAzi);
     818:	0e 94 94 10 	call	0x2128	; 0x2128 <step>
				hourD += 0.166667;
     81c:	21 ec       	ldi	r18, 0xC1	; 193
     81e:	3a ea       	ldi	r19, 0xAA	; 170
     820:	4a e2       	ldi	r20, 0x2A	; 42
     822:	5e e3       	ldi	r21, 0x3E	; 62
     824:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <hourD>
     828:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <hourD+0x1>
     82c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <hourD+0x2>
     830:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <hourD+0x3>
     834:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     838:	9b 01       	movw	r18, r22
     83a:	ac 01       	movw	r20, r24
     83c:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <hourD>
     840:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <hourD+0x1>
     844:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <hourD+0x2>
     848:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <hourD+0x3>
				double LSTM2 = 15 * GMT;
				double B2 = ((double)(360) / (double)(365)) * (days - 81);
				double EoT2 = 9.87 * sin(2 * B2 * conv) - 7.53 * cos(B * conv) - 1.5 * sin(B * conv);
				double TC2 = EoT + (4 * (lon - LSTM2));
				double LST2 = hourD + ((double)(TC2) / (double)(60));
     84c:	69 81       	ldd	r22, Y+1	; 0x01
     84e:	7a 81       	ldd	r23, Y+2	; 0x02
     850:	8b 81       	ldd	r24, Y+3	; 0x03
     852:	9c 81       	ldd	r25, Y+4	; 0x04
     854:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
				double HRA2 = (15 * (LST2 - 12));
     858:	20 e0       	ldi	r18, 0x00	; 0
     85a:	30 e0       	ldi	r19, 0x00	; 0
     85c:	40 e4       	ldi	r20, 0x40	; 64
     85e:	51 e4       	ldi	r21, 0x41	; 65
     860:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     864:	20 e0       	ldi	r18, 0x00	; 0
     866:	30 e0       	ldi	r19, 0x00	; 0
     868:	40 e7       	ldi	r20, 0x70	; 112
     86a:	51 e4       	ldi	r21, 0x41	; 65
     86c:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     870:	69 a3       	std	Y+33, r22	; 0x21
     872:	7a a3       	std	Y+34, r23	; 0x22
     874:	8b a3       	std	Y+35, r24	; 0x23
     876:	9c a3       	std	Y+36, r25	; 0x24
				double declination2 = (23.45 * sin(B2 * conv));			
				double sunrise2 = 12 - ((double)1 / (double)15) * (acos(-tan(lat * conv) * tan(declination2 * conv)) * conv2) - (TC2 / 60);
				double sunset2 = 12 + (((double)1 / (double)15) * acos(-tan(lat * conv) * tan(declination2 * conv)) * conv2) - (TC2 / 60);
				if(HRA2>0){
     878:	20 e0       	ldi	r18, 0x00	; 0
     87a:	30 e0       	ldi	r19, 0x00	; 0
     87c:	a9 01       	movw	r20, r18
     87e:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__gesf2>
     882:	18 16       	cp	r1, r24
     884:	0c f4       	brge	.+2      	; 0x888 <__DATA_REGION_LENGTH__+0x88>
     886:	d8 c2       	rjmp	.+1456   	; 0xe38 <__stack+0x539>
				double sunrise = 12 - ((double)1 / (double)15) * (acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);
				double sunset = 12 + (((double)1 / (double)15) * acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);
				double elevation = asin(((sin(declination * conv) * sin(lat * conv)) + (cos(declination * conv) * cos(lat * conv) * cos(HRA * conv)))) * conv2;float phi = elevation * PI/180;float alpha = pow(A,2) + pow(Beta,2);float beta = (float)2*A*Beta;
				float newS = 10* (sqrt(alpha - (beta*cos(phi))) - 7.3);
				float diffS = newS - S;
				S = newS;
     888:	8e a4       	ldd	r8, Y+46	; 0x2e
     88a:	9d a4       	ldd	r9, Y+45	; 0x2d
     88c:	a1 2e       	mov	r10, r17
     88e:	b0 2e       	mov	r11, r16
     890:	f5 c2       	rjmp	.+1514   	; 0xe7c <__stack+0x57d>
				double declination2 = (23.45 * sin(B2 * conv));			
				double sunrise2 = 12 - ((double)1 / (double)15) * (acos(-tan(lat * conv) * tan(declination2 * conv)) * conv2) - (TC2 / 60);
				double sunset2 = 12 + (((double)1 / (double)15) * acos(-tan(lat * conv) * tan(declination2 * conv)) * conv2) - (TC2 / 60);
				if(HRA2>0){
					while(HRA2>0){
						double LSTM = 15 * GMT;double B = ((double)(360) / (double)(365)) * (days - 81);double EoT = 9.87 * sin(2 * B * conv) - 7.53 * cos(B * conv) - 1.5 * sin(B * conv);double TC = EoT + (4 * (lon - LSTM));double LST = hourD + ((double)(TC) / (double)(60));double HRA = (15 * (LST - 12));double declination = (23.45 * sin(B * conv));double sunrise = 12 - ((double)1 / (double)15) * (acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);double sunset = 12 + (((double)1 / (double)15) * acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);double elevation = asin(((sin(declination * conv) * sin(lat * conv)) + (cos(declination * conv) * cos(lat * conv) * cos(HRA * conv)))) * conv2;
     892:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     896:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     89a:	61 55       	subi	r22, 0x51	; 81
     89c:	71 09       	sbc	r23, r1
     89e:	07 2e       	mov	r0, r23
     8a0:	00 0c       	add	r0, r0
     8a2:	88 0b       	sbc	r24, r24
     8a4:	99 0b       	sbc	r25, r25
     8a6:	0e 94 68 14 	call	0x28d0	; 0x28d0 <__floatsisf>
     8aa:	2f e3       	ldi	r18, 0x3F	; 63
     8ac:	3e e7       	ldi	r19, 0x7E	; 126
     8ae:	4c e7       	ldi	r20, 0x7C	; 124
     8b0:	5f e3       	ldi	r21, 0x3F	; 63
     8b2:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     8b6:	4b 01       	movw	r8, r22
     8b8:	5c 01       	movw	r10, r24
     8ba:	9b 01       	movw	r18, r22
     8bc:	ac 01       	movw	r20, r24
     8be:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     8c2:	25 e3       	ldi	r18, 0x35	; 53
     8c4:	3a ef       	ldi	r19, 0xFA	; 250
     8c6:	4e e8       	ldi	r20, 0x8E	; 142
     8c8:	5c e3       	ldi	r21, 0x3C	; 60
     8ca:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     8ce:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
     8d2:	25 e8       	ldi	r18, 0x85	; 133
     8d4:	3b ee       	ldi	r19, 0xEB	; 235
     8d6:	4d e1       	ldi	r20, 0x1D	; 29
     8d8:	51 e4       	ldi	r21, 0x41	; 65
     8da:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     8de:	6b 01       	movw	r12, r22
     8e0:	7c 01       	movw	r14, r24
     8e2:	25 e3       	ldi	r18, 0x35	; 53
     8e4:	3a ef       	ldi	r19, 0xFA	; 250
     8e6:	4e e8       	ldi	r20, 0x8E	; 142
     8e8:	5c e3       	ldi	r21, 0x3C	; 60
     8ea:	c5 01       	movw	r24, r10
     8ec:	b4 01       	movw	r22, r8
     8ee:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     8f2:	4b 01       	movw	r8, r22
     8f4:	5c 01       	movw	r10, r24
     8f6:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     8fa:	23 ec       	ldi	r18, 0xC3	; 195
     8fc:	35 ef       	ldi	r19, 0xF5	; 245
     8fe:	40 ef       	ldi	r20, 0xF0	; 240
     900:	50 e4       	ldi	r21, 0x40	; 64
     902:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     906:	9b 01       	movw	r18, r22
     908:	ac 01       	movw	r20, r24
     90a:	c7 01       	movw	r24, r14
     90c:	b6 01       	movw	r22, r12
     90e:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     912:	6b 01       	movw	r12, r22
     914:	7c 01       	movw	r14, r24
     916:	c5 01       	movw	r24, r10
     918:	b4 01       	movw	r22, r8
     91a:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
     91e:	4b 01       	movw	r8, r22
     920:	5c 01       	movw	r10, r24
     922:	20 e0       	ldi	r18, 0x00	; 0
     924:	30 e0       	ldi	r19, 0x00	; 0
     926:	40 ec       	ldi	r20, 0xC0	; 192
     928:	5f e3       	ldi	r21, 0x3F	; 63
     92a:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     92e:	9b 01       	movw	r18, r22
     930:	ac 01       	movw	r20, r24
     932:	c7 01       	movw	r24, r14
     934:	b6 01       	movw	r22, r12
     936:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     93a:	20 e7       	ldi	r18, 0x70	; 112
     93c:	36 ea       	ldi	r19, 0xA6	; 166
     93e:	49 ed       	ldi	r20, 0xD9	; 217
     940:	50 e4       	ldi	r21, 0x40	; 64
     942:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     946:	20 e0       	ldi	r18, 0x00	; 0
     948:	30 e0       	ldi	r19, 0x00	; 0
     94a:	40 e7       	ldi	r20, 0x70	; 112
     94c:	52 e4       	ldi	r21, 0x42	; 66
     94e:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
     952:	6b 01       	movw	r12, r22
     954:	7c 01       	movw	r14, r24
     956:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <hourD>
     95a:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <hourD+0x1>
     95e:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <hourD+0x2>
     962:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <hourD+0x3>
     966:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     96a:	20 e0       	ldi	r18, 0x00	; 0
     96c:	30 e0       	ldi	r19, 0x00	; 0
     96e:	40 e4       	ldi	r20, 0x40	; 64
     970:	51 e4       	ldi	r21, 0x41	; 65
     972:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     976:	20 e0       	ldi	r18, 0x00	; 0
     978:	30 e0       	ldi	r19, 0x00	; 0
     97a:	40 e7       	ldi	r20, 0x70	; 112
     97c:	51 e4       	ldi	r21, 0x41	; 65
     97e:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     982:	2b 01       	movw	r4, r22
     984:	3c 01       	movw	r6, r24
     986:	2a e9       	ldi	r18, 0x9A	; 154
     988:	39 e9       	ldi	r19, 0x99	; 153
     98a:	4b eb       	ldi	r20, 0xBB	; 187
     98c:	51 e4       	ldi	r21, 0x41	; 65
     98e:	c5 01       	movw	r24, r10
     990:	b4 01       	movw	r22, r8
     992:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     996:	25 e3       	ldi	r18, 0x35	; 53
     998:	3a ef       	ldi	r19, 0xFA	; 250
     99a:	4e e8       	ldi	r20, 0x8E	; 142
     99c:	5c e3       	ldi	r21, 0x3C	; 60
     99e:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     9a2:	4b 01       	movw	r8, r22
     9a4:	5c 01       	movw	r10, r24
     9a6:	0e 94 ee 16 	call	0x2ddc	; 0x2ddc <tan>
     9aa:	29 e7       	ldi	r18, 0x79	; 121
     9ac:	33 ed       	ldi	r19, 0xD3	; 211
     9ae:	43 e1       	ldi	r20, 0x13	; 19
     9b0:	5f eb       	ldi	r21, 0xBF	; 191
     9b2:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     9b6:	0e 94 04 13 	call	0x2608	; 0x2608 <acos>
     9ba:	29 e8       	ldi	r18, 0x89	; 137
     9bc:	38 e8       	ldi	r19, 0x88	; 136
     9be:	48 e8       	ldi	r20, 0x88	; 136
     9c0:	5d e3       	ldi	r21, 0x3D	; 61
     9c2:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     9c6:	21 ee       	ldi	r18, 0xE1	; 225
     9c8:	3e e2       	ldi	r19, 0x2E	; 46
     9ca:	45 e6       	ldi	r20, 0x65	; 101
     9cc:	52 e4       	ldi	r21, 0x42	; 66
     9ce:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     9d2:	20 e0       	ldi	r18, 0x00	; 0
     9d4:	30 e0       	ldi	r19, 0x00	; 0
     9d6:	40 e4       	ldi	r20, 0x40	; 64
     9d8:	51 e4       	ldi	r21, 0x41	; 65
     9da:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     9de:	a7 01       	movw	r20, r14
     9e0:	96 01       	movw	r18, r12
     9e2:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     9e6:	6d 8b       	std	Y+21, r22	; 0x15
     9e8:	7e 8b       	std	Y+22, r23	; 0x16
     9ea:	8f 8b       	std	Y+23, r24	; 0x17
     9ec:	98 8f       	std	Y+24, r25	; 0x18
     9ee:	c5 01       	movw	r24, r10
     9f0:	b4 01       	movw	r22, r8
     9f2:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
     9f6:	6d 83       	std	Y+5, r22	; 0x05
     9f8:	7e 83       	std	Y+6, r23	; 0x06
     9fa:	8f 83       	std	Y+7, r24	; 0x07
     9fc:	98 87       	std	Y+8, r25	; 0x08
     9fe:	2f e0       	ldi	r18, 0x0F	; 15
     a00:	34 e0       	ldi	r19, 0x04	; 4
     a02:	40 e0       	ldi	r20, 0x00	; 0
     a04:	5f e3       	ldi	r21, 0x3F	; 63
     a06:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     a0a:	6b 01       	movw	r12, r22
     a0c:	7c 01       	movw	r14, r24
     a0e:	c5 01       	movw	r24, r10
     a10:	b4 01       	movw	r22, r8
     a12:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     a16:	69 87       	std	Y+9, r22	; 0x09
     a18:	7a 87       	std	Y+10, r23	; 0x0a
     a1a:	8b 87       	std	Y+11, r24	; 0x0b
     a1c:	9c 87       	std	Y+12, r25	; 0x0c
     a1e:	20 e8       	ldi	r18, 0x80	; 128
     a20:	31 eb       	ldi	r19, 0xB1	; 177
     a22:	4d e5       	ldi	r20, 0x5D	; 93
     a24:	5f e3       	ldi	r21, 0x3F	; 63
     a26:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     a2a:	4b 01       	movw	r8, r22
     a2c:	5c 01       	movw	r10, r24
     a2e:	25 e3       	ldi	r18, 0x35	; 53
     a30:	3a ef       	ldi	r19, 0xFA	; 250
     a32:	4e e8       	ldi	r20, 0x8E	; 142
     a34:	5c e3       	ldi	r21, 0x3C	; 60
     a36:	c3 01       	movw	r24, r6
     a38:	b2 01       	movw	r22, r4
     a3a:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     a3e:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     a42:	69 83       	std	Y+1, r22	; 0x01
     a44:	7a 83       	std	Y+2, r23	; 0x02
     a46:	8b 83       	std	Y+3, r24	; 0x03
     a48:	9c 83       	std	Y+4, r25	; 0x04
     a4a:	9b 01       	movw	r18, r22
     a4c:	ac 01       	movw	r20, r24
     a4e:	c5 01       	movw	r24, r10
     a50:	b4 01       	movw	r22, r8
     a52:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     a56:	9b 01       	movw	r18, r22
     a58:	ac 01       	movw	r20, r24
     a5a:	c7 01       	movw	r24, r14
     a5c:	b6 01       	movw	r22, r12
     a5e:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     a62:	0e 94 82 13 	call	0x2704	; 0x2704 <asin>
     a66:	21 ee       	ldi	r18, 0xE1	; 225
     a68:	3e e2       	ldi	r19, 0x2E	; 46
     a6a:	45 e6       	ldi	r20, 0x65	; 101
     a6c:	52 e4       	ldi	r21, 0x42	; 66
     a6e:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     a72:	6b 01       	movw	r12, r22
     a74:	7c 01       	movw	r14, r24
						float phi =  -1*elevation * PI/180;
     a76:	90 58       	subi	r25, 0x80	; 128
     a78:	2b ed       	ldi	r18, 0xDB	; 219
     a7a:	3f e0       	ldi	r19, 0x0F	; 15
     a7c:	49 e4       	ldi	r20, 0x49	; 73
     a7e:	50 e4       	ldi	r21, 0x40	; 64
     a80:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     a84:	20 e0       	ldi	r18, 0x00	; 0
     a86:	30 e0       	ldi	r19, 0x00	; 0
     a88:	44 e3       	ldi	r20, 0x34	; 52
     a8a:	53 e4       	ldi	r21, 0x43	; 67
     a8c:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
						float alpha = pow(A,2) + pow(Beta,2); //7
						float beta = (float)2*A*Beta;
						float newS = fabs(10* (sqrt(alpha - (beta*cos(phi))) - 7.3));
     a90:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     a94:	25 e1       	ldi	r18, 0x15	; 21
     a96:	3e ea       	ldi	r19, 0xAE	; 174
     a98:	48 e3       	ldi	r20, 0x38	; 56
     a9a:	54 e4       	ldi	r21, 0x44	; 68
     a9c:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     aa0:	4b 01       	movw	r8, r22
     aa2:	5c 01       	movw	r10, r24
     aa4:	a5 01       	movw	r20, r10
     aa6:	94 01       	movw	r18, r8
     aa8:	65 e1       	ldi	r22, 0x15	; 21
     aaa:	7e eb       	ldi	r23, 0xBE	; 190
     aac:	8d e3       	ldi	r24, 0x3D	; 61
     aae:	94 e4       	ldi	r25, 0x44	; 68
     ab0:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     ab4:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <sqrt>
     ab8:	2a e9       	ldi	r18, 0x9A	; 154
     aba:	39 e9       	ldi	r19, 0x99	; 153
     abc:	49 ee       	ldi	r20, 0xE9	; 233
     abe:	50 e4       	ldi	r21, 0x40	; 64
     ac0:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     ac4:	20 e0       	ldi	r18, 0x00	; 0
     ac6:	30 e0       	ldi	r19, 0x00	; 0
     ac8:	40 e2       	ldi	r20, 0x20	; 32
     aca:	51 e4       	ldi	r21, 0x41	; 65
     acc:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     ad0:	4b 01       	movw	r8, r22
     ad2:	5c 01       	movw	r10, r24
     ad4:	e8 94       	clt
     ad6:	b7 f8       	bld	r11, 7
						float diffS = newS - S;
     ad8:	2e a5       	ldd	r18, Y+46	; 0x2e
     ada:	3d a5       	ldd	r19, Y+45	; 0x2d
     adc:	41 2f       	mov	r20, r17
     ade:	50 2f       	mov	r21, r16
     ae0:	c5 01       	movw	r24, r10
     ae2:	b4 01       	movw	r22, r8
     ae4:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     ae8:	2b 01       	movw	r4, r22
     aea:	3c 01       	movw	r6, r24
						S = newS;
						if(elevation>13 && elevation<81){
     aec:	20 e0       	ldi	r18, 0x00	; 0
     aee:	30 e0       	ldi	r19, 0x00	; 0
     af0:	40 e5       	ldi	r20, 0x50	; 80
     af2:	51 e4       	ldi	r21, 0x41	; 65
     af4:	c7 01       	movw	r24, r14
     af6:	b6 01       	movw	r22, r12
     af8:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__gesf2>
     afc:	18 16       	cp	r1, r24
     afe:	74 f4       	brge	.+28     	; 0xb1c <__stack+0x21d>
     b00:	20 e0       	ldi	r18, 0x00	; 0
     b02:	30 e0       	ldi	r19, 0x00	; 0
     b04:	42 ea       	ldi	r20, 0xA2	; 162
     b06:	52 e4       	ldi	r21, 0x42	; 66
     b08:	c7 01       	movw	r24, r14
     b0a:	b6 01       	movw	r22, r12
     b0c:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
     b10:	88 23       	and	r24, r24
     b12:	24 f4       	brge	.+8      	; 0xb1c <__stack+0x21d>
							step_lin(diffS);
     b14:	c3 01       	movw	r24, r6
     b16:	b2 01       	movw	r22, r4
     b18:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <step_lin>
						}
					
						double NewAzimuth2 = 360 - (acos(((sin(declination * conv) * cos(lat * conv)) - (cos(declination * conv) * sin(lat * conv) * cos(HRA * conv))) / (cos(elevation * conv))) * conv2);
     b1c:	20 e8       	ldi	r18, 0x80	; 128
     b1e:	31 eb       	ldi	r19, 0xB1	; 177
     b20:	4d e5       	ldi	r20, 0x5D	; 93
     b22:	5f e3       	ldi	r21, 0x3F	; 63
     b24:	6d 81       	ldd	r22, Y+5	; 0x05
     b26:	7e 81       	ldd	r23, Y+6	; 0x06
     b28:	8f 81       	ldd	r24, Y+7	; 0x07
     b2a:	98 85       	ldd	r25, Y+8	; 0x08
     b2c:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     b30:	2b 01       	movw	r4, r22
     b32:	3c 01       	movw	r6, r24
     b34:	2f e0       	ldi	r18, 0x0F	; 15
     b36:	34 e0       	ldi	r19, 0x04	; 4
     b38:	40 e0       	ldi	r20, 0x00	; 0
     b3a:	5f e3       	ldi	r21, 0x3F	; 63
     b3c:	69 85       	ldd	r22, Y+9	; 0x09
     b3e:	7a 85       	ldd	r23, Y+10	; 0x0a
     b40:	8b 85       	ldd	r24, Y+11	; 0x0b
     b42:	9c 85       	ldd	r25, Y+12	; 0x0c
     b44:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     b48:	9b 01       	movw	r18, r22
     b4a:	ac 01       	movw	r20, r24
     b4c:	69 81       	ldd	r22, Y+1	; 0x01
     b4e:	7a 81       	ldd	r23, Y+2	; 0x02
     b50:	8b 81       	ldd	r24, Y+3	; 0x03
     b52:	9c 81       	ldd	r25, Y+4	; 0x04
     b54:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     b58:	9b 01       	movw	r18, r22
     b5a:	ac 01       	movw	r20, r24
     b5c:	c3 01       	movw	r24, r6
     b5e:	b2 01       	movw	r22, r4
     b60:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     b64:	2b 01       	movw	r4, r22
     b66:	3c 01       	movw	r6, r24
     b68:	25 e3       	ldi	r18, 0x35	; 53
     b6a:	3a ef       	ldi	r19, 0xFA	; 250
     b6c:	4e e8       	ldi	r20, 0x8E	; 142
     b6e:	5c e3       	ldi	r21, 0x3C	; 60
     b70:	c7 01       	movw	r24, r14
     b72:	b6 01       	movw	r22, r12
     b74:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     b78:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     b7c:	9b 01       	movw	r18, r22
     b7e:	ac 01       	movw	r20, r24
     b80:	c3 01       	movw	r24, r6
     b82:	b2 01       	movw	r22, r4
     b84:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
     b88:	0e 94 04 13 	call	0x2608	; 0x2608 <acos>
     b8c:	21 ee       	ldi	r18, 0xE1	; 225
     b8e:	3e e2       	ldi	r19, 0x2E	; 46
     b90:	45 e6       	ldi	r20, 0x65	; 101
     b92:	52 e4       	ldi	r21, 0x42	; 66
     b94:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     b98:	9b 01       	movw	r18, r22
     b9a:	ac 01       	movw	r20, r24
     b9c:	60 e0       	ldi	r22, 0x00	; 0
     b9e:	70 e0       	ldi	r23, 0x00	; 0
     ba0:	84 eb       	ldi	r24, 0xB4	; 180
     ba2:	93 e4       	ldi	r25, 0x43	; 67
     ba4:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     ba8:	06 2f       	mov	r16, r22
     baa:	17 2f       	mov	r17, r23
     bac:	8d 83       	std	Y+5, r24	; 0x05
     bae:	99 83       	std	Y+1, r25	; 0x01
					
						double diffAzi1 = NewAzimuth2 - NewAzimuth;
     bb0:	23 2d       	mov	r18, r3
     bb2:	32 2d       	mov	r19, r2
     bb4:	4d 85       	ldd	r20, Y+13	; 0x0d
     bb6:	59 89       	ldd	r21, Y+17	; 0x11
     bb8:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
						NewAzimuth = NewAzimuth2;
						step(diffAzi1);
     bbc:	0e 94 94 10 	call	0x2128	; 0x2128 <step>
						hourD += 0.166667;
     bc0:	21 ec       	ldi	r18, 0xC1	; 193
     bc2:	3a ea       	ldi	r19, 0xAA	; 170
     bc4:	4a e2       	ldi	r20, 0x2A	; 42
     bc6:	5e e3       	ldi	r21, 0x3E	; 62
     bc8:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <hourD>
     bcc:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <hourD+0x1>
     bd0:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <hourD+0x2>
     bd4:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <hourD+0x3>
     bd8:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     bdc:	9b 01       	movw	r18, r22
     bde:	ac 01       	movw	r20, r24
     be0:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <hourD>
     be4:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <hourD+0x1>
     be8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <hourD+0x2>
     bec:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <hourD+0x3>
						if(hourD > sunset){
     bf0:	6d 89       	ldd	r22, Y+21	; 0x15
     bf2:	7e 89       	ldd	r23, Y+22	; 0x16
     bf4:	8f 89       	ldd	r24, Y+23	; 0x17
     bf6:	98 8d       	ldd	r25, Y+24	; 0x18
     bf8:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
     bfc:	88 23       	and	r24, r24
     bfe:	0c f0       	brlt	.+2      	; 0xc02 <__stack+0x303>
     c00:	22 c1       	rjmp	.+580    	; 0xe46 <__stack+0x547>
							STEPPER_off(STEPPER_PORT,DIR_PIN); //CW
     c02:	62 e0       	ldi	r22, 0x02	; 2
     c04:	84 e4       	ldi	r24, 0x44	; 68
     c06:	0e 94 90 10 	call	0x2120	; 0x2120 <STEPPER_off>
							double LSTM = 15 * GMT;double B = ((double)(360) / (double)(365)) * (days - 81);double EoT = 9.87 * sin(2 * B * conv) - 7.53 * cos(B * conv) - 1.5 * sin(B * conv);double TC = EoT + (4 * (lon - LSTM));double LST = hourD + ((double)(TC) / (double)(60));double HRA = (15 * (LST - 12));double declination = (23.45 * sin(B * conv));double elevation = asin(((sin(declination * conv) * sin(lat * conv)) + (cos(declination * conv) * cos(lat * conv) * cos(HRA * conv)))) * conv2;double sunrise = 12 - ((double)1 / (double)15) * (acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);double sunset = 12 + (((double)1 / (double)15) * acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);
     c0a:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     c0e:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     c12:	61 55       	subi	r22, 0x51	; 81
     c14:	71 09       	sbc	r23, r1
     c16:	07 2e       	mov	r0, r23
     c18:	00 0c       	add	r0, r0
     c1a:	88 0b       	sbc	r24, r24
     c1c:	99 0b       	sbc	r25, r25
     c1e:	0e 94 68 14 	call	0x28d0	; 0x28d0 <__floatsisf>
     c22:	2f e3       	ldi	r18, 0x3F	; 63
     c24:	3e e7       	ldi	r19, 0x7E	; 126
     c26:	4c e7       	ldi	r20, 0x7C	; 124
     c28:	5f e3       	ldi	r21, 0x3F	; 63
     c2a:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     c2e:	6b 01       	movw	r12, r22
     c30:	7c 01       	movw	r14, r24
     c32:	9b 01       	movw	r18, r22
     c34:	ac 01       	movw	r20, r24
     c36:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     c3a:	25 e3       	ldi	r18, 0x35	; 53
     c3c:	3a ef       	ldi	r19, 0xFA	; 250
     c3e:	4e e8       	ldi	r20, 0x8E	; 142
     c40:	5c e3       	ldi	r21, 0x3C	; 60
     c42:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     c46:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
     c4a:	25 e8       	ldi	r18, 0x85	; 133
     c4c:	3b ee       	ldi	r19, 0xEB	; 235
     c4e:	4d e1       	ldi	r20, 0x1D	; 29
     c50:	51 e4       	ldi	r21, 0x41	; 65
     c52:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     c56:	2b 01       	movw	r4, r22
     c58:	3c 01       	movw	r6, r24
     c5a:	25 e3       	ldi	r18, 0x35	; 53
     c5c:	3a ef       	ldi	r19, 0xFA	; 250
     c5e:	4e e8       	ldi	r20, 0x8E	; 142
     c60:	5c e3       	ldi	r21, 0x3C	; 60
     c62:	c7 01       	movw	r24, r14
     c64:	b6 01       	movw	r22, r12
     c66:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     c6a:	6b 01       	movw	r12, r22
     c6c:	7c 01       	movw	r14, r24
     c6e:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     c72:	23 ec       	ldi	r18, 0xC3	; 195
     c74:	35 ef       	ldi	r19, 0xF5	; 245
     c76:	40 ef       	ldi	r20, 0xF0	; 240
     c78:	50 e4       	ldi	r21, 0x40	; 64
     c7a:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     c7e:	9b 01       	movw	r18, r22
     c80:	ac 01       	movw	r20, r24
     c82:	c3 01       	movw	r24, r6
     c84:	b2 01       	movw	r22, r4
     c86:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     c8a:	2b 01       	movw	r4, r22
     c8c:	3c 01       	movw	r6, r24
     c8e:	c7 01       	movw	r24, r14
     c90:	b6 01       	movw	r22, r12
     c92:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
     c96:	6b 01       	movw	r12, r22
     c98:	7c 01       	movw	r14, r24
     c9a:	20 e0       	ldi	r18, 0x00	; 0
     c9c:	30 e0       	ldi	r19, 0x00	; 0
     c9e:	40 ec       	ldi	r20, 0xC0	; 192
     ca0:	5f e3       	ldi	r21, 0x3F	; 63
     ca2:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     ca6:	9b 01       	movw	r18, r22
     ca8:	ac 01       	movw	r20, r24
     caa:	c3 01       	movw	r24, r6
     cac:	b2 01       	movw	r22, r4
     cae:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     cb2:	20 e7       	ldi	r18, 0x70	; 112
     cb4:	36 ea       	ldi	r19, 0xA6	; 166
     cb6:	49 ed       	ldi	r20, 0xD9	; 217
     cb8:	50 e4       	ldi	r21, 0x40	; 64
     cba:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     cbe:	20 e0       	ldi	r18, 0x00	; 0
     cc0:	30 e0       	ldi	r19, 0x00	; 0
     cc2:	40 e7       	ldi	r20, 0x70	; 112
     cc4:	52 e4       	ldi	r21, 0x42	; 66
     cc6:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
     cca:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <hourD>
     cce:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <hourD+0x1>
     cd2:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <hourD+0x2>
     cd6:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <hourD+0x3>
     cda:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     cde:	20 e0       	ldi	r18, 0x00	; 0
     ce0:	30 e0       	ldi	r19, 0x00	; 0
     ce2:	40 e4       	ldi	r20, 0x40	; 64
     ce4:	51 e4       	ldi	r21, 0x41	; 65
     ce6:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     cea:	20 e0       	ldi	r18, 0x00	; 0
     cec:	30 e0       	ldi	r19, 0x00	; 0
     cee:	40 e7       	ldi	r20, 0x70	; 112
     cf0:	51 e4       	ldi	r21, 0x41	; 65
     cf2:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     cf6:	2b 01       	movw	r4, r22
     cf8:	3c 01       	movw	r6, r24
     cfa:	2a e9       	ldi	r18, 0x9A	; 154
     cfc:	39 e9       	ldi	r19, 0x99	; 153
     cfe:	4b eb       	ldi	r20, 0xBB	; 187
     d00:	51 e4       	ldi	r21, 0x41	; 65
     d02:	c7 01       	movw	r24, r14
     d04:	b6 01       	movw	r22, r12
     d06:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     d0a:	25 e3       	ldi	r18, 0x35	; 53
     d0c:	3a ef       	ldi	r19, 0xFA	; 250
     d0e:	4e e8       	ldi	r20, 0x8E	; 142
     d10:	5c e3       	ldi	r21, 0x3C	; 60
     d12:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     d16:	6b 01       	movw	r12, r22
     d18:	7c 01       	movw	r14, r24
     d1a:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
     d1e:	6d 83       	std	Y+5, r22	; 0x05
     d20:	7e 83       	std	Y+6, r23	; 0x06
     d22:	8f 83       	std	Y+7, r24	; 0x07
     d24:	98 87       	std	Y+8, r25	; 0x08
     d26:	2f e0       	ldi	r18, 0x0F	; 15
     d28:	34 e0       	ldi	r19, 0x04	; 4
     d2a:	40 e0       	ldi	r20, 0x00	; 0
     d2c:	5f e3       	ldi	r21, 0x3F	; 63
     d2e:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     d32:	69 83       	std	Y+1, r22	; 0x01
     d34:	7a 83       	std	Y+2, r23	; 0x02
     d36:	8b 83       	std	Y+3, r24	; 0x03
     d38:	9c 83       	std	Y+4, r25	; 0x04
     d3a:	c7 01       	movw	r24, r14
     d3c:	b6 01       	movw	r22, r12
     d3e:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     d42:	69 87       	std	Y+9, r22	; 0x09
     d44:	7a 87       	std	Y+10, r23	; 0x0a
     d46:	8b 87       	std	Y+11, r24	; 0x0b
     d48:	9c 87       	std	Y+12, r25	; 0x0c
     d4a:	20 e8       	ldi	r18, 0x80	; 128
     d4c:	31 eb       	ldi	r19, 0xB1	; 177
     d4e:	4d e5       	ldi	r20, 0x5D	; 93
     d50:	5f e3       	ldi	r21, 0x3F	; 63
     d52:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     d56:	6b 01       	movw	r12, r22
     d58:	7c 01       	movw	r14, r24
     d5a:	25 e3       	ldi	r18, 0x35	; 53
     d5c:	3a ef       	ldi	r19, 0xFA	; 250
     d5e:	4e e8       	ldi	r20, 0x8E	; 142
     d60:	5c e3       	ldi	r21, 0x3C	; 60
     d62:	c3 01       	movw	r24, r6
     d64:	b2 01       	movw	r22, r4
     d66:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     d6a:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     d6e:	2b 01       	movw	r4, r22
     d70:	3c 01       	movw	r6, r24
     d72:	9b 01       	movw	r18, r22
     d74:	ac 01       	movw	r20, r24
     d76:	c7 01       	movw	r24, r14
     d78:	b6 01       	movw	r22, r12
     d7a:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     d7e:	9b 01       	movw	r18, r22
     d80:	ac 01       	movw	r20, r24
     d82:	69 81       	ldd	r22, Y+1	; 0x01
     d84:	7a 81       	ldd	r23, Y+2	; 0x02
     d86:	8b 81       	ldd	r24, Y+3	; 0x03
     d88:	9c 81       	ldd	r25, Y+4	; 0x04
     d8a:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     d8e:	0e 94 82 13 	call	0x2704	; 0x2704 <asin>
     d92:	21 ee       	ldi	r18, 0xE1	; 225
     d94:	3e e2       	ldi	r19, 0x2E	; 46
     d96:	45 e6       	ldi	r20, 0x65	; 101
     d98:	52 e4       	ldi	r21, 0x42	; 66
     d9a:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     d9e:	6b 01       	movw	r12, r22
     da0:	7c 01       	movw	r14, r24
							double finAzimuth = (360 - (acos(((sin(declination * conv) * cos(lat * conv)) - (cos(declination * conv) * sin(lat * conv) * cos(HRA * conv))) / (cos(elevation * conv))) * conv2));
     da2:	20 e8       	ldi	r18, 0x80	; 128
     da4:	31 eb       	ldi	r19, 0xB1	; 177
     da6:	4d e5       	ldi	r20, 0x5D	; 93
     da8:	5f e3       	ldi	r21, 0x3F	; 63
     daa:	6d 81       	ldd	r22, Y+5	; 0x05
     dac:	7e 81       	ldd	r23, Y+6	; 0x06
     dae:	8f 81       	ldd	r24, Y+7	; 0x07
     db0:	98 85       	ldd	r25, Y+8	; 0x08
     db2:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     db6:	6d 83       	std	Y+5, r22	; 0x05
     db8:	7e 83       	std	Y+6, r23	; 0x06
     dba:	8f 83       	std	Y+7, r24	; 0x07
     dbc:	98 87       	std	Y+8, r25	; 0x08
     dbe:	2f e0       	ldi	r18, 0x0F	; 15
     dc0:	34 e0       	ldi	r19, 0x04	; 4
     dc2:	40 e0       	ldi	r20, 0x00	; 0
     dc4:	5f e3       	ldi	r21, 0x3F	; 63
     dc6:	69 85       	ldd	r22, Y+9	; 0x09
     dc8:	7a 85       	ldd	r23, Y+10	; 0x0a
     dca:	8b 85       	ldd	r24, Y+11	; 0x0b
     dcc:	9c 85       	ldd	r25, Y+12	; 0x0c
     dce:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     dd2:	9b 01       	movw	r18, r22
     dd4:	ac 01       	movw	r20, r24
     dd6:	c3 01       	movw	r24, r6
     dd8:	b2 01       	movw	r22, r4
     dda:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     dde:	9b 01       	movw	r18, r22
     de0:	ac 01       	movw	r20, r24
     de2:	6d 81       	ldd	r22, Y+5	; 0x05
     de4:	7e 81       	ldd	r23, Y+6	; 0x06
     de6:	8f 81       	ldd	r24, Y+7	; 0x07
     de8:	98 85       	ldd	r25, Y+8	; 0x08
     dea:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     dee:	2b 01       	movw	r4, r22
     df0:	3c 01       	movw	r6, r24
     df2:	25 e3       	ldi	r18, 0x35	; 53
     df4:	3a ef       	ldi	r19, 0xFA	; 250
     df6:	4e e8       	ldi	r20, 0x8E	; 142
     df8:	5c e3       	ldi	r21, 0x3C	; 60
     dfa:	c7 01       	movw	r24, r14
     dfc:	b6 01       	movw	r22, r12
     dfe:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     e02:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     e06:	9b 01       	movw	r18, r22
     e08:	ac 01       	movw	r20, r24
     e0a:	c3 01       	movw	r24, r6
     e0c:	b2 01       	movw	r22, r4
     e0e:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
     e12:	0e 94 04 13 	call	0x2608	; 0x2608 <acos>
     e16:	21 ee       	ldi	r18, 0xE1	; 225
     e18:	3e e2       	ldi	r19, 0x2E	; 46
     e1a:	45 e6       	ldi	r20, 0x65	; 101
     e1c:	52 e4       	ldi	r21, 0x42	; 66
     e1e:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     e22:	9b 01       	movw	r18, r22
     e24:	ac 01       	movw	r20, r24
     e26:	60 e0       	ldi	r22, 0x00	; 0
     e28:	70 e0       	ldi	r23, 0x00	; 0
     e2a:	84 eb       	ldi	r24, 0xB4	; 180
     e2c:	93 e4       	ldi	r25, 0x43	; 67
     e2e:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
							step(finAzimuth);
     e32:	0e 94 94 10 	call	0x2128	; 0x2128 <step>
							break;
     e36:	22 c0       	rjmp	.+68     	; 0xe7c <__stack+0x57d>
     e38:	39 a4       	ldd	r3, Y+41	; 0x29
     e3a:	2a a4       	ldd	r2, Y+42	; 0x2a
     e3c:	8b a5       	ldd	r24, Y+43	; 0x2b
     e3e:	8d 87       	std	Y+13, r24	; 0x0d
     e40:	8c a5       	ldd	r24, Y+44	; 0x2c
     e42:	89 8b       	std	Y+17, r24	; 0x11
     e44:	0a c0       	rjmp	.+20     	; 0xe5a <__stack+0x55b>
						}
					
						double NewAzimuth2 = 360 - (acos(((sin(declination * conv) * cos(lat * conv)) - (cos(declination * conv) * sin(lat * conv) * cos(HRA * conv))) / (cos(elevation * conv))) * conv2);
					
						double diffAzi1 = NewAzimuth2 - NewAzimuth;
						NewAzimuth = NewAzimuth2;
     e46:	30 2e       	mov	r3, r16
     e48:	21 2e       	mov	r2, r17
     e4a:	8d 81       	ldd	r24, Y+5	; 0x05
     e4c:	8d 87       	std	Y+13, r24	; 0x0d
     e4e:	89 81       	ldd	r24, Y+1	; 0x01
     e50:	89 8b       	std	Y+17, r24	; 0x11
						float phi =  -1*elevation * PI/180;
						float alpha = pow(A,2) + pow(Beta,2); //7
						float beta = (float)2*A*Beta;
						float newS = fabs(10* (sqrt(alpha - (beta*cos(phi))) - 7.3));
						float diffS = newS - S;
						S = newS;
     e52:	8e a6       	std	Y+46, r8	; 0x2e
     e54:	9d a6       	std	Y+45, r9	; 0x2d
     e56:	1a 2d       	mov	r17, r10
     e58:	0b 2d       	mov	r16, r11
				double HRA2 = (15 * (LST2 - 12));
				double declination2 = (23.45 * sin(B2 * conv));			
				double sunrise2 = 12 - ((double)1 / (double)15) * (acos(-tan(lat * conv) * tan(declination2 * conv)) * conv2) - (TC2 / 60);
				double sunset2 = 12 + (((double)1 / (double)15) * acos(-tan(lat * conv) * tan(declination2 * conv)) * conv2) - (TC2 / 60);
				if(HRA2>0){
					while(HRA2>0){
     e5a:	20 e0       	ldi	r18, 0x00	; 0
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	a9 01       	movw	r20, r18
     e60:	69 a1       	ldd	r22, Y+33	; 0x21
     e62:	7a a1       	ldd	r23, Y+34	; 0x22
     e64:	8b a1       	ldd	r24, Y+35	; 0x23
     e66:	9c a1       	ldd	r25, Y+36	; 0x24
     e68:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__gesf2>
     e6c:	18 16       	cp	r1, r24
     e6e:	0c f4       	brge	.+2      	; 0xe72 <__stack+0x573>
     e70:	10 cd       	rjmp	.-1504   	; 0x892 <__DATA_REGION_LENGTH__+0x92>
     e72:	8d a5       	ldd	r24, Y+45	; 0x2d
     e74:	8e a4       	ldd	r8, Y+46	; 0x2e
     e76:	98 2e       	mov	r9, r24
     e78:	a1 2e       	mov	r10, r17
     e7a:	b0 2e       	mov	r11, r16
				double sunrise = 12 - ((double)1 / (double)15) * (acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);
				double sunset = 12 + (((double)1 / (double)15) * acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);
				double elevation = asin(((sin(declination * conv) * sin(lat * conv)) + (cos(declination * conv) * cos(lat * conv) * cos(HRA * conv)))) * conv2;float phi = elevation * PI/180;float alpha = pow(A,2) + pow(Beta,2);float beta = (float)2*A*Beta;
				float newS = 10* (sqrt(alpha - (beta*cos(phi))) - 7.3);
				float diffS = newS - S;
				S = newS;
     e7c:	89 a5       	ldd	r24, Y+41	; 0x29
     e7e:	8d 83       	std	Y+5, r24	; 0x05
     e80:	8a a5       	ldd	r24, Y+42	; 0x2a
     e82:	89 87       	std	Y+9, r24	; 0x09
     e84:	2b a4       	ldd	r2, Y+43	; 0x2b
     e86:	3c a4       	ldd	r3, Y+44	; 0x2c
			hourD += 0.166667;
			double sunrise2 = sunrise;
			double sunset2 = sunset; 
			double HRA2 = HRA;
			
			while((HRA2<0) && (hourD > sunrise2 && hourD < sunset2)){
     e88:	20 e0       	ldi	r18, 0x00	; 0
     e8a:	30 e0       	ldi	r19, 0x00	; 0
     e8c:	a9 01       	movw	r20, r18
     e8e:	6d a1       	ldd	r22, Y+37	; 0x25
     e90:	7e a1       	ldd	r23, Y+38	; 0x26
     e92:	8f a1       	ldd	r24, Y+39	; 0x27
     e94:	98 a5       	ldd	r25, Y+40	; 0x28
     e96:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
     e9a:	88 23       	and	r24, r24
     e9c:	0c f0       	brlt	.+2      	; 0xea0 <__stack+0x5a1>
     e9e:	f2 c2       	rjmp	.+1508   	; 0x1484 <__stack+0xb85>
     ea0:	40 90 02 01 	lds	r4, 0x0102	; 0x800102 <hourD>
     ea4:	50 90 03 01 	lds	r5, 0x0103	; 0x800103 <hourD+0x1>
     ea8:	60 90 04 01 	lds	r6, 0x0104	; 0x800104 <hourD+0x2>
     eac:	70 90 05 01 	lds	r7, 0x0105	; 0x800105 <hourD+0x3>
     eb0:	a3 01       	movw	r20, r6
     eb2:	92 01       	movw	r18, r4
     eb4:	69 8d       	ldd	r22, Y+25	; 0x19
     eb6:	7a 8d       	ldd	r23, Y+26	; 0x1a
     eb8:	8b 8d       	ldd	r24, Y+27	; 0x1b
     eba:	9c 8d       	ldd	r25, Y+28	; 0x1c
     ebc:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
     ec0:	88 23       	and	r24, r24
     ec2:	0c f0       	brlt	.+2      	; 0xec6 <__stack+0x5c7>
     ec4:	df c2       	rjmp	.+1470   	; 0x1484 <__stack+0xb85>
     ec6:	a3 01       	movw	r20, r6
     ec8:	92 01       	movw	r18, r4
     eca:	6d 8d       	ldd	r22, Y+29	; 0x1d
     ecc:	7e 8d       	ldd	r23, Y+30	; 0x1e
     ece:	8f 8d       	ldd	r24, Y+31	; 0x1f
     ed0:	98 a1       	ldd	r25, Y+32	; 0x20
     ed2:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__gesf2>
     ed6:	18 16       	cp	r1, r24
     ed8:	0c f4       	brge	.+2      	; 0xedc <__stack+0x5dd>
     eda:	32 cb       	rjmp	.-2460   	; 0x540 <__EEPROM_REGION_LENGTH__+0x140>
     edc:	d3 c2       	rjmp	.+1446   	; 0x1484 <__stack+0xb85>
					
					
					
					
					while(HRA>0){
						double LSTM = 15 * GMT;double B = ((double)(360) / (double)(365)) * (days - 81);double EoT = 9.87 * sin(2 * B * conv) - 7.53 * cos(B * conv) - 1.5 * sin(B * conv);double TC = EoT + (4 * (lon - LSTM));double LST = hourD + ((double)(TC) / (double)(60));double HRA = (15 * (LST - 12));double declination = (23.45 * sin(B * conv));double sunrise = 12 - ((double)1 / (double)15) * (acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);double sunset = 12 + (((double)1 / (double)15) * acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);double elevation = asin(((sin(declination * conv) * sin(lat * conv)) + (cos(declination * conv) * cos(lat * conv) * cos(HRA * conv)))) * conv2;
     ede:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     ee2:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     ee6:	61 55       	subi	r22, 0x51	; 81
     ee8:	71 09       	sbc	r23, r1
     eea:	07 2e       	mov	r0, r23
     eec:	00 0c       	add	r0, r0
     eee:	88 0b       	sbc	r24, r24
     ef0:	99 0b       	sbc	r25, r25
     ef2:	0e 94 68 14 	call	0x28d0	; 0x28d0 <__floatsisf>
     ef6:	2f e3       	ldi	r18, 0x3F	; 63
     ef8:	3e e7       	ldi	r19, 0x7E	; 126
     efa:	4c e7       	ldi	r20, 0x7C	; 124
     efc:	5f e3       	ldi	r21, 0x3F	; 63
     efe:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     f02:	6b 01       	movw	r12, r22
     f04:	7c 01       	movw	r14, r24
     f06:	9b 01       	movw	r18, r22
     f08:	ac 01       	movw	r20, r24
     f0a:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     f0e:	25 e3       	ldi	r18, 0x35	; 53
     f10:	3a ef       	ldi	r19, 0xFA	; 250
     f12:	4e e8       	ldi	r20, 0x8E	; 142
     f14:	5c e3       	ldi	r21, 0x3C	; 60
     f16:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     f1a:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
     f1e:	25 e8       	ldi	r18, 0x85	; 133
     f20:	3b ee       	ldi	r19, 0xEB	; 235
     f22:	4d e1       	ldi	r20, 0x1D	; 29
     f24:	51 e4       	ldi	r21, 0x41	; 65
     f26:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     f2a:	2b 01       	movw	r4, r22
     f2c:	3c 01       	movw	r6, r24
     f2e:	25 e3       	ldi	r18, 0x35	; 53
     f30:	3a ef       	ldi	r19, 0xFA	; 250
     f32:	4e e8       	ldi	r20, 0x8E	; 142
     f34:	5c e3       	ldi	r21, 0x3C	; 60
     f36:	c7 01       	movw	r24, r14
     f38:	b6 01       	movw	r22, r12
     f3a:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     f3e:	6b 01       	movw	r12, r22
     f40:	7c 01       	movw	r14, r24
     f42:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
     f46:	23 ec       	ldi	r18, 0xC3	; 195
     f48:	35 ef       	ldi	r19, 0xF5	; 245
     f4a:	40 ef       	ldi	r20, 0xF0	; 240
     f4c:	50 e4       	ldi	r21, 0x40	; 64
     f4e:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     f52:	9b 01       	movw	r18, r22
     f54:	ac 01       	movw	r20, r24
     f56:	c3 01       	movw	r24, r6
     f58:	b2 01       	movw	r22, r4
     f5a:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     f5e:	2b 01       	movw	r4, r22
     f60:	3c 01       	movw	r6, r24
     f62:	c7 01       	movw	r24, r14
     f64:	b6 01       	movw	r22, r12
     f66:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
     f6a:	6b 01       	movw	r12, r22
     f6c:	7c 01       	movw	r14, r24
     f6e:	20 e0       	ldi	r18, 0x00	; 0
     f70:	30 e0       	ldi	r19, 0x00	; 0
     f72:	40 ec       	ldi	r20, 0xC0	; 192
     f74:	5f e3       	ldi	r21, 0x3F	; 63
     f76:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     f7a:	9b 01       	movw	r18, r22
     f7c:	ac 01       	movw	r20, r24
     f7e:	c3 01       	movw	r24, r6
     f80:	b2 01       	movw	r22, r4
     f82:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     f86:	20 e7       	ldi	r18, 0x70	; 112
     f88:	36 ea       	ldi	r19, 0xA6	; 166
     f8a:	49 ed       	ldi	r20, 0xD9	; 217
     f8c:	50 e4       	ldi	r21, 0x40	; 64
     f8e:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     f92:	20 e0       	ldi	r18, 0x00	; 0
     f94:	30 e0       	ldi	r19, 0x00	; 0
     f96:	40 e7       	ldi	r20, 0x70	; 112
     f98:	52 e4       	ldi	r21, 0x42	; 66
     f9a:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
     f9e:	2b 01       	movw	r4, r22
     fa0:	3c 01       	movw	r6, r24
     fa2:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <hourD>
     fa6:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <hourD+0x1>
     faa:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <hourD+0x2>
     fae:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <hourD+0x3>
     fb2:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
     fb6:	20 e0       	ldi	r18, 0x00	; 0
     fb8:	30 e0       	ldi	r19, 0x00	; 0
     fba:	40 e4       	ldi	r20, 0x40	; 64
     fbc:	51 e4       	ldi	r21, 0x41	; 65
     fbe:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
     fc2:	20 e0       	ldi	r18, 0x00	; 0
     fc4:	30 e0       	ldi	r19, 0x00	; 0
     fc6:	40 e7       	ldi	r20, 0x70	; 112
     fc8:	51 e4       	ldi	r21, 0x41	; 65
     fca:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     fce:	69 8b       	std	Y+17, r22	; 0x11
     fd0:	7a 8b       	std	Y+18, r23	; 0x12
     fd2:	8b 8b       	std	Y+19, r24	; 0x13
     fd4:	9c 8b       	std	Y+20, r25	; 0x14
     fd6:	2a e9       	ldi	r18, 0x9A	; 154
     fd8:	39 e9       	ldi	r19, 0x99	; 153
     fda:	4b eb       	ldi	r20, 0xBB	; 187
     fdc:	51 e4       	ldi	r21, 0x41	; 65
     fde:	c7 01       	movw	r24, r14
     fe0:	b6 01       	movw	r22, r12
     fe2:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     fe6:	25 e3       	ldi	r18, 0x35	; 53
     fe8:	3a ef       	ldi	r19, 0xFA	; 250
     fea:	4e e8       	ldi	r20, 0x8E	; 142
     fec:	5c e3       	ldi	r21, 0x3C	; 60
     fee:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
     ff2:	6b 01       	movw	r12, r22
     ff4:	7c 01       	movw	r14, r24
     ff6:	0e 94 ee 16 	call	0x2ddc	; 0x2ddc <tan>
     ffa:	29 e7       	ldi	r18, 0x79	; 121
     ffc:	33 ed       	ldi	r19, 0xD3	; 211
     ffe:	43 e1       	ldi	r20, 0x13	; 19
    1000:	5f eb       	ldi	r21, 0xBF	; 191
    1002:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1006:	0e 94 04 13 	call	0x2608	; 0x2608 <acos>
    100a:	29 e8       	ldi	r18, 0x89	; 137
    100c:	38 e8       	ldi	r19, 0x88	; 136
    100e:	48 e8       	ldi	r20, 0x88	; 136
    1010:	5d e3       	ldi	r21, 0x3D	; 61
    1012:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1016:	21 ee       	ldi	r18, 0xE1	; 225
    1018:	3e e2       	ldi	r19, 0x2E	; 46
    101a:	45 e6       	ldi	r20, 0x65	; 101
    101c:	52 e4       	ldi	r21, 0x42	; 66
    101e:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1022:	20 e0       	ldi	r18, 0x00	; 0
    1024:	30 e0       	ldi	r19, 0x00	; 0
    1026:	40 e4       	ldi	r20, 0x40	; 64
    1028:	51 e4       	ldi	r21, 0x41	; 65
    102a:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    102e:	a3 01       	movw	r20, r6
    1030:	92 01       	movw	r18, r4
    1032:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1036:	6d 8b       	std	Y+21, r22	; 0x15
    1038:	7e 8b       	std	Y+22, r23	; 0x16
    103a:	8f 8b       	std	Y+23, r24	; 0x17
    103c:	98 8f       	std	Y+24, r25	; 0x18
    103e:	c7 01       	movw	r24, r14
    1040:	b6 01       	movw	r22, r12
    1042:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
    1046:	69 83       	std	Y+1, r22	; 0x01
    1048:	7a 83       	std	Y+2, r23	; 0x02
    104a:	8b 83       	std	Y+3, r24	; 0x03
    104c:	9c 83       	std	Y+4, r25	; 0x04
    104e:	2f e0       	ldi	r18, 0x0F	; 15
    1050:	34 e0       	ldi	r19, 0x04	; 4
    1052:	40 e0       	ldi	r20, 0x00	; 0
    1054:	5f e3       	ldi	r21, 0x3F	; 63
    1056:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    105a:	2b 01       	movw	r4, r22
    105c:	3c 01       	movw	r6, r24
    105e:	c7 01       	movw	r24, r14
    1060:	b6 01       	movw	r22, r12
    1062:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    1066:	6d 87       	std	Y+13, r22	; 0x0d
    1068:	7e 87       	std	Y+14, r23	; 0x0e
    106a:	8f 87       	std	Y+15, r24	; 0x0f
    106c:	98 8b       	std	Y+16, r25	; 0x10
    106e:	20 e8       	ldi	r18, 0x80	; 128
    1070:	31 eb       	ldi	r19, 0xB1	; 177
    1072:	4d e5       	ldi	r20, 0x5D	; 93
    1074:	5f e3       	ldi	r21, 0x3F	; 63
    1076:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    107a:	6b 01       	movw	r12, r22
    107c:	7c 01       	movw	r14, r24
    107e:	25 e3       	ldi	r18, 0x35	; 53
    1080:	3a ef       	ldi	r19, 0xFA	; 250
    1082:	4e e8       	ldi	r20, 0x8E	; 142
    1084:	5c e3       	ldi	r21, 0x3C	; 60
    1086:	69 89       	ldd	r22, Y+17	; 0x11
    1088:	7a 89       	ldd	r23, Y+18	; 0x12
    108a:	8b 89       	ldd	r24, Y+19	; 0x13
    108c:	9c 89       	ldd	r25, Y+20	; 0x14
    108e:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1092:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    1096:	69 8b       	std	Y+17, r22	; 0x11
    1098:	7a 8b       	std	Y+18, r23	; 0x12
    109a:	8b 8b       	std	Y+19, r24	; 0x13
    109c:	9c 8b       	std	Y+20, r25	; 0x14
    109e:	9b 01       	movw	r18, r22
    10a0:	ac 01       	movw	r20, r24
    10a2:	c7 01       	movw	r24, r14
    10a4:	b6 01       	movw	r22, r12
    10a6:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    10aa:	9b 01       	movw	r18, r22
    10ac:	ac 01       	movw	r20, r24
    10ae:	c3 01       	movw	r24, r6
    10b0:	b2 01       	movw	r22, r4
    10b2:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    10b6:	0e 94 82 13 	call	0x2704	; 0x2704 <asin>
    10ba:	21 ee       	ldi	r18, 0xE1	; 225
    10bc:	3e e2       	ldi	r19, 0x2E	; 46
    10be:	45 e6       	ldi	r20, 0x65	; 101
    10c0:	52 e4       	ldi	r21, 0x42	; 66
    10c2:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    10c6:	6b 01       	movw	r12, r22
    10c8:	7c 01       	movw	r14, r24
						float phi =  -1*elevation * PI/180;
    10ca:	90 58       	subi	r25, 0x80	; 128
    10cc:	2b ed       	ldi	r18, 0xDB	; 219
    10ce:	3f e0       	ldi	r19, 0x0F	; 15
    10d0:	49 e4       	ldi	r20, 0x49	; 73
    10d2:	50 e4       	ldi	r21, 0x40	; 64
    10d4:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    10d8:	20 e0       	ldi	r18, 0x00	; 0
    10da:	30 e0       	ldi	r19, 0x00	; 0
    10dc:	44 e3       	ldi	r20, 0x34	; 52
    10de:	53 e4       	ldi	r21, 0x43	; 67
    10e0:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
						float alpha = pow(A,2) + pow(Beta,2); //7
						float beta = (float)2*A*Beta;
						float newS = fabs(10* (sqrt(alpha - (beta*cos(phi))) - 7.3));
    10e4:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    10e8:	25 e1       	ldi	r18, 0x15	; 21
    10ea:	3e ea       	ldi	r19, 0xAE	; 174
    10ec:	48 e3       	ldi	r20, 0x38	; 56
    10ee:	54 e4       	ldi	r21, 0x44	; 68
    10f0:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    10f4:	2b 01       	movw	r4, r22
    10f6:	3c 01       	movw	r6, r24
    10f8:	a3 01       	movw	r20, r6
    10fa:	92 01       	movw	r18, r4
    10fc:	65 e1       	ldi	r22, 0x15	; 21
    10fe:	7e eb       	ldi	r23, 0xBE	; 190
    1100:	8d e3       	ldi	r24, 0x3D	; 61
    1102:	94 e4       	ldi	r25, 0x44	; 68
    1104:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1108:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <sqrt>
    110c:	2a e9       	ldi	r18, 0x9A	; 154
    110e:	39 e9       	ldi	r19, 0x99	; 153
    1110:	49 ee       	ldi	r20, 0xE9	; 233
    1112:	50 e4       	ldi	r21, 0x40	; 64
    1114:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1118:	20 e0       	ldi	r18, 0x00	; 0
    111a:	30 e0       	ldi	r19, 0x00	; 0
    111c:	40 e2       	ldi	r20, 0x20	; 32
    111e:	51 e4       	ldi	r21, 0x41	; 65
    1120:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1124:	2b 01       	movw	r4, r22
    1126:	3c 01       	movw	r6, r24
    1128:	e8 94       	clt
    112a:	77 f8       	bld	r7, 7
						float diffS = newS - S;
    112c:	a5 01       	movw	r20, r10
    112e:	94 01       	movw	r18, r8
    1130:	c3 01       	movw	r24, r6
    1132:	b2 01       	movw	r22, r4
    1134:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1138:	4b 01       	movw	r8, r22
    113a:	5c 01       	movw	r10, r24
						S = newS;
						if(elevation>13 && elevation<81){
    113c:	20 e0       	ldi	r18, 0x00	; 0
    113e:	30 e0       	ldi	r19, 0x00	; 0
    1140:	40 e5       	ldi	r20, 0x50	; 80
    1142:	51 e4       	ldi	r21, 0x41	; 65
    1144:	c7 01       	movw	r24, r14
    1146:	b6 01       	movw	r22, r12
    1148:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__gesf2>
    114c:	18 16       	cp	r1, r24
    114e:	74 f4       	brge	.+28     	; 0x116c <__stack+0x86d>
    1150:	20 e0       	ldi	r18, 0x00	; 0
    1152:	30 e0       	ldi	r19, 0x00	; 0
    1154:	42 ea       	ldi	r20, 0xA2	; 162
    1156:	52 e4       	ldi	r21, 0x42	; 66
    1158:	c7 01       	movw	r24, r14
    115a:	b6 01       	movw	r22, r12
    115c:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
    1160:	88 23       	and	r24, r24
    1162:	24 f4       	brge	.+8      	; 0x116c <__stack+0x86d>
							step_lin(diffS);
    1164:	c5 01       	movw	r24, r10
    1166:	b4 01       	movw	r22, r8
    1168:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <step_lin>
						}
						double NewAzimuth = 360 - (acos(((sin(declination * conv) * cos(lat * conv)) - (cos(declination * conv) * sin(lat * conv) * cos(HRA * conv))) / (cos(elevation * conv))) * conv2);
    116c:	20 e8       	ldi	r18, 0x80	; 128
    116e:	31 eb       	ldi	r19, 0xB1	; 177
    1170:	4d e5       	ldi	r20, 0x5D	; 93
    1172:	5f e3       	ldi	r21, 0x3F	; 63
    1174:	69 81       	ldd	r22, Y+1	; 0x01
    1176:	7a 81       	ldd	r23, Y+2	; 0x02
    1178:	8b 81       	ldd	r24, Y+3	; 0x03
    117a:	9c 81       	ldd	r25, Y+4	; 0x04
    117c:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1180:	4b 01       	movw	r8, r22
    1182:	5c 01       	movw	r10, r24
    1184:	2f e0       	ldi	r18, 0x0F	; 15
    1186:	34 e0       	ldi	r19, 0x04	; 4
    1188:	40 e0       	ldi	r20, 0x00	; 0
    118a:	5f e3       	ldi	r21, 0x3F	; 63
    118c:	6d 85       	ldd	r22, Y+13	; 0x0d
    118e:	7e 85       	ldd	r23, Y+14	; 0x0e
    1190:	8f 85       	ldd	r24, Y+15	; 0x0f
    1192:	98 89       	ldd	r25, Y+16	; 0x10
    1194:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1198:	9b 01       	movw	r18, r22
    119a:	ac 01       	movw	r20, r24
    119c:	69 89       	ldd	r22, Y+17	; 0x11
    119e:	7a 89       	ldd	r23, Y+18	; 0x12
    11a0:	8b 89       	ldd	r24, Y+19	; 0x13
    11a2:	9c 89       	ldd	r25, Y+20	; 0x14
    11a4:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    11a8:	9b 01       	movw	r18, r22
    11aa:	ac 01       	movw	r20, r24
    11ac:	c5 01       	movw	r24, r10
    11ae:	b4 01       	movw	r22, r8
    11b0:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    11b4:	4b 01       	movw	r8, r22
    11b6:	5c 01       	movw	r10, r24
    11b8:	25 e3       	ldi	r18, 0x35	; 53
    11ba:	3a ef       	ldi	r19, 0xFA	; 250
    11bc:	4e e8       	ldi	r20, 0x8E	; 142
    11be:	5c e3       	ldi	r21, 0x3C	; 60
    11c0:	c7 01       	movw	r24, r14
    11c2:	b6 01       	movw	r22, r12
    11c4:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    11c8:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    11cc:	9b 01       	movw	r18, r22
    11ce:	ac 01       	movw	r20, r24
    11d0:	c5 01       	movw	r24, r10
    11d2:	b4 01       	movw	r22, r8
    11d4:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
    11d8:	0e 94 04 13 	call	0x2608	; 0x2608 <acos>
    11dc:	21 ee       	ldi	r18, 0xE1	; 225
    11de:	3e e2       	ldi	r19, 0x2E	; 46
    11e0:	45 e6       	ldi	r20, 0x65	; 101
    11e2:	52 e4       	ldi	r21, 0x42	; 66
    11e4:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    11e8:	9b 01       	movw	r18, r22
    11ea:	ac 01       	movw	r20, r24
    11ec:	60 e0       	ldi	r22, 0x00	; 0
    11ee:	70 e0       	ldi	r23, 0x00	; 0
    11f0:	84 eb       	ldi	r24, 0xB4	; 180
    11f2:	93 e4       	ldi	r25, 0x43	; 67
    11f4:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    11f8:	06 2f       	mov	r16, r22
    11fa:	17 2f       	mov	r17, r23
    11fc:	8d 87       	std	Y+13, r24	; 0x0d
    11fe:	99 83       	std	Y+1, r25	; 0x01
						double diffAzi = NewAzimuth - RefAzimuth;
    1200:	2d 81       	ldd	r18, Y+5	; 0x05
    1202:	39 85       	ldd	r19, Y+9	; 0x09
    1204:	42 2d       	mov	r20, r2
    1206:	53 2d       	mov	r21, r3
    1208:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
						RefAzimuth = NewAzimuth;
						step(diffAzi);
    120c:	0e 94 94 10 	call	0x2128	; 0x2128 <step>
						hourD += 0.166667;
    1210:	21 ec       	ldi	r18, 0xC1	; 193
    1212:	3a ea       	ldi	r19, 0xAA	; 170
    1214:	4a e2       	ldi	r20, 0x2A	; 42
    1216:	5e e3       	ldi	r21, 0x3E	; 62
    1218:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <hourD>
    121c:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <hourD+0x1>
    1220:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <hourD+0x2>
    1224:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <hourD+0x3>
    1228:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    122c:	9b 01       	movw	r18, r22
    122e:	ac 01       	movw	r20, r24
    1230:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <hourD>
    1234:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <hourD+0x1>
    1238:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <hourD+0x2>
    123c:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <hourD+0x3>
						if(hourD > sunset){
    1240:	6d 89       	ldd	r22, Y+21	; 0x15
    1242:	7e 89       	ldd	r23, Y+22	; 0x16
    1244:	8f 89       	ldd	r24, Y+23	; 0x17
    1246:	98 8d       	ldd	r25, Y+24	; 0x18
    1248:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
    124c:	88 23       	and	r24, r24
    124e:	0c f0       	brlt	.+2      	; 0x1252 <__stack+0x953>
    1250:	13 c1       	rjmp	.+550    	; 0x1478 <__stack+0xb79>
							STEPPER_off(STEPPER_PORT,DIR_PIN); //CW
    1252:	62 e0       	ldi	r22, 0x02	; 2
    1254:	84 e4       	ldi	r24, 0x44	; 68
    1256:	0e 94 90 10 	call	0x2120	; 0x2120 <STEPPER_off>
							double LSTM = 15 * GMT;double B = ((double)(360) / (double)(365)) * (days - 81);double EoT = 9.87 * sin(2 * B * conv) - 7.53 * cos(B * conv) - 1.5 * sin(B * conv);double TC = EoT + (4 * (lon - LSTM));double LST = hourD + ((double)(TC) / (double)(60));double HRA = (15 * (LST - 12));double declination = (23.45 * sin(B * conv));double elevation = asin(((sin(declination * conv) * sin(lat * conv)) + (cos(declination * conv) * cos(lat * conv) * cos(HRA * conv)))) * conv2;double sunrise = 12 - ((double)1 / (double)15) * (acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);double sunset = 12 + (((double)1 / (double)15) * acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);
    125a:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    125e:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1262:	61 55       	subi	r22, 0x51	; 81
    1264:	71 09       	sbc	r23, r1
    1266:	07 2e       	mov	r0, r23
    1268:	00 0c       	add	r0, r0
    126a:	88 0b       	sbc	r24, r24
    126c:	99 0b       	sbc	r25, r25
    126e:	0e 94 68 14 	call	0x28d0	; 0x28d0 <__floatsisf>
    1272:	2f e3       	ldi	r18, 0x3F	; 63
    1274:	3e e7       	ldi	r19, 0x7E	; 126
    1276:	4c e7       	ldi	r20, 0x7C	; 124
    1278:	5f e3       	ldi	r21, 0x3F	; 63
    127a:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    127e:	4b 01       	movw	r8, r22
    1280:	5c 01       	movw	r10, r24
    1282:	9b 01       	movw	r18, r22
    1284:	ac 01       	movw	r20, r24
    1286:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    128a:	25 e3       	ldi	r18, 0x35	; 53
    128c:	3a ef       	ldi	r19, 0xFA	; 250
    128e:	4e e8       	ldi	r20, 0x8E	; 142
    1290:	5c e3       	ldi	r21, 0x3C	; 60
    1292:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1296:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
    129a:	25 e8       	ldi	r18, 0x85	; 133
    129c:	3b ee       	ldi	r19, 0xEB	; 235
    129e:	4d e1       	ldi	r20, 0x1D	; 29
    12a0:	51 e4       	ldi	r21, 0x41	; 65
    12a2:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    12a6:	6b 01       	movw	r12, r22
    12a8:	7c 01       	movw	r14, r24
    12aa:	25 e3       	ldi	r18, 0x35	; 53
    12ac:	3a ef       	ldi	r19, 0xFA	; 250
    12ae:	4e e8       	ldi	r20, 0x8E	; 142
    12b0:	5c e3       	ldi	r21, 0x3C	; 60
    12b2:	c5 01       	movw	r24, r10
    12b4:	b4 01       	movw	r22, r8
    12b6:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    12ba:	4b 01       	movw	r8, r22
    12bc:	5c 01       	movw	r10, r24
    12be:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    12c2:	23 ec       	ldi	r18, 0xC3	; 195
    12c4:	35 ef       	ldi	r19, 0xF5	; 245
    12c6:	40 ef       	ldi	r20, 0xF0	; 240
    12c8:	50 e4       	ldi	r21, 0x40	; 64
    12ca:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    12ce:	9b 01       	movw	r18, r22
    12d0:	ac 01       	movw	r20, r24
    12d2:	c7 01       	movw	r24, r14
    12d4:	b6 01       	movw	r22, r12
    12d6:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    12da:	6b 01       	movw	r12, r22
    12dc:	7c 01       	movw	r14, r24
    12de:	c5 01       	movw	r24, r10
    12e0:	b4 01       	movw	r22, r8
    12e2:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
    12e6:	4b 01       	movw	r8, r22
    12e8:	5c 01       	movw	r10, r24
    12ea:	20 e0       	ldi	r18, 0x00	; 0
    12ec:	30 e0       	ldi	r19, 0x00	; 0
    12ee:	40 ec       	ldi	r20, 0xC0	; 192
    12f0:	5f e3       	ldi	r21, 0x3F	; 63
    12f2:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    12f6:	9b 01       	movw	r18, r22
    12f8:	ac 01       	movw	r20, r24
    12fa:	c7 01       	movw	r24, r14
    12fc:	b6 01       	movw	r22, r12
    12fe:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1302:	20 e7       	ldi	r18, 0x70	; 112
    1304:	36 ea       	ldi	r19, 0xA6	; 166
    1306:	49 ed       	ldi	r20, 0xD9	; 217
    1308:	50 e4       	ldi	r21, 0x40	; 64
    130a:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    130e:	20 e0       	ldi	r18, 0x00	; 0
    1310:	30 e0       	ldi	r19, 0x00	; 0
    1312:	40 e7       	ldi	r20, 0x70	; 112
    1314:	52 e4       	ldi	r21, 0x42	; 66
    1316:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
    131a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <hourD>
    131e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <hourD+0x1>
    1322:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <hourD+0x2>
    1326:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <hourD+0x3>
    132a:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    132e:	20 e0       	ldi	r18, 0x00	; 0
    1330:	30 e0       	ldi	r19, 0x00	; 0
    1332:	40 e4       	ldi	r20, 0x40	; 64
    1334:	51 e4       	ldi	r21, 0x41	; 65
    1336:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    133a:	20 e0       	ldi	r18, 0x00	; 0
    133c:	30 e0       	ldi	r19, 0x00	; 0
    133e:	40 e7       	ldi	r20, 0x70	; 112
    1340:	51 e4       	ldi	r21, 0x41	; 65
    1342:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1346:	6b 01       	movw	r12, r22
    1348:	7c 01       	movw	r14, r24
    134a:	2a e9       	ldi	r18, 0x9A	; 154
    134c:	39 e9       	ldi	r19, 0x99	; 153
    134e:	4b eb       	ldi	r20, 0xBB	; 187
    1350:	51 e4       	ldi	r21, 0x41	; 65
    1352:	c5 01       	movw	r24, r10
    1354:	b4 01       	movw	r22, r8
    1356:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    135a:	25 e3       	ldi	r18, 0x35	; 53
    135c:	3a ef       	ldi	r19, 0xFA	; 250
    135e:	4e e8       	ldi	r20, 0x8E	; 142
    1360:	5c e3       	ldi	r21, 0x3C	; 60
    1362:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1366:	4b 01       	movw	r8, r22
    1368:	5c 01       	movw	r10, r24
    136a:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
    136e:	2b 01       	movw	r4, r22
    1370:	3c 01       	movw	r6, r24
    1372:	2f e0       	ldi	r18, 0x0F	; 15
    1374:	34 e0       	ldi	r19, 0x04	; 4
    1376:	40 e0       	ldi	r20, 0x00	; 0
    1378:	5f e3       	ldi	r21, 0x3F	; 63
    137a:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    137e:	69 87       	std	Y+9, r22	; 0x09
    1380:	7a 87       	std	Y+10, r23	; 0x0a
    1382:	8b 87       	std	Y+11, r24	; 0x0b
    1384:	9c 87       	std	Y+12, r25	; 0x0c
    1386:	c5 01       	movw	r24, r10
    1388:	b4 01       	movw	r22, r8
    138a:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    138e:	6d 83       	std	Y+5, r22	; 0x05
    1390:	7e 83       	std	Y+6, r23	; 0x06
    1392:	8f 83       	std	Y+7, r24	; 0x07
    1394:	98 87       	std	Y+8, r25	; 0x08
    1396:	20 e8       	ldi	r18, 0x80	; 128
    1398:	31 eb       	ldi	r19, 0xB1	; 177
    139a:	4d e5       	ldi	r20, 0x5D	; 93
    139c:	5f e3       	ldi	r21, 0x3F	; 63
    139e:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    13a2:	4b 01       	movw	r8, r22
    13a4:	5c 01       	movw	r10, r24
    13a6:	25 e3       	ldi	r18, 0x35	; 53
    13a8:	3a ef       	ldi	r19, 0xFA	; 250
    13aa:	4e e8       	ldi	r20, 0x8E	; 142
    13ac:	5c e3       	ldi	r21, 0x3C	; 60
    13ae:	c7 01       	movw	r24, r14
    13b0:	b6 01       	movw	r22, r12
    13b2:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    13b6:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    13ba:	6b 01       	movw	r12, r22
    13bc:	7c 01       	movw	r14, r24
    13be:	9b 01       	movw	r18, r22
    13c0:	ac 01       	movw	r20, r24
    13c2:	c5 01       	movw	r24, r10
    13c4:	b4 01       	movw	r22, r8
    13c6:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    13ca:	9b 01       	movw	r18, r22
    13cc:	ac 01       	movw	r20, r24
    13ce:	69 85       	ldd	r22, Y+9	; 0x09
    13d0:	7a 85       	ldd	r23, Y+10	; 0x0a
    13d2:	8b 85       	ldd	r24, Y+11	; 0x0b
    13d4:	9c 85       	ldd	r25, Y+12	; 0x0c
    13d6:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    13da:	0e 94 82 13 	call	0x2704	; 0x2704 <asin>
    13de:	21 ee       	ldi	r18, 0xE1	; 225
    13e0:	3e e2       	ldi	r19, 0x2E	; 46
    13e2:	45 e6       	ldi	r20, 0x65	; 101
    13e4:	52 e4       	ldi	r21, 0x42	; 66
    13e6:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    13ea:	4b 01       	movw	r8, r22
    13ec:	5c 01       	movw	r10, r24
							double finAzimuth = (360 - (acos(((sin(declination * conv) * cos(lat * conv)) - (cos(declination * conv) * sin(lat * conv) * cos(HRA * conv))) / (cos(elevation * conv))) * conv2));
    13ee:	20 e8       	ldi	r18, 0x80	; 128
    13f0:	31 eb       	ldi	r19, 0xB1	; 177
    13f2:	4d e5       	ldi	r20, 0x5D	; 93
    13f4:	5f e3       	ldi	r21, 0x3F	; 63
    13f6:	c3 01       	movw	r24, r6
    13f8:	b2 01       	movw	r22, r4
    13fa:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    13fe:	2b 01       	movw	r4, r22
    1400:	3c 01       	movw	r6, r24
    1402:	2f e0       	ldi	r18, 0x0F	; 15
    1404:	34 e0       	ldi	r19, 0x04	; 4
    1406:	40 e0       	ldi	r20, 0x00	; 0
    1408:	5f e3       	ldi	r21, 0x3F	; 63
    140a:	6d 81       	ldd	r22, Y+5	; 0x05
    140c:	7e 81       	ldd	r23, Y+6	; 0x06
    140e:	8f 81       	ldd	r24, Y+7	; 0x07
    1410:	98 85       	ldd	r25, Y+8	; 0x08
    1412:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1416:	9b 01       	movw	r18, r22
    1418:	ac 01       	movw	r20, r24
    141a:	c7 01       	movw	r24, r14
    141c:	b6 01       	movw	r22, r12
    141e:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1422:	9b 01       	movw	r18, r22
    1424:	ac 01       	movw	r20, r24
    1426:	c3 01       	movw	r24, r6
    1428:	b2 01       	movw	r22, r4
    142a:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    142e:	6b 01       	movw	r12, r22
    1430:	7c 01       	movw	r14, r24
    1432:	25 e3       	ldi	r18, 0x35	; 53
    1434:	3a ef       	ldi	r19, 0xFA	; 250
    1436:	4e e8       	ldi	r20, 0x8E	; 142
    1438:	5c e3       	ldi	r21, 0x3C	; 60
    143a:	c5 01       	movw	r24, r10
    143c:	b4 01       	movw	r22, r8
    143e:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1442:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    1446:	9b 01       	movw	r18, r22
    1448:	ac 01       	movw	r20, r24
    144a:	c7 01       	movw	r24, r14
    144c:	b6 01       	movw	r22, r12
    144e:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
    1452:	0e 94 04 13 	call	0x2608	; 0x2608 <acos>
    1456:	21 ee       	ldi	r18, 0xE1	; 225
    1458:	3e e2       	ldi	r19, 0x2E	; 46
    145a:	45 e6       	ldi	r20, 0x65	; 101
    145c:	52 e4       	ldi	r21, 0x42	; 66
    145e:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1462:	9b 01       	movw	r18, r22
    1464:	ac 01       	movw	r20, r24
    1466:	60 e0       	ldi	r22, 0x00	; 0
    1468:	70 e0       	ldi	r23, 0x00	; 0
    146a:	84 eb       	ldi	r24, 0xB4	; 180
    146c:	93 e4       	ldi	r25, 0x43	; 67
    146e:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
							step(finAzimuth);
    1472:	0e 94 94 10 	call	0x2128	; 0x2128 <step>
							break;
    1476:	b5 c5       	rjmp	.+2922   	; 0x1fe2 <__stack+0x16e3>
						if(elevation>13 && elevation<81){
							step_lin(diffS);
						}
						double NewAzimuth = 360 - (acos(((sin(declination * conv) * cos(lat * conv)) - (cos(declination * conv) * sin(lat * conv) * cos(HRA * conv))) / (cos(elevation * conv))) * conv2);
						double diffAzi = NewAzimuth - RefAzimuth;
						RefAzimuth = NewAzimuth;
    1478:	0d 83       	std	Y+5, r16	; 0x05
    147a:	19 87       	std	Y+9, r17	; 0x09
    147c:	2d 84       	ldd	r2, Y+13	; 0x0d
    147e:	39 80       	ldd	r3, Y+1	; 0x01
						float phi =  -1*elevation * PI/180;
						float alpha = pow(A,2) + pow(Beta,2); //7
						float beta = (float)2*A*Beta;
						float newS = fabs(10* (sqrt(alpha - (beta*cos(phi))) - 7.3));
						float diffS = newS - S;
						S = newS;
    1480:	53 01       	movw	r10, r6
    1482:	42 01       	movw	r8, r4
					
					
					
					
					
					while(HRA>0){
    1484:	20 e0       	ldi	r18, 0x00	; 0
    1486:	30 e0       	ldi	r19, 0x00	; 0
    1488:	a9 01       	movw	r20, r18
    148a:	6d a1       	ldd	r22, Y+37	; 0x25
    148c:	7e a1       	ldd	r23, Y+38	; 0x26
    148e:	8f a1       	ldd	r24, Y+39	; 0x27
    1490:	98 a5       	ldd	r25, Y+40	; 0x28
    1492:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__gesf2>
    1496:	18 16       	cp	r1, r24
    1498:	0c f4       	brge	.+2      	; 0x149c <__stack+0xb9d>
    149a:	21 cd       	rjmp	.-1470   	; 0xede <__stack+0x5df>
    149c:	a2 c5       	rjmp	.+2884   	; 0x1fe2 <__stack+0x16e3>
					}
				}
				
				
				//after 12:00 in solar time
				else if((HRA>0) && (hourD > sunrise && hourD < sunset)){
    149e:	20 e0       	ldi	r18, 0x00	; 0
    14a0:	30 e0       	ldi	r19, 0x00	; 0
    14a2:	a9 01       	movw	r20, r18
    14a4:	6d a1       	ldd	r22, Y+37	; 0x25
    14a6:	7e a1       	ldd	r23, Y+38	; 0x26
    14a8:	8f a1       	ldd	r24, Y+39	; 0x27
    14aa:	98 a5       	ldd	r25, Y+40	; 0x28
    14ac:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__gesf2>
    14b0:	18 16       	cp	r1, r24
    14b2:	0c f0       	brlt	.+2      	; 0x14b6 <__stack+0xbb7>
    14b4:	96 c5       	rjmp	.+2860   	; 0x1fe2 <__stack+0x16e3>
    14b6:	29 8d       	ldd	r18, Y+25	; 0x19
    14b8:	3a 8d       	ldd	r19, Y+26	; 0x1a
    14ba:	4b 8d       	ldd	r20, Y+27	; 0x1b
    14bc:	5c 8d       	ldd	r21, Y+28	; 0x1c
    14be:	c3 01       	movw	r24, r6
    14c0:	b2 01       	movw	r22, r4
    14c2:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__gesf2>
    14c6:	18 16       	cp	r1, r24
    14c8:	0c f0       	brlt	.+2      	; 0x14cc <__stack+0xbcd>
    14ca:	8b c5       	rjmp	.+2838   	; 0x1fe2 <__stack+0x16e3>
    14cc:	2d 8d       	ldd	r18, Y+29	; 0x1d
    14ce:	3e 8d       	ldd	r19, Y+30	; 0x1e
    14d0:	4f 8d       	ldd	r20, Y+31	; 0x1f
    14d2:	58 a1       	ldd	r21, Y+32	; 0x20
    14d4:	c3 01       	movw	r24, r6
    14d6:	b2 01       	movw	r22, r4
    14d8:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
    14dc:	88 23       	and	r24, r24
    14de:	0c f0       	brlt	.+2      	; 0x14e2 <__stack+0xbe3>
    14e0:	80 c5       	rjmp	.+2816   	; 0x1fe2 <__stack+0x16e3>
					float S = 10* (sqrt(alpha - (beta*cos(phi))) - 7.3);
    14e2:	c5 01       	movw	r24, r10
    14e4:	b4 01       	movw	r22, r8
    14e6:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    14ea:	25 e1       	ldi	r18, 0x15	; 21
    14ec:	3e ea       	ldi	r19, 0xAE	; 174
    14ee:	48 e3       	ldi	r20, 0x38	; 56
    14f0:	54 e4       	ldi	r21, 0x44	; 68
    14f2:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    14f6:	4b 01       	movw	r8, r22
    14f8:	5c 01       	movw	r10, r24
    14fa:	a5 01       	movw	r20, r10
    14fc:	94 01       	movw	r18, r8
    14fe:	65 e1       	ldi	r22, 0x15	; 21
    1500:	7e eb       	ldi	r23, 0xBE	; 190
    1502:	8d e3       	ldi	r24, 0x3D	; 61
    1504:	94 e4       	ldi	r25, 0x44	; 68
    1506:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    150a:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <sqrt>
    150e:	2a e9       	ldi	r18, 0x9A	; 154
    1510:	39 e9       	ldi	r19, 0x99	; 153
    1512:	49 ee       	ldi	r20, 0xE9	; 233
    1514:	50 e4       	ldi	r21, 0x40	; 64
    1516:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    151a:	20 e0       	ldi	r18, 0x00	; 0
    151c:	30 e0       	ldi	r19, 0x00	; 0
    151e:	40 e2       	ldi	r20, 0x20	; 32
    1520:	51 e4       	ldi	r21, 0x41	; 65
    1522:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1526:	69 8b       	std	Y+17, r22	; 0x11
    1528:	7d 8b       	std	Y+21, r23	; 0x15
    152a:	18 2f       	mov	r17, r24
    152c:	09 2f       	mov	r16, r25
					if(elevation>13 && elevation<81){
    152e:	20 e0       	ldi	r18, 0x00	; 0
    1530:	30 e0       	ldi	r19, 0x00	; 0
    1532:	40 e5       	ldi	r20, 0x50	; 80
    1534:	51 e4       	ldi	r21, 0x41	; 65
    1536:	c7 01       	movw	r24, r14
    1538:	b6 01       	movw	r22, r12
    153a:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__gesf2>
    153e:	18 16       	cp	r1, r24
    1540:	84 f4       	brge	.+32     	; 0x1562 <__stack+0xc63>
    1542:	20 e0       	ldi	r18, 0x00	; 0
    1544:	30 e0       	ldi	r19, 0x00	; 0
    1546:	42 ea       	ldi	r20, 0xA2	; 162
    1548:	52 e4       	ldi	r21, 0x42	; 66
    154a:	c7 01       	movw	r24, r14
    154c:	b6 01       	movw	r22, r12
    154e:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
    1552:	88 23       	and	r24, r24
    1554:	34 f4       	brge	.+12     	; 0x1562 <__stack+0xc63>
						step_lin(S);
    1556:	69 89       	ldd	r22, Y+17	; 0x11
    1558:	7d 89       	ldd	r23, Y+21	; 0x15
    155a:	81 2f       	mov	r24, r17
    155c:	90 2f       	mov	r25, r16
    155e:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <step_lin>
					}
					double RefAzimuth = 360 - (acos(((sin(declination * conv) * cos(lat * conv)) - (cos(declination * conv) * sin(lat * conv) * cos(HRA * conv))) / (cos(elevation * conv))) * conv2);
    1562:	20 e8       	ldi	r18, 0x80	; 128
    1564:	31 eb       	ldi	r19, 0xB1	; 177
    1566:	4d e5       	ldi	r20, 0x5D	; 93
    1568:	5f e3       	ldi	r21, 0x3F	; 63
    156a:	6d 81       	ldd	r22, Y+5	; 0x05
    156c:	7e 81       	ldd	r23, Y+6	; 0x06
    156e:	8f 81       	ldd	r24, Y+7	; 0x07
    1570:	98 85       	ldd	r25, Y+8	; 0x08
    1572:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1576:	4b 01       	movw	r8, r22
    1578:	5c 01       	movw	r10, r24
    157a:	2f e0       	ldi	r18, 0x0F	; 15
    157c:	34 e0       	ldi	r19, 0x04	; 4
    157e:	40 e0       	ldi	r20, 0x00	; 0
    1580:	5f e3       	ldi	r21, 0x3F	; 63
    1582:	69 85       	ldd	r22, Y+9	; 0x09
    1584:	7a 85       	ldd	r23, Y+10	; 0x0a
    1586:	8b 85       	ldd	r24, Y+11	; 0x0b
    1588:	9c 85       	ldd	r25, Y+12	; 0x0c
    158a:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    158e:	9b 01       	movw	r18, r22
    1590:	ac 01       	movw	r20, r24
    1592:	69 81       	ldd	r22, Y+1	; 0x01
    1594:	7a 81       	ldd	r23, Y+2	; 0x02
    1596:	8b 81       	ldd	r24, Y+3	; 0x03
    1598:	9c 81       	ldd	r25, Y+4	; 0x04
    159a:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    159e:	9b 01       	movw	r18, r22
    15a0:	ac 01       	movw	r20, r24
    15a2:	c5 01       	movw	r24, r10
    15a4:	b4 01       	movw	r22, r8
    15a6:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    15aa:	4b 01       	movw	r8, r22
    15ac:	5c 01       	movw	r10, r24
    15ae:	25 e3       	ldi	r18, 0x35	; 53
    15b0:	3a ef       	ldi	r19, 0xFA	; 250
    15b2:	4e e8       	ldi	r20, 0x8E	; 142
    15b4:	5c e3       	ldi	r21, 0x3C	; 60
    15b6:	c7 01       	movw	r24, r14
    15b8:	b6 01       	movw	r22, r12
    15ba:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    15be:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    15c2:	9b 01       	movw	r18, r22
    15c4:	ac 01       	movw	r20, r24
    15c6:	c5 01       	movw	r24, r10
    15c8:	b4 01       	movw	r22, r8
    15ca:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
    15ce:	0e 94 04 13 	call	0x2608	; 0x2608 <acos>
    15d2:	21 ee       	ldi	r18, 0xE1	; 225
    15d4:	3e e2       	ldi	r19, 0x2E	; 46
    15d6:	45 e6       	ldi	r20, 0x65	; 101
    15d8:	52 e4       	ldi	r21, 0x42	; 66
    15da:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    15de:	9b 01       	movw	r18, r22
    15e0:	ac 01       	movw	r20, r24
    15e2:	60 e0       	ldi	r22, 0x00	; 0
    15e4:	70 e0       	ldi	r23, 0x00	; 0
    15e6:	84 eb       	ldi	r24, 0xB4	; 180
    15e8:	93 e4       	ldi	r25, 0x43	; 67
    15ea:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    15ee:	6d 83       	std	Y+5, r22	; 0x05
    15f0:	79 87       	std	Y+9, r23	; 0x09
    15f2:	28 2e       	mov	r2, r24
    15f4:	39 2e       	mov	r3, r25
					step(RefAzimuth);
    15f6:	0e 94 94 10 	call	0x2128	; 0x2128 <step>
					hourD += 0.166667;
    15fa:	21 ec       	ldi	r18, 0xC1	; 193
    15fc:	3a ea       	ldi	r19, 0xAA	; 170
    15fe:	4a e2       	ldi	r20, 0x2A	; 42
    1600:	5e e3       	ldi	r21, 0x3E	; 62
    1602:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <hourD>
    1606:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <hourD+0x1>
    160a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <hourD+0x2>
    160e:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <hourD+0x3>
    1612:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    1616:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <hourD>
    161a:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <hourD+0x1>
    161e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <hourD+0x2>
    1622:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <hourD+0x3>
    1626:	19 a3       	std	Y+33, r17	; 0x21
    1628:	09 a7       	std	Y+41, r16	; 0x29
					
					while((HRA<0) && (hourD > sunrise && hourD < sunset)){
    162a:	7c c1       	rjmp	.+760    	; 0x1924 <__stack+0x1025>
						double LSTM = 15 * GMT;double B = ((double)(360) / (double)(365)) * (days - 81);double EoT = 9.87 * sin(2 * B * conv) - 7.53 * cos(B * conv) - 1.5 * sin(B * conv);double TC = EoT + (4 * (lon - LSTM));double LST = hourD + ((double)(TC) / (double)(60));double HRA = (15 * (LST - 12));double declination = (23.45 * sin(B * conv));			double sunrise = 12 - ((double)1 / (double)15) * (acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);double sunset = 12 + (((double)1 / (double)15) * acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);double elevation = asin(((sin(declination * conv) * sin(lat * conv)) + (cos(declination * conv) * cos(lat * conv) * cos(HRA * conv)))) * conv2;float phi = elevation * PI/180;float alpha = pow(A,2) + pow(Beta,2);float beta = (float)2*A*Beta;
    162c:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1630:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1634:	61 55       	subi	r22, 0x51	; 81
    1636:	71 09       	sbc	r23, r1
    1638:	07 2e       	mov	r0, r23
    163a:	00 0c       	add	r0, r0
    163c:	88 0b       	sbc	r24, r24
    163e:	99 0b       	sbc	r25, r25
    1640:	0e 94 68 14 	call	0x28d0	; 0x28d0 <__floatsisf>
    1644:	2f e3       	ldi	r18, 0x3F	; 63
    1646:	3e e7       	ldi	r19, 0x7E	; 126
    1648:	4c e7       	ldi	r20, 0x7C	; 124
    164a:	5f e3       	ldi	r21, 0x3F	; 63
    164c:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1650:	4b 01       	movw	r8, r22
    1652:	5c 01       	movw	r10, r24
    1654:	9b 01       	movw	r18, r22
    1656:	ac 01       	movw	r20, r24
    1658:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    165c:	25 e3       	ldi	r18, 0x35	; 53
    165e:	3a ef       	ldi	r19, 0xFA	; 250
    1660:	4e e8       	ldi	r20, 0x8E	; 142
    1662:	5c e3       	ldi	r21, 0x3C	; 60
    1664:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1668:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
    166c:	25 e8       	ldi	r18, 0x85	; 133
    166e:	3b ee       	ldi	r19, 0xEB	; 235
    1670:	4d e1       	ldi	r20, 0x1D	; 29
    1672:	51 e4       	ldi	r21, 0x41	; 65
    1674:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1678:	2b 01       	movw	r4, r22
    167a:	3c 01       	movw	r6, r24
    167c:	25 e3       	ldi	r18, 0x35	; 53
    167e:	3a ef       	ldi	r19, 0xFA	; 250
    1680:	4e e8       	ldi	r20, 0x8E	; 142
    1682:	5c e3       	ldi	r21, 0x3C	; 60
    1684:	c5 01       	movw	r24, r10
    1686:	b4 01       	movw	r22, r8
    1688:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    168c:	4b 01       	movw	r8, r22
    168e:	5c 01       	movw	r10, r24
    1690:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    1694:	23 ec       	ldi	r18, 0xC3	; 195
    1696:	35 ef       	ldi	r19, 0xF5	; 245
    1698:	40 ef       	ldi	r20, 0xF0	; 240
    169a:	50 e4       	ldi	r21, 0x40	; 64
    169c:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    16a0:	9b 01       	movw	r18, r22
    16a2:	ac 01       	movw	r20, r24
    16a4:	c3 01       	movw	r24, r6
    16a6:	b2 01       	movw	r22, r4
    16a8:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    16ac:	2b 01       	movw	r4, r22
    16ae:	3c 01       	movw	r6, r24
    16b0:	c5 01       	movw	r24, r10
    16b2:	b4 01       	movw	r22, r8
    16b4:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
    16b8:	4b 01       	movw	r8, r22
    16ba:	5c 01       	movw	r10, r24
    16bc:	20 e0       	ldi	r18, 0x00	; 0
    16be:	30 e0       	ldi	r19, 0x00	; 0
    16c0:	40 ec       	ldi	r20, 0xC0	; 192
    16c2:	5f e3       	ldi	r21, 0x3F	; 63
    16c4:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    16c8:	9b 01       	movw	r18, r22
    16ca:	ac 01       	movw	r20, r24
    16cc:	c3 01       	movw	r24, r6
    16ce:	b2 01       	movw	r22, r4
    16d0:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    16d4:	20 e7       	ldi	r18, 0x70	; 112
    16d6:	36 ea       	ldi	r19, 0xA6	; 166
    16d8:	49 ed       	ldi	r20, 0xD9	; 217
    16da:	50 e4       	ldi	r21, 0x40	; 64
    16dc:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    16e0:	20 e0       	ldi	r18, 0x00	; 0
    16e2:	30 e0       	ldi	r19, 0x00	; 0
    16e4:	40 e7       	ldi	r20, 0x70	; 112
    16e6:	52 e4       	ldi	r21, 0x42	; 66
    16e8:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
    16ec:	9b 01       	movw	r18, r22
    16ee:	ac 01       	movw	r20, r24
    16f0:	c7 01       	movw	r24, r14
    16f2:	b6 01       	movw	r22, r12
    16f4:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    16f8:	20 e0       	ldi	r18, 0x00	; 0
    16fa:	30 e0       	ldi	r19, 0x00	; 0
    16fc:	40 e4       	ldi	r20, 0x40	; 64
    16fe:	51 e4       	ldi	r21, 0x41	; 65
    1700:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1704:	20 e0       	ldi	r18, 0x00	; 0
    1706:	30 e0       	ldi	r19, 0x00	; 0
    1708:	40 e7       	ldi	r20, 0x70	; 112
    170a:	51 e4       	ldi	r21, 0x41	; 65
    170c:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1710:	2b 01       	movw	r4, r22
    1712:	3c 01       	movw	r6, r24
    1714:	2a e9       	ldi	r18, 0x9A	; 154
    1716:	39 e9       	ldi	r19, 0x99	; 153
    1718:	4b eb       	ldi	r20, 0xBB	; 187
    171a:	51 e4       	ldi	r21, 0x41	; 65
    171c:	c5 01       	movw	r24, r10
    171e:	b4 01       	movw	r22, r8
    1720:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1724:	25 e3       	ldi	r18, 0x35	; 53
    1726:	3a ef       	ldi	r19, 0xFA	; 250
    1728:	4e e8       	ldi	r20, 0x8E	; 142
    172a:	5c e3       	ldi	r21, 0x3C	; 60
    172c:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1730:	6b 01       	movw	r12, r22
    1732:	7c 01       	movw	r14, r24
    1734:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
    1738:	69 83       	std	Y+1, r22	; 0x01
    173a:	7a 83       	std	Y+2, r23	; 0x02
    173c:	8b 83       	std	Y+3, r24	; 0x03
    173e:	9c 83       	std	Y+4, r25	; 0x04
    1740:	2f e0       	ldi	r18, 0x0F	; 15
    1742:	34 e0       	ldi	r19, 0x04	; 4
    1744:	40 e0       	ldi	r20, 0x00	; 0
    1746:	5f e3       	ldi	r21, 0x3F	; 63
    1748:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    174c:	4b 01       	movw	r8, r22
    174e:	5c 01       	movw	r10, r24
    1750:	c7 01       	movw	r24, r14
    1752:	b6 01       	movw	r22, r12
    1754:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    1758:	6d 87       	std	Y+13, r22	; 0x0d
    175a:	7e 87       	std	Y+14, r23	; 0x0e
    175c:	8f 87       	std	Y+15, r24	; 0x0f
    175e:	98 8b       	std	Y+16, r25	; 0x10
    1760:	20 e8       	ldi	r18, 0x80	; 128
    1762:	31 eb       	ldi	r19, 0xB1	; 177
    1764:	4d e5       	ldi	r20, 0x5D	; 93
    1766:	5f e3       	ldi	r21, 0x3F	; 63
    1768:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    176c:	6b 01       	movw	r12, r22
    176e:	7c 01       	movw	r14, r24
    1770:	25 e3       	ldi	r18, 0x35	; 53
    1772:	3a ef       	ldi	r19, 0xFA	; 250
    1774:	4e e8       	ldi	r20, 0x8E	; 142
    1776:	5c e3       	ldi	r21, 0x3C	; 60
    1778:	c3 01       	movw	r24, r6
    177a:	b2 01       	movw	r22, r4
    177c:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1780:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    1784:	2b 01       	movw	r4, r22
    1786:	3c 01       	movw	r6, r24
    1788:	9b 01       	movw	r18, r22
    178a:	ac 01       	movw	r20, r24
    178c:	c7 01       	movw	r24, r14
    178e:	b6 01       	movw	r22, r12
    1790:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1794:	9b 01       	movw	r18, r22
    1796:	ac 01       	movw	r20, r24
    1798:	c5 01       	movw	r24, r10
    179a:	b4 01       	movw	r22, r8
    179c:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    17a0:	0e 94 82 13 	call	0x2704	; 0x2704 <asin>
    17a4:	21 ee       	ldi	r18, 0xE1	; 225
    17a6:	3e e2       	ldi	r19, 0x2E	; 46
    17a8:	45 e6       	ldi	r20, 0x65	; 101
    17aa:	52 e4       	ldi	r21, 0x42	; 66
    17ac:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    17b0:	6b 01       	movw	r12, r22
    17b2:	7c 01       	movw	r14, r24
    17b4:	2b ed       	ldi	r18, 0xDB	; 219
    17b6:	3f e0       	ldi	r19, 0x0F	; 15
    17b8:	49 e4       	ldi	r20, 0x49	; 73
    17ba:	50 e4       	ldi	r21, 0x40	; 64
    17bc:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    17c0:	20 e0       	ldi	r18, 0x00	; 0
    17c2:	30 e0       	ldi	r19, 0x00	; 0
    17c4:	44 e3       	ldi	r20, 0x34	; 52
    17c6:	53 e4       	ldi	r21, 0x43	; 67
    17c8:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
						float newS = 10* (sqrt(alpha - (beta*cos(phi))) - 7.3);
    17cc:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    17d0:	25 e1       	ldi	r18, 0x15	; 21
    17d2:	3e ea       	ldi	r19, 0xAE	; 174
    17d4:	48 e3       	ldi	r20, 0x38	; 56
    17d6:	54 e4       	ldi	r21, 0x44	; 68
    17d8:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    17dc:	4b 01       	movw	r8, r22
    17de:	5c 01       	movw	r10, r24
    17e0:	a5 01       	movw	r20, r10
    17e2:	94 01       	movw	r18, r8
    17e4:	65 e1       	ldi	r22, 0x15	; 21
    17e6:	7e eb       	ldi	r23, 0xBE	; 190
    17e8:	8d e3       	ldi	r24, 0x3D	; 61
    17ea:	94 e4       	ldi	r25, 0x44	; 68
    17ec:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    17f0:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <sqrt>
    17f4:	2a e9       	ldi	r18, 0x9A	; 154
    17f6:	39 e9       	ldi	r19, 0x99	; 153
    17f8:	49 ee       	ldi	r20, 0xE9	; 233
    17fa:	50 e4       	ldi	r21, 0x40	; 64
    17fc:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1800:	20 e0       	ldi	r18, 0x00	; 0
    1802:	30 e0       	ldi	r19, 0x00	; 0
    1804:	40 e2       	ldi	r20, 0x20	; 32
    1806:	51 e4       	ldi	r21, 0x41	; 65
    1808:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    180c:	16 2f       	mov	r17, r22
    180e:	07 2f       	mov	r16, r23
    1810:	8b a7       	std	Y+43, r24	; 0x2b
    1812:	9a a7       	std	Y+42, r25	; 0x2a
						float diffS = newS - S;
    1814:	29 89       	ldd	r18, Y+17	; 0x11
    1816:	3d 89       	ldd	r19, Y+21	; 0x15
    1818:	49 a1       	ldd	r20, Y+33	; 0x21
    181a:	59 a5       	ldd	r21, Y+41	; 0x29
    181c:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1820:	4b 01       	movw	r8, r22
    1822:	5c 01       	movw	r10, r24
						S = newS;
						if(elevation>13 && elevation<81){
    1824:	20 e0       	ldi	r18, 0x00	; 0
    1826:	30 e0       	ldi	r19, 0x00	; 0
    1828:	40 e5       	ldi	r20, 0x50	; 80
    182a:	51 e4       	ldi	r21, 0x41	; 65
    182c:	c7 01       	movw	r24, r14
    182e:	b6 01       	movw	r22, r12
    1830:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__gesf2>
    1834:	18 16       	cp	r1, r24
    1836:	74 f4       	brge	.+28     	; 0x1854 <__stack+0xf55>
    1838:	20 e0       	ldi	r18, 0x00	; 0
    183a:	30 e0       	ldi	r19, 0x00	; 0
    183c:	42 ea       	ldi	r20, 0xA2	; 162
    183e:	52 e4       	ldi	r21, 0x42	; 66
    1840:	c7 01       	movw	r24, r14
    1842:	b6 01       	movw	r22, r12
    1844:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
    1848:	88 23       	and	r24, r24
    184a:	24 f4       	brge	.+8      	; 0x1854 <__stack+0xf55>
							step_lin(diffS);
    184c:	c5 01       	movw	r24, r10
    184e:	b4 01       	movw	r22, r8
    1850:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <step_lin>
						}
						double NewAzimuth = acos(((sin(declination * conv) * cos(lat * conv)) - (cos(declination * conv) * sin(lat * conv) * cos(HRA * conv))) / (cos(elevation * conv))) * conv2;
    1854:	20 e8       	ldi	r18, 0x80	; 128
    1856:	31 eb       	ldi	r19, 0xB1	; 177
    1858:	4d e5       	ldi	r20, 0x5D	; 93
    185a:	5f e3       	ldi	r21, 0x3F	; 63
    185c:	69 81       	ldd	r22, Y+1	; 0x01
    185e:	7a 81       	ldd	r23, Y+2	; 0x02
    1860:	8b 81       	ldd	r24, Y+3	; 0x03
    1862:	9c 81       	ldd	r25, Y+4	; 0x04
    1864:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1868:	4b 01       	movw	r8, r22
    186a:	5c 01       	movw	r10, r24
    186c:	2f e0       	ldi	r18, 0x0F	; 15
    186e:	34 e0       	ldi	r19, 0x04	; 4
    1870:	40 e0       	ldi	r20, 0x00	; 0
    1872:	5f e3       	ldi	r21, 0x3F	; 63
    1874:	6d 85       	ldd	r22, Y+13	; 0x0d
    1876:	7e 85       	ldd	r23, Y+14	; 0x0e
    1878:	8f 85       	ldd	r24, Y+15	; 0x0f
    187a:	98 89       	ldd	r25, Y+16	; 0x10
    187c:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1880:	9b 01       	movw	r18, r22
    1882:	ac 01       	movw	r20, r24
    1884:	c3 01       	movw	r24, r6
    1886:	b2 01       	movw	r22, r4
    1888:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    188c:	9b 01       	movw	r18, r22
    188e:	ac 01       	movw	r20, r24
    1890:	c5 01       	movw	r24, r10
    1892:	b4 01       	movw	r22, r8
    1894:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1898:	4b 01       	movw	r8, r22
    189a:	5c 01       	movw	r10, r24
    189c:	25 e3       	ldi	r18, 0x35	; 53
    189e:	3a ef       	ldi	r19, 0xFA	; 250
    18a0:	4e e8       	ldi	r20, 0x8E	; 142
    18a2:	5c e3       	ldi	r21, 0x3C	; 60
    18a4:	c7 01       	movw	r24, r14
    18a6:	b6 01       	movw	r22, r12
    18a8:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    18ac:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    18b0:	9b 01       	movw	r18, r22
    18b2:	ac 01       	movw	r20, r24
    18b4:	c5 01       	movw	r24, r10
    18b6:	b4 01       	movw	r22, r8
    18b8:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
    18bc:	0e 94 04 13 	call	0x2608	; 0x2608 <acos>
    18c0:	21 ee       	ldi	r18, 0xE1	; 225
    18c2:	3e e2       	ldi	r19, 0x2E	; 46
    18c4:	45 e6       	ldi	r20, 0x65	; 101
    18c6:	52 e4       	ldi	r21, 0x42	; 66
    18c8:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    18cc:	c6 2e       	mov	r12, r22
    18ce:	d7 2e       	mov	r13, r23
    18d0:	e8 2e       	mov	r14, r24
    18d2:	f9 2e       	mov	r15, r25
						double diffAzi = NewAzimuth - RefAzimuth;
    18d4:	2d 81       	ldd	r18, Y+5	; 0x05
    18d6:	39 85       	ldd	r19, Y+9	; 0x09
    18d8:	42 2d       	mov	r20, r2
    18da:	53 2d       	mov	r21, r3
    18dc:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
						RefAzimuth = NewAzimuth;
						step(diffAzi);
    18e0:	0e 94 94 10 	call	0x2128	; 0x2128 <step>
						hourD += 0.166667;
    18e4:	21 ec       	ldi	r18, 0xC1	; 193
    18e6:	3a ea       	ldi	r19, 0xAA	; 170
    18e8:	4a e2       	ldi	r20, 0x2A	; 42
    18ea:	5e e3       	ldi	r21, 0x3E	; 62
    18ec:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <hourD>
    18f0:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <hourD+0x1>
    18f4:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <hourD+0x2>
    18f8:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <hourD+0x3>
    18fc:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    1900:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <hourD>
    1904:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <hourD+0x1>
    1908:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <hourD+0x2>
    190c:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <hourD+0x3>
						if(elevation>13 && elevation<81){
							step_lin(diffS);
						}
						double NewAzimuth = acos(((sin(declination * conv) * cos(lat * conv)) - (cos(declination * conv) * sin(lat * conv) * cos(HRA * conv))) / (cos(elevation * conv))) * conv2;
						double diffAzi = NewAzimuth - RefAzimuth;
						RefAzimuth = NewAzimuth;
    1910:	cd 82       	std	Y+5, r12	; 0x05
    1912:	d9 86       	std	Y+9, r13	; 0x09
    1914:	2e 2c       	mov	r2, r14
    1916:	3f 2c       	mov	r3, r15
					
					while((HRA<0) && (hourD > sunrise && hourD < sunset)){
						double LSTM = 15 * GMT;double B = ((double)(360) / (double)(365)) * (days - 81);double EoT = 9.87 * sin(2 * B * conv) - 7.53 * cos(B * conv) - 1.5 * sin(B * conv);double TC = EoT + (4 * (lon - LSTM));double LST = hourD + ((double)(TC) / (double)(60));double HRA = (15 * (LST - 12));double declination = (23.45 * sin(B * conv));			double sunrise = 12 - ((double)1 / (double)15) * (acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);double sunset = 12 + (((double)1 / (double)15) * acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);double elevation = asin(((sin(declination * conv) * sin(lat * conv)) + (cos(declination * conv) * cos(lat * conv) * cos(HRA * conv)))) * conv2;float phi = elevation * PI/180;float alpha = pow(A,2) + pow(Beta,2);float beta = (float)2*A*Beta;
						float newS = 10* (sqrt(alpha - (beta*cos(phi))) - 7.3);
						float diffS = newS - S;
						S = newS;
    1918:	19 8b       	std	Y+17, r17	; 0x11
    191a:	0d 8b       	std	Y+21, r16	; 0x15
    191c:	8b a5       	ldd	r24, Y+43	; 0x2b
    191e:	89 a3       	std	Y+33, r24	; 0x21
    1920:	8a a5       	ldd	r24, Y+42	; 0x2a
    1922:	89 a7       	std	Y+41, r24	; 0x29
					}
					double RefAzimuth = 360 - (acos(((sin(declination * conv) * cos(lat * conv)) - (cos(declination * conv) * sin(lat * conv) * cos(HRA * conv))) / (cos(elevation * conv))) * conv2);
					step(RefAzimuth);
					hourD += 0.166667;
					
					while((HRA<0) && (hourD > sunrise && hourD < sunset)){
    1924:	20 e0       	ldi	r18, 0x00	; 0
    1926:	30 e0       	ldi	r19, 0x00	; 0
    1928:	a9 01       	movw	r20, r18
    192a:	6d a1       	ldd	r22, Y+37	; 0x25
    192c:	7e a1       	ldd	r23, Y+38	; 0x26
    192e:	8f a1       	ldd	r24, Y+39	; 0x27
    1930:	98 a5       	ldd	r25, Y+40	; 0x28
    1932:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
    1936:	88 23       	and	r24, r24
    1938:	0c f0       	brlt	.+2      	; 0x193c <__stack+0x103d>
    193a:	f9 c2       	rjmp	.+1522   	; 0x1f2e <__stack+0x162f>
    193c:	c0 90 02 01 	lds	r12, 0x0102	; 0x800102 <hourD>
    1940:	d0 90 03 01 	lds	r13, 0x0103	; 0x800103 <hourD+0x1>
    1944:	e0 90 04 01 	lds	r14, 0x0104	; 0x800104 <hourD+0x2>
    1948:	f0 90 05 01 	lds	r15, 0x0105	; 0x800105 <hourD+0x3>
    194c:	a7 01       	movw	r20, r14
    194e:	96 01       	movw	r18, r12
    1950:	69 8d       	ldd	r22, Y+25	; 0x19
    1952:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1954:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1956:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1958:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
    195c:	88 23       	and	r24, r24
    195e:	0c f0       	brlt	.+2      	; 0x1962 <__stack+0x1063>
    1960:	ed c2       	rjmp	.+1498   	; 0x1f3c <__stack+0x163d>
    1962:	a7 01       	movw	r20, r14
    1964:	96 01       	movw	r18, r12
    1966:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1968:	7e 8d       	ldd	r23, Y+30	; 0x1e
    196a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    196c:	98 a1       	ldd	r25, Y+32	; 0x20
    196e:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__gesf2>
    1972:	18 16       	cp	r1, r24
    1974:	0c f4       	brge	.+2      	; 0x1978 <__stack+0x1079>
    1976:	5a ce       	rjmp	.-844    	; 0x162c <__stack+0xd2d>
    1978:	19 a1       	ldd	r17, Y+33	; 0x21
    197a:	09 a5       	ldd	r16, Y+41	; 0x29
    197c:	89 89       	ldd	r24, Y+17	; 0x11
    197e:	8a a7       	std	Y+42, r24	; 0x2a
    1980:	8d 89       	ldd	r24, Y+21	; 0x15
    1982:	8b a7       	std	Y+43, r24	; 0x2b
    1984:	e1 c2       	rjmp	.+1474   	; 0x1f48 <__stack+0x1649>
						step(diffAzi);
						hourD += 0.166667;
					}
					
					while(HRA>0){
						double LSTM = 15 * GMT;double B = ((double)(360) / (double)(365)) * (days - 81);double EoT = 9.87 * sin(2 * B * conv) - 7.53 * cos(B * conv) - 1.5 * sin(B * conv);double TC = EoT + (4 * (lon - LSTM));double LST = hourD + ((double)(TC) / (double)(60));double HRA = (15 * (LST - 12));double declination = (23.45 * sin(B * conv));double sunrise = 12 - ((double)1 / (double)15) * (acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);double sunset = 12 + (((double)1 / (double)15) * acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);double elevation = asin(((sin(declination * conv) * sin(lat * conv)) + (cos(declination * conv) * cos(lat * conv) * cos(HRA * conv)))) * conv2;
    1986:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    198a:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    198e:	61 55       	subi	r22, 0x51	; 81
    1990:	71 09       	sbc	r23, r1
    1992:	07 2e       	mov	r0, r23
    1994:	00 0c       	add	r0, r0
    1996:	88 0b       	sbc	r24, r24
    1998:	99 0b       	sbc	r25, r25
    199a:	0e 94 68 14 	call	0x28d0	; 0x28d0 <__floatsisf>
    199e:	2f e3       	ldi	r18, 0x3F	; 63
    19a0:	3e e7       	ldi	r19, 0x7E	; 126
    19a2:	4c e7       	ldi	r20, 0x7C	; 124
    19a4:	5f e3       	ldi	r21, 0x3F	; 63
    19a6:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    19aa:	4b 01       	movw	r8, r22
    19ac:	5c 01       	movw	r10, r24
    19ae:	9b 01       	movw	r18, r22
    19b0:	ac 01       	movw	r20, r24
    19b2:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    19b6:	25 e3       	ldi	r18, 0x35	; 53
    19b8:	3a ef       	ldi	r19, 0xFA	; 250
    19ba:	4e e8       	ldi	r20, 0x8E	; 142
    19bc:	5c e3       	ldi	r21, 0x3C	; 60
    19be:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    19c2:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
    19c6:	25 e8       	ldi	r18, 0x85	; 133
    19c8:	3b ee       	ldi	r19, 0xEB	; 235
    19ca:	4d e1       	ldi	r20, 0x1D	; 29
    19cc:	51 e4       	ldi	r21, 0x41	; 65
    19ce:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    19d2:	6b 01       	movw	r12, r22
    19d4:	7c 01       	movw	r14, r24
    19d6:	25 e3       	ldi	r18, 0x35	; 53
    19d8:	3a ef       	ldi	r19, 0xFA	; 250
    19da:	4e e8       	ldi	r20, 0x8E	; 142
    19dc:	5c e3       	ldi	r21, 0x3C	; 60
    19de:	c5 01       	movw	r24, r10
    19e0:	b4 01       	movw	r22, r8
    19e2:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    19e6:	4b 01       	movw	r8, r22
    19e8:	5c 01       	movw	r10, r24
    19ea:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    19ee:	23 ec       	ldi	r18, 0xC3	; 195
    19f0:	35 ef       	ldi	r19, 0xF5	; 245
    19f2:	40 ef       	ldi	r20, 0xF0	; 240
    19f4:	50 e4       	ldi	r21, 0x40	; 64
    19f6:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    19fa:	9b 01       	movw	r18, r22
    19fc:	ac 01       	movw	r20, r24
    19fe:	c7 01       	movw	r24, r14
    1a00:	b6 01       	movw	r22, r12
    1a02:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1a06:	6b 01       	movw	r12, r22
    1a08:	7c 01       	movw	r14, r24
    1a0a:	c5 01       	movw	r24, r10
    1a0c:	b4 01       	movw	r22, r8
    1a0e:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
    1a12:	4b 01       	movw	r8, r22
    1a14:	5c 01       	movw	r10, r24
    1a16:	20 e0       	ldi	r18, 0x00	; 0
    1a18:	30 e0       	ldi	r19, 0x00	; 0
    1a1a:	40 ec       	ldi	r20, 0xC0	; 192
    1a1c:	5f e3       	ldi	r21, 0x3F	; 63
    1a1e:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1a22:	9b 01       	movw	r18, r22
    1a24:	ac 01       	movw	r20, r24
    1a26:	c7 01       	movw	r24, r14
    1a28:	b6 01       	movw	r22, r12
    1a2a:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1a2e:	20 e7       	ldi	r18, 0x70	; 112
    1a30:	36 ea       	ldi	r19, 0xA6	; 166
    1a32:	49 ed       	ldi	r20, 0xD9	; 217
    1a34:	50 e4       	ldi	r21, 0x40	; 64
    1a36:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    1a3a:	20 e0       	ldi	r18, 0x00	; 0
    1a3c:	30 e0       	ldi	r19, 0x00	; 0
    1a3e:	40 e7       	ldi	r20, 0x70	; 112
    1a40:	52 e4       	ldi	r21, 0x42	; 66
    1a42:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
    1a46:	6b 01       	movw	r12, r22
    1a48:	7c 01       	movw	r14, r24
    1a4a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <hourD>
    1a4e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <hourD+0x1>
    1a52:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <hourD+0x2>
    1a56:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <hourD+0x3>
    1a5a:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    1a5e:	20 e0       	ldi	r18, 0x00	; 0
    1a60:	30 e0       	ldi	r19, 0x00	; 0
    1a62:	40 e4       	ldi	r20, 0x40	; 64
    1a64:	51 e4       	ldi	r21, 0x41	; 65
    1a66:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1a6a:	20 e0       	ldi	r18, 0x00	; 0
    1a6c:	30 e0       	ldi	r19, 0x00	; 0
    1a6e:	40 e7       	ldi	r20, 0x70	; 112
    1a70:	51 e4       	ldi	r21, 0x41	; 65
    1a72:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1a76:	2b 01       	movw	r4, r22
    1a78:	3c 01       	movw	r6, r24
    1a7a:	2a e9       	ldi	r18, 0x9A	; 154
    1a7c:	39 e9       	ldi	r19, 0x99	; 153
    1a7e:	4b eb       	ldi	r20, 0xBB	; 187
    1a80:	51 e4       	ldi	r21, 0x41	; 65
    1a82:	c5 01       	movw	r24, r10
    1a84:	b4 01       	movw	r22, r8
    1a86:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1a8a:	25 e3       	ldi	r18, 0x35	; 53
    1a8c:	3a ef       	ldi	r19, 0xFA	; 250
    1a8e:	4e e8       	ldi	r20, 0x8E	; 142
    1a90:	5c e3       	ldi	r21, 0x3C	; 60
    1a92:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1a96:	4b 01       	movw	r8, r22
    1a98:	5c 01       	movw	r10, r24
    1a9a:	0e 94 ee 16 	call	0x2ddc	; 0x2ddc <tan>
    1a9e:	29 e7       	ldi	r18, 0x79	; 121
    1aa0:	33 ed       	ldi	r19, 0xD3	; 211
    1aa2:	43 e1       	ldi	r20, 0x13	; 19
    1aa4:	5f eb       	ldi	r21, 0xBF	; 191
    1aa6:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1aaa:	0e 94 04 13 	call	0x2608	; 0x2608 <acos>
    1aae:	29 e8       	ldi	r18, 0x89	; 137
    1ab0:	38 e8       	ldi	r19, 0x88	; 136
    1ab2:	48 e8       	ldi	r20, 0x88	; 136
    1ab4:	5d e3       	ldi	r21, 0x3D	; 61
    1ab6:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1aba:	21 ee       	ldi	r18, 0xE1	; 225
    1abc:	3e e2       	ldi	r19, 0x2E	; 46
    1abe:	45 e6       	ldi	r20, 0x65	; 101
    1ac0:	52 e4       	ldi	r21, 0x42	; 66
    1ac2:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1ac6:	20 e0       	ldi	r18, 0x00	; 0
    1ac8:	30 e0       	ldi	r19, 0x00	; 0
    1aca:	40 e4       	ldi	r20, 0x40	; 64
    1acc:	51 e4       	ldi	r21, 0x41	; 65
    1ace:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    1ad2:	a7 01       	movw	r20, r14
    1ad4:	96 01       	movw	r18, r12
    1ad6:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1ada:	6d 8b       	std	Y+21, r22	; 0x15
    1adc:	7e 8b       	std	Y+22, r23	; 0x16
    1ade:	8f 8b       	std	Y+23, r24	; 0x17
    1ae0:	98 8f       	std	Y+24, r25	; 0x18
    1ae2:	c5 01       	movw	r24, r10
    1ae4:	b4 01       	movw	r22, r8
    1ae6:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
    1aea:	69 83       	std	Y+1, r22	; 0x01
    1aec:	7a 83       	std	Y+2, r23	; 0x02
    1aee:	8b 83       	std	Y+3, r24	; 0x03
    1af0:	9c 83       	std	Y+4, r25	; 0x04
    1af2:	2f e0       	ldi	r18, 0x0F	; 15
    1af4:	34 e0       	ldi	r19, 0x04	; 4
    1af6:	40 e0       	ldi	r20, 0x00	; 0
    1af8:	5f e3       	ldi	r21, 0x3F	; 63
    1afa:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1afe:	6b 01       	movw	r12, r22
    1b00:	7c 01       	movw	r14, r24
    1b02:	c5 01       	movw	r24, r10
    1b04:	b4 01       	movw	r22, r8
    1b06:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    1b0a:	6d 87       	std	Y+13, r22	; 0x0d
    1b0c:	7e 87       	std	Y+14, r23	; 0x0e
    1b0e:	8f 87       	std	Y+15, r24	; 0x0f
    1b10:	98 8b       	std	Y+16, r25	; 0x10
    1b12:	20 e8       	ldi	r18, 0x80	; 128
    1b14:	31 eb       	ldi	r19, 0xB1	; 177
    1b16:	4d e5       	ldi	r20, 0x5D	; 93
    1b18:	5f e3       	ldi	r21, 0x3F	; 63
    1b1a:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1b1e:	4b 01       	movw	r8, r22
    1b20:	5c 01       	movw	r10, r24
    1b22:	25 e3       	ldi	r18, 0x35	; 53
    1b24:	3a ef       	ldi	r19, 0xFA	; 250
    1b26:	4e e8       	ldi	r20, 0x8E	; 142
    1b28:	5c e3       	ldi	r21, 0x3C	; 60
    1b2a:	c3 01       	movw	r24, r6
    1b2c:	b2 01       	movw	r22, r4
    1b2e:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1b32:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    1b36:	69 8b       	std	Y+17, r22	; 0x11
    1b38:	7a 8b       	std	Y+18, r23	; 0x12
    1b3a:	8b 8b       	std	Y+19, r24	; 0x13
    1b3c:	9c 8b       	std	Y+20, r25	; 0x14
    1b3e:	9b 01       	movw	r18, r22
    1b40:	ac 01       	movw	r20, r24
    1b42:	c5 01       	movw	r24, r10
    1b44:	b4 01       	movw	r22, r8
    1b46:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1b4a:	9b 01       	movw	r18, r22
    1b4c:	ac 01       	movw	r20, r24
    1b4e:	c7 01       	movw	r24, r14
    1b50:	b6 01       	movw	r22, r12
    1b52:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    1b56:	0e 94 82 13 	call	0x2704	; 0x2704 <asin>
    1b5a:	21 ee       	ldi	r18, 0xE1	; 225
    1b5c:	3e e2       	ldi	r19, 0x2E	; 46
    1b5e:	45 e6       	ldi	r20, 0x65	; 101
    1b60:	52 e4       	ldi	r21, 0x42	; 66
    1b62:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1b66:	6b 01       	movw	r12, r22
    1b68:	7c 01       	movw	r14, r24
						float phi =  -1*elevation * PI/180;
    1b6a:	90 58       	subi	r25, 0x80	; 128
    1b6c:	2b ed       	ldi	r18, 0xDB	; 219
    1b6e:	3f e0       	ldi	r19, 0x0F	; 15
    1b70:	49 e4       	ldi	r20, 0x49	; 73
    1b72:	50 e4       	ldi	r21, 0x40	; 64
    1b74:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1b78:	20 e0       	ldi	r18, 0x00	; 0
    1b7a:	30 e0       	ldi	r19, 0x00	; 0
    1b7c:	44 e3       	ldi	r20, 0x34	; 52
    1b7e:	53 e4       	ldi	r21, 0x43	; 67
    1b80:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
						float alpha = pow(A,2) + pow(Beta,2); //7
						float beta = (float)2*A*Beta;
						float newS = fabs(10* (sqrt(alpha - (beta*cos(phi))) - 7.3));
    1b84:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    1b88:	25 e1       	ldi	r18, 0x15	; 21
    1b8a:	3e ea       	ldi	r19, 0xAE	; 174
    1b8c:	48 e3       	ldi	r20, 0x38	; 56
    1b8e:	54 e4       	ldi	r21, 0x44	; 68
    1b90:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1b94:	4b 01       	movw	r8, r22
    1b96:	5c 01       	movw	r10, r24
    1b98:	a5 01       	movw	r20, r10
    1b9a:	94 01       	movw	r18, r8
    1b9c:	65 e1       	ldi	r22, 0x15	; 21
    1b9e:	7e eb       	ldi	r23, 0xBE	; 190
    1ba0:	8d e3       	ldi	r24, 0x3D	; 61
    1ba2:	94 e4       	ldi	r25, 0x44	; 68
    1ba4:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1ba8:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <sqrt>
    1bac:	2a e9       	ldi	r18, 0x9A	; 154
    1bae:	39 e9       	ldi	r19, 0x99	; 153
    1bb0:	49 ee       	ldi	r20, 0xE9	; 233
    1bb2:	50 e4       	ldi	r21, 0x40	; 64
    1bb4:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1bb8:	20 e0       	ldi	r18, 0x00	; 0
    1bba:	30 e0       	ldi	r19, 0x00	; 0
    1bbc:	40 e2       	ldi	r20, 0x20	; 32
    1bbe:	51 e4       	ldi	r21, 0x41	; 65
    1bc0:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1bc4:	2b 01       	movw	r4, r22
    1bc6:	3c 01       	movw	r6, r24
    1bc8:	e8 94       	clt
    1bca:	77 f8       	bld	r7, 7
						float diffS = newS - S;
    1bcc:	2a a5       	ldd	r18, Y+42	; 0x2a
    1bce:	3b a5       	ldd	r19, Y+43	; 0x2b
    1bd0:	41 2f       	mov	r20, r17
    1bd2:	50 2f       	mov	r21, r16
    1bd4:	c3 01       	movw	r24, r6
    1bd6:	b2 01       	movw	r22, r4
    1bd8:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1bdc:	4b 01       	movw	r8, r22
    1bde:	5c 01       	movw	r10, r24
						S = newS;
						if(elevation>13 && elevation<81){
    1be0:	20 e0       	ldi	r18, 0x00	; 0
    1be2:	30 e0       	ldi	r19, 0x00	; 0
    1be4:	40 e5       	ldi	r20, 0x50	; 80
    1be6:	51 e4       	ldi	r21, 0x41	; 65
    1be8:	c7 01       	movw	r24, r14
    1bea:	b6 01       	movw	r22, r12
    1bec:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__gesf2>
    1bf0:	18 16       	cp	r1, r24
    1bf2:	74 f4       	brge	.+28     	; 0x1c10 <__stack+0x1311>
    1bf4:	20 e0       	ldi	r18, 0x00	; 0
    1bf6:	30 e0       	ldi	r19, 0x00	; 0
    1bf8:	42 ea       	ldi	r20, 0xA2	; 162
    1bfa:	52 e4       	ldi	r21, 0x42	; 66
    1bfc:	c7 01       	movw	r24, r14
    1bfe:	b6 01       	movw	r22, r12
    1c00:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
    1c04:	88 23       	and	r24, r24
    1c06:	24 f4       	brge	.+8      	; 0x1c10 <__stack+0x1311>
							step_lin(diffS);
    1c08:	c5 01       	movw	r24, r10
    1c0a:	b4 01       	movw	r22, r8
    1c0c:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <step_lin>
						}
						double NewAzimuth = 360 - (acos(((sin(declination * conv) * cos(lat * conv)) - (cos(declination * conv) * sin(lat * conv) * cos(HRA * conv))) / (cos(elevation * conv))) * conv2);
    1c10:	20 e8       	ldi	r18, 0x80	; 128
    1c12:	31 eb       	ldi	r19, 0xB1	; 177
    1c14:	4d e5       	ldi	r20, 0x5D	; 93
    1c16:	5f e3       	ldi	r21, 0x3F	; 63
    1c18:	69 81       	ldd	r22, Y+1	; 0x01
    1c1a:	7a 81       	ldd	r23, Y+2	; 0x02
    1c1c:	8b 81       	ldd	r24, Y+3	; 0x03
    1c1e:	9c 81       	ldd	r25, Y+4	; 0x04
    1c20:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1c24:	4b 01       	movw	r8, r22
    1c26:	5c 01       	movw	r10, r24
    1c28:	2f e0       	ldi	r18, 0x0F	; 15
    1c2a:	34 e0       	ldi	r19, 0x04	; 4
    1c2c:	40 e0       	ldi	r20, 0x00	; 0
    1c2e:	5f e3       	ldi	r21, 0x3F	; 63
    1c30:	6d 85       	ldd	r22, Y+13	; 0x0d
    1c32:	7e 85       	ldd	r23, Y+14	; 0x0e
    1c34:	8f 85       	ldd	r24, Y+15	; 0x0f
    1c36:	98 89       	ldd	r25, Y+16	; 0x10
    1c38:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1c3c:	9b 01       	movw	r18, r22
    1c3e:	ac 01       	movw	r20, r24
    1c40:	69 89       	ldd	r22, Y+17	; 0x11
    1c42:	7a 89       	ldd	r23, Y+18	; 0x12
    1c44:	8b 89       	ldd	r24, Y+19	; 0x13
    1c46:	9c 89       	ldd	r25, Y+20	; 0x14
    1c48:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1c4c:	9b 01       	movw	r18, r22
    1c4e:	ac 01       	movw	r20, r24
    1c50:	c5 01       	movw	r24, r10
    1c52:	b4 01       	movw	r22, r8
    1c54:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1c58:	4b 01       	movw	r8, r22
    1c5a:	5c 01       	movw	r10, r24
    1c5c:	25 e3       	ldi	r18, 0x35	; 53
    1c5e:	3a ef       	ldi	r19, 0xFA	; 250
    1c60:	4e e8       	ldi	r20, 0x8E	; 142
    1c62:	5c e3       	ldi	r21, 0x3C	; 60
    1c64:	c7 01       	movw	r24, r14
    1c66:	b6 01       	movw	r22, r12
    1c68:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1c6c:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    1c70:	9b 01       	movw	r18, r22
    1c72:	ac 01       	movw	r20, r24
    1c74:	c5 01       	movw	r24, r10
    1c76:	b4 01       	movw	r22, r8
    1c78:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
    1c7c:	0e 94 04 13 	call	0x2608	; 0x2608 <acos>
    1c80:	21 ee       	ldi	r18, 0xE1	; 225
    1c82:	3e e2       	ldi	r19, 0x2E	; 46
    1c84:	45 e6       	ldi	r20, 0x65	; 101
    1c86:	52 e4       	ldi	r21, 0x42	; 66
    1c88:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1c8c:	9b 01       	movw	r18, r22
    1c8e:	ac 01       	movw	r20, r24
    1c90:	60 e0       	ldi	r22, 0x00	; 0
    1c92:	70 e0       	ldi	r23, 0x00	; 0
    1c94:	84 eb       	ldi	r24, 0xB4	; 180
    1c96:	93 e4       	ldi	r25, 0x43	; 67
    1c98:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1c9c:	06 2f       	mov	r16, r22
    1c9e:	17 2f       	mov	r17, r23
    1ca0:	8d 87       	std	Y+13, r24	; 0x0d
    1ca2:	99 83       	std	Y+1, r25	; 0x01
						double diffAzi = NewAzimuth - RefAzimuth;
    1ca4:	2d 81       	ldd	r18, Y+5	; 0x05
    1ca6:	39 85       	ldd	r19, Y+9	; 0x09
    1ca8:	42 2d       	mov	r20, r2
    1caa:	53 2d       	mov	r21, r3
    1cac:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
						RefAzimuth = NewAzimuth;
						step(diffAzi);
    1cb0:	0e 94 94 10 	call	0x2128	; 0x2128 <step>
						hourD += 0.166667;
    1cb4:	21 ec       	ldi	r18, 0xC1	; 193
    1cb6:	3a ea       	ldi	r19, 0xAA	; 170
    1cb8:	4a e2       	ldi	r20, 0x2A	; 42
    1cba:	5e e3       	ldi	r21, 0x3E	; 62
    1cbc:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <hourD>
    1cc0:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <hourD+0x1>
    1cc4:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <hourD+0x2>
    1cc8:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <hourD+0x3>
    1ccc:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    1cd0:	9b 01       	movw	r18, r22
    1cd2:	ac 01       	movw	r20, r24
    1cd4:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <hourD>
    1cd8:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <hourD+0x1>
    1cdc:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <hourD+0x2>
    1ce0:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <hourD+0x3>
						if(hourD > sunset){
    1ce4:	6d 89       	ldd	r22, Y+21	; 0x15
    1ce6:	7e 89       	ldd	r23, Y+22	; 0x16
    1ce8:	8f 89       	ldd	r24, Y+23	; 0x17
    1cea:	98 8d       	ldd	r25, Y+24	; 0x18
    1cec:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
    1cf0:	88 23       	and	r24, r24
    1cf2:	0c f0       	brlt	.+2      	; 0x1cf6 <__stack+0x13f7>
    1cf4:	13 c1       	rjmp	.+550    	; 0x1f1c <__stack+0x161d>
							STEPPER_off(STEPPER_PORT,DIR_PIN); //CW
    1cf6:	62 e0       	ldi	r22, 0x02	; 2
    1cf8:	84 e4       	ldi	r24, 0x44	; 68
    1cfa:	0e 94 90 10 	call	0x2120	; 0x2120 <STEPPER_off>
							double LSTM = 15 * GMT;double B = ((double)(360) / (double)(365)) * (days - 81);double EoT = 9.87 * sin(2 * B * conv) - 7.53 * cos(B * conv) - 1.5 * sin(B * conv);double TC = EoT + (4 * (lon - LSTM));double LST = hourD + ((double)(TC) / (double)(60));double HRA = (15 * (LST - 12));double declination = (23.45 * sin(B * conv));double elevation = asin(((sin(declination * conv) * sin(lat * conv)) + (cos(declination * conv) * cos(lat * conv) * cos(HRA * conv)))) * conv2;double sunrise = 12 - ((double)1 / (double)15) * (acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);double sunset = 12 + (((double)1 / (double)15) * acos(-tan(lat * conv) * tan(declination * conv)) * conv2) - (TC / 60);
    1cfe:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d02:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d06:	61 55       	subi	r22, 0x51	; 81
    1d08:	71 09       	sbc	r23, r1
    1d0a:	07 2e       	mov	r0, r23
    1d0c:	00 0c       	add	r0, r0
    1d0e:	88 0b       	sbc	r24, r24
    1d10:	99 0b       	sbc	r25, r25
    1d12:	0e 94 68 14 	call	0x28d0	; 0x28d0 <__floatsisf>
    1d16:	2f e3       	ldi	r18, 0x3F	; 63
    1d18:	3e e7       	ldi	r19, 0x7E	; 126
    1d1a:	4c e7       	ldi	r20, 0x7C	; 124
    1d1c:	5f e3       	ldi	r21, 0x3F	; 63
    1d1e:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1d22:	4b 01       	movw	r8, r22
    1d24:	5c 01       	movw	r10, r24
    1d26:	9b 01       	movw	r18, r22
    1d28:	ac 01       	movw	r20, r24
    1d2a:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    1d2e:	25 e3       	ldi	r18, 0x35	; 53
    1d30:	3a ef       	ldi	r19, 0xFA	; 250
    1d32:	4e e8       	ldi	r20, 0x8E	; 142
    1d34:	5c e3       	ldi	r21, 0x3C	; 60
    1d36:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1d3a:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
    1d3e:	25 e8       	ldi	r18, 0x85	; 133
    1d40:	3b ee       	ldi	r19, 0xEB	; 235
    1d42:	4d e1       	ldi	r20, 0x1D	; 29
    1d44:	51 e4       	ldi	r21, 0x41	; 65
    1d46:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1d4a:	6b 01       	movw	r12, r22
    1d4c:	7c 01       	movw	r14, r24
    1d4e:	25 e3       	ldi	r18, 0x35	; 53
    1d50:	3a ef       	ldi	r19, 0xFA	; 250
    1d52:	4e e8       	ldi	r20, 0x8E	; 142
    1d54:	5c e3       	ldi	r21, 0x3C	; 60
    1d56:	c5 01       	movw	r24, r10
    1d58:	b4 01       	movw	r22, r8
    1d5a:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1d5e:	4b 01       	movw	r8, r22
    1d60:	5c 01       	movw	r10, r24
    1d62:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    1d66:	23 ec       	ldi	r18, 0xC3	; 195
    1d68:	35 ef       	ldi	r19, 0xF5	; 245
    1d6a:	40 ef       	ldi	r20, 0xF0	; 240
    1d6c:	50 e4       	ldi	r21, 0x40	; 64
    1d6e:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1d72:	9b 01       	movw	r18, r22
    1d74:	ac 01       	movw	r20, r24
    1d76:	c7 01       	movw	r24, r14
    1d78:	b6 01       	movw	r22, r12
    1d7a:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1d7e:	6b 01       	movw	r12, r22
    1d80:	7c 01       	movw	r14, r24
    1d82:	c5 01       	movw	r24, r10
    1d84:	b4 01       	movw	r22, r8
    1d86:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
    1d8a:	4b 01       	movw	r8, r22
    1d8c:	5c 01       	movw	r10, r24
    1d8e:	20 e0       	ldi	r18, 0x00	; 0
    1d90:	30 e0       	ldi	r19, 0x00	; 0
    1d92:	40 ec       	ldi	r20, 0xC0	; 192
    1d94:	5f e3       	ldi	r21, 0x3F	; 63
    1d96:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1d9a:	9b 01       	movw	r18, r22
    1d9c:	ac 01       	movw	r20, r24
    1d9e:	c7 01       	movw	r24, r14
    1da0:	b6 01       	movw	r22, r12
    1da2:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1da6:	20 e7       	ldi	r18, 0x70	; 112
    1da8:	36 ea       	ldi	r19, 0xA6	; 166
    1daa:	49 ed       	ldi	r20, 0xD9	; 217
    1dac:	50 e4       	ldi	r21, 0x40	; 64
    1dae:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    1db2:	20 e0       	ldi	r18, 0x00	; 0
    1db4:	30 e0       	ldi	r19, 0x00	; 0
    1db6:	40 e7       	ldi	r20, 0x70	; 112
    1db8:	52 e4       	ldi	r21, 0x42	; 66
    1dba:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
    1dbe:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <hourD>
    1dc2:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <hourD+0x1>
    1dc6:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <hourD+0x2>
    1dca:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <hourD+0x3>
    1dce:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    1dd2:	20 e0       	ldi	r18, 0x00	; 0
    1dd4:	30 e0       	ldi	r19, 0x00	; 0
    1dd6:	40 e4       	ldi	r20, 0x40	; 64
    1dd8:	51 e4       	ldi	r21, 0x41	; 65
    1dda:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1dde:	20 e0       	ldi	r18, 0x00	; 0
    1de0:	30 e0       	ldi	r19, 0x00	; 0
    1de2:	40 e7       	ldi	r20, 0x70	; 112
    1de4:	51 e4       	ldi	r21, 0x41	; 65
    1de6:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1dea:	6b 01       	movw	r12, r22
    1dec:	7c 01       	movw	r14, r24
    1dee:	2a e9       	ldi	r18, 0x9A	; 154
    1df0:	39 e9       	ldi	r19, 0x99	; 153
    1df2:	4b eb       	ldi	r20, 0xBB	; 187
    1df4:	51 e4       	ldi	r21, 0x41	; 65
    1df6:	c5 01       	movw	r24, r10
    1df8:	b4 01       	movw	r22, r8
    1dfa:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1dfe:	25 e3       	ldi	r18, 0x35	; 53
    1e00:	3a ef       	ldi	r19, 0xFA	; 250
    1e02:	4e e8       	ldi	r20, 0x8E	; 142
    1e04:	5c e3       	ldi	r21, 0x3C	; 60
    1e06:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1e0a:	2b 01       	movw	r4, r22
    1e0c:	3c 01       	movw	r6, r24
    1e0e:	0e 94 a0 16 	call	0x2d40	; 0x2d40 <sin>
    1e12:	4b 01       	movw	r8, r22
    1e14:	5c 01       	movw	r10, r24
    1e16:	2f e0       	ldi	r18, 0x0F	; 15
    1e18:	34 e0       	ldi	r19, 0x04	; 4
    1e1a:	40 e0       	ldi	r20, 0x00	; 0
    1e1c:	5f e3       	ldi	r21, 0x3F	; 63
    1e1e:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1e22:	69 87       	std	Y+9, r22	; 0x09
    1e24:	7a 87       	std	Y+10, r23	; 0x0a
    1e26:	8b 87       	std	Y+11, r24	; 0x0b
    1e28:	9c 87       	std	Y+12, r25	; 0x0c
    1e2a:	c3 01       	movw	r24, r6
    1e2c:	b2 01       	movw	r22, r4
    1e2e:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    1e32:	6d 83       	std	Y+5, r22	; 0x05
    1e34:	7e 83       	std	Y+6, r23	; 0x06
    1e36:	8f 83       	std	Y+7, r24	; 0x07
    1e38:	98 87       	std	Y+8, r25	; 0x08
    1e3a:	20 e8       	ldi	r18, 0x80	; 128
    1e3c:	31 eb       	ldi	r19, 0xB1	; 177
    1e3e:	4d e5       	ldi	r20, 0x5D	; 93
    1e40:	5f e3       	ldi	r21, 0x3F	; 63
    1e42:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1e46:	2b 01       	movw	r4, r22
    1e48:	3c 01       	movw	r6, r24
    1e4a:	25 e3       	ldi	r18, 0x35	; 53
    1e4c:	3a ef       	ldi	r19, 0xFA	; 250
    1e4e:	4e e8       	ldi	r20, 0x8E	; 142
    1e50:	5c e3       	ldi	r21, 0x3C	; 60
    1e52:	c7 01       	movw	r24, r14
    1e54:	b6 01       	movw	r22, r12
    1e56:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1e5a:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    1e5e:	6b 01       	movw	r12, r22
    1e60:	7c 01       	movw	r14, r24
    1e62:	9b 01       	movw	r18, r22
    1e64:	ac 01       	movw	r20, r24
    1e66:	c3 01       	movw	r24, r6
    1e68:	b2 01       	movw	r22, r4
    1e6a:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1e6e:	9b 01       	movw	r18, r22
    1e70:	ac 01       	movw	r20, r24
    1e72:	69 85       	ldd	r22, Y+9	; 0x09
    1e74:	7a 85       	ldd	r23, Y+10	; 0x0a
    1e76:	8b 85       	ldd	r24, Y+11	; 0x0b
    1e78:	9c 85       	ldd	r25, Y+12	; 0x0c
    1e7a:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    1e7e:	0e 94 82 13 	call	0x2704	; 0x2704 <asin>
    1e82:	21 ee       	ldi	r18, 0xE1	; 225
    1e84:	3e e2       	ldi	r19, 0x2E	; 46
    1e86:	45 e6       	ldi	r20, 0x65	; 101
    1e88:	52 e4       	ldi	r21, 0x42	; 66
    1e8a:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1e8e:	2b 01       	movw	r4, r22
    1e90:	3c 01       	movw	r6, r24
							double finAzimuth = (360 - (acos(((sin(declination * conv) * cos(lat * conv)) - (cos(declination * conv) * sin(lat * conv) * cos(HRA * conv))) / (cos(elevation * conv))) * conv2));
    1e92:	20 e8       	ldi	r18, 0x80	; 128
    1e94:	31 eb       	ldi	r19, 0xB1	; 177
    1e96:	4d e5       	ldi	r20, 0x5D	; 93
    1e98:	5f e3       	ldi	r21, 0x3F	; 63
    1e9a:	c5 01       	movw	r24, r10
    1e9c:	b4 01       	movw	r22, r8
    1e9e:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1ea2:	4b 01       	movw	r8, r22
    1ea4:	5c 01       	movw	r10, r24
    1ea6:	2f e0       	ldi	r18, 0x0F	; 15
    1ea8:	34 e0       	ldi	r19, 0x04	; 4
    1eaa:	40 e0       	ldi	r20, 0x00	; 0
    1eac:	5f e3       	ldi	r21, 0x3F	; 63
    1eae:	6d 81       	ldd	r22, Y+5	; 0x05
    1eb0:	7e 81       	ldd	r23, Y+6	; 0x06
    1eb2:	8f 81       	ldd	r24, Y+7	; 0x07
    1eb4:	98 85       	ldd	r25, Y+8	; 0x08
    1eb6:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1eba:	9b 01       	movw	r18, r22
    1ebc:	ac 01       	movw	r20, r24
    1ebe:	c7 01       	movw	r24, r14
    1ec0:	b6 01       	movw	r22, r12
    1ec2:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1ec6:	9b 01       	movw	r18, r22
    1ec8:	ac 01       	movw	r20, r24
    1eca:	c5 01       	movw	r24, r10
    1ecc:	b4 01       	movw	r22, r8
    1ece:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    1ed2:	6b 01       	movw	r12, r22
    1ed4:	7c 01       	movw	r14, r24
    1ed6:	25 e3       	ldi	r18, 0x35	; 53
    1ed8:	3a ef       	ldi	r19, 0xFA	; 250
    1eda:	4e e8       	ldi	r20, 0x8E	; 142
    1edc:	5c e3       	ldi	r21, 0x3C	; 60
    1ede:	c3 01       	movw	r24, r6
    1ee0:	b2 01       	movw	r22, r4
    1ee2:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1ee6:	0e 94 b9 13 	call	0x2772	; 0x2772 <cos>
    1eea:	9b 01       	movw	r18, r22
    1eec:	ac 01       	movw	r20, r24
    1eee:	c7 01       	movw	r24, r14
    1ef0:	b6 01       	movw	r22, r12
    1ef2:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
    1ef6:	0e 94 04 13 	call	0x2608	; 0x2608 <acos>
    1efa:	21 ee       	ldi	r18, 0xE1	; 225
    1efc:	3e e2       	ldi	r19, 0x2E	; 46
    1efe:	45 e6       	ldi	r20, 0x65	; 101
    1f00:	52 e4       	ldi	r21, 0x42	; 66
    1f02:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    1f06:	9b 01       	movw	r18, r22
    1f08:	ac 01       	movw	r20, r24
    1f0a:	60 e0       	ldi	r22, 0x00	; 0
    1f0c:	70 e0       	ldi	r23, 0x00	; 0
    1f0e:	84 eb       	ldi	r24, 0xB4	; 180
    1f10:	93 e4       	ldi	r25, 0x43	; 67
    1f12:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
							step(finAzimuth);
    1f16:	0e 94 94 10 	call	0x2128	; 0x2128 <step>
							break;
    1f1a:	63 c0       	rjmp	.+198    	; 0x1fe2 <__stack+0x16e3>
						if(elevation>13 && elevation<81){
							step_lin(diffS);
						}
						double NewAzimuth = 360 - (acos(((sin(declination * conv) * cos(lat * conv)) - (cos(declination * conv) * sin(lat * conv) * cos(HRA * conv))) / (cos(elevation * conv))) * conv2);
						double diffAzi = NewAzimuth - RefAzimuth;
						RefAzimuth = NewAzimuth;
    1f1c:	0d 83       	std	Y+5, r16	; 0x05
    1f1e:	19 87       	std	Y+9, r17	; 0x09
    1f20:	2d 84       	ldd	r2, Y+13	; 0x0d
    1f22:	39 80       	ldd	r3, Y+1	; 0x01
						float phi =  -1*elevation * PI/180;
						float alpha = pow(A,2) + pow(Beta,2); //7
						float beta = (float)2*A*Beta;
						float newS = fabs(10* (sqrt(alpha - (beta*cos(phi))) - 7.3));
						float diffS = newS - S;
						S = newS;
    1f24:	4a a6       	std	Y+42, r4	; 0x2a
    1f26:	5b a6       	std	Y+43, r5	; 0x2b
    1f28:	16 2d       	mov	r17, r6
    1f2a:	07 2d       	mov	r16, r7
    1f2c:	0d c0       	rjmp	.+26     	; 0x1f48 <__stack+0x1649>
    1f2e:	89 89       	ldd	r24, Y+17	; 0x11
    1f30:	8a a7       	std	Y+42, r24	; 0x2a
    1f32:	8d 89       	ldd	r24, Y+21	; 0x15
    1f34:	8b a7       	std	Y+43, r24	; 0x2b
    1f36:	19 a1       	ldd	r17, Y+33	; 0x21
    1f38:	09 a5       	ldd	r16, Y+41	; 0x29
    1f3a:	06 c0       	rjmp	.+12     	; 0x1f48 <__stack+0x1649>
    1f3c:	89 89       	ldd	r24, Y+17	; 0x11
    1f3e:	8a a7       	std	Y+42, r24	; 0x2a
    1f40:	8d 89       	ldd	r24, Y+21	; 0x15
    1f42:	8b a7       	std	Y+43, r24	; 0x2b
    1f44:	19 a1       	ldd	r17, Y+33	; 0x21
    1f46:	09 a5       	ldd	r16, Y+41	; 0x29
						RefAzimuth = NewAzimuth;
						step(diffAzi);
						hourD += 0.166667;
					}
					
					while(HRA>0){
    1f48:	20 e0       	ldi	r18, 0x00	; 0
    1f4a:	30 e0       	ldi	r19, 0x00	; 0
    1f4c:	a9 01       	movw	r20, r18
    1f4e:	6d a1       	ldd	r22, Y+37	; 0x25
    1f50:	7e a1       	ldd	r23, Y+38	; 0x26
    1f52:	8f a1       	ldd	r24, Y+39	; 0x27
    1f54:	98 a5       	ldd	r25, Y+40	; 0x28
    1f56:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__gesf2>
    1f5a:	18 16       	cp	r1, r24
    1f5c:	0c f4       	brge	.+2      	; 0x1f60 <__stack+0x1661>
    1f5e:	13 cd       	rjmp	.-1498   	; 0x1986 <__stack+0x1087>
    1f60:	40 c0       	rjmp	.+128    	; 0x1fe2 <__stack+0x16e3>
				}
		
				
				
				while(hourD < sunrise || hourD > sunset){
					if(floor(hourD) ==24){
    1f62:	c7 01       	movw	r24, r14
    1f64:	b6 01       	movw	r22, r12
    1f66:	0e 94 a3 14 	call	0x2946	; 0x2946 <floor>
    1f6a:	20 e0       	ldi	r18, 0x00	; 0
    1f6c:	30 e0       	ldi	r19, 0x00	; 0
    1f6e:	40 ec       	ldi	r20, 0xC0	; 192
    1f70:	51 e4       	ldi	r21, 0x41	; 65
    1f72:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
    1f76:	81 11       	cpse	r24, r1
    1f78:	18 c0       	rjmp	.+48     	; 0x1faa <__stack+0x16ab>
						days+=1;
    1f7a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f7e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f82:	01 96       	adiw	r24, 0x01	; 1
    1f84:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f88:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
						hourD = 0;
    1f8c:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <hourD>
    1f90:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <hourD+0x1>
    1f94:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <hourD+0x2>
    1f98:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <hourD+0x3>
						TIMER_delay_10(600000); //10 minutes delay
    1f9c:	60 ec       	ldi	r22, 0xC0	; 192
    1f9e:	77 e2       	ldi	r23, 0x27	; 39
    1fa0:	89 e0       	ldi	r24, 0x09	; 9
    1fa2:	90 e0       	ldi	r25, 0x00	; 0
    1fa4:	0e 94 a1 11 	call	0x2342	; 0x2342 <TIMER_delay_10>
    1fa8:	1c c0       	rjmp	.+56     	; 0x1fe2 <__stack+0x16e3>
		
					}
					else{
						TIMER_delay_10(600000); //10 minutes delay
    1faa:	60 ec       	ldi	r22, 0xC0	; 192
    1fac:	77 e2       	ldi	r23, 0x27	; 39
    1fae:	89 e0       	ldi	r24, 0x09	; 9
    1fb0:	90 e0       	ldi	r25, 0x00	; 0
    1fb2:	0e 94 a1 11 	call	0x2342	; 0x2342 <TIMER_delay_10>
						hourD += 0.166667;
    1fb6:	21 ec       	ldi	r18, 0xC1	; 193
    1fb8:	3a ea       	ldi	r19, 0xAA	; 170
    1fba:	4a e2       	ldi	r20, 0x2A	; 42
    1fbc:	5e e3       	ldi	r21, 0x3E	; 62
    1fbe:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <hourD>
    1fc2:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <hourD+0x1>
    1fc6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <hourD+0x2>
    1fca:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <hourD+0x3>
    1fce:	0e 94 16 13 	call	0x262c	; 0x262c <__addsf3>
    1fd2:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <hourD>
    1fd6:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <hourD+0x1>
    1fda:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <hourD+0x2>
    1fde:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <hourD+0x3>
					}
				}
		
				
				
				while(hourD < sunrise || hourD > sunset){
    1fe2:	c0 90 02 01 	lds	r12, 0x0102	; 0x800102 <hourD>
    1fe6:	d0 90 03 01 	lds	r13, 0x0103	; 0x800103 <hourD+0x1>
    1fea:	e0 90 04 01 	lds	r14, 0x0104	; 0x800104 <hourD+0x2>
    1fee:	f0 90 05 01 	lds	r15, 0x0105	; 0x800105 <hourD+0x3>
    1ff2:	a7 01       	movw	r20, r14
    1ff4:	96 01       	movw	r18, r12
    1ff6:	69 8d       	ldd	r22, Y+25	; 0x19
    1ff8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1ffa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1ffc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1ffe:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__gesf2>
    2002:	18 16       	cp	r1, r24
    2004:	0c f4       	brge	.+2      	; 0x2008 <__stack+0x1709>
    2006:	ad cf       	rjmp	.-166    	; 0x1f62 <__stack+0x1663>
    2008:	a7 01       	movw	r20, r14
    200a:	96 01       	movw	r18, r12
    200c:	6d 8d       	ldd	r22, Y+29	; 0x1d
    200e:	7e 8d       	ldd	r23, Y+30	; 0x1e
    2010:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2012:	98 a1       	ldd	r25, Y+32	; 0x20
    2014:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
    2018:	88 23       	and	r24, r24
    201a:	0c f4       	brge	.+2      	; 0x201e <__stack+0x171f>
    201c:	a2 cf       	rjmp	.-188    	; 0x1f62 <__stack+0x1663>
    201e:	0c 94 b6 00 	jmp	0x16c	; 0x16c <APP_start+0x14>

00002022 <LINEAR_init>:

#include "linear.h"

void LINEAR_init(uint8_t linearPort,uint8_t linearPin){
	
	DIO_init(linearPort,linearPin,OUT);
    2022:	41 e0       	ldi	r20, 0x01	; 1
    2024:	0e 94 10 12 	call	0x2420	; 0x2420 <DIO_init>
    2028:	08 95       	ret

0000202a <LINEAR_on>:

}

void LINEAR_on(uint8_t linearPort,uint8_t linearPin){
	
	DIO_write(linearPort,linearPin,HIGH);
    202a:	41 e0       	ldi	r20, 0x01	; 1
    202c:	0e 94 8a 12 	call	0x2514	; 0x2514 <DIO_write>
    2030:	08 95       	ret

00002032 <LINEAR_off>:
	
}

void LINEAR_off(uint8_t linearPort,uint8_t linearPin){
	DIO_write(linearPort,linearPin,LOW);
    2032:	40 e0       	ldi	r20, 0x00	; 0
    2034:	0e 94 8a 12 	call	0x2514	; 0x2514 <DIO_write>
    2038:	08 95       	ret

0000203a <step_forward>:
}

void step_forward(float time){
    203a:	cf 92       	push	r12
    203c:	df 92       	push	r13
    203e:	ef 92       	push	r14
    2040:	ff 92       	push	r15
    2042:	6b 01       	movw	r12, r22
    2044:	7c 01       	movw	r14, r24
	
	//Forward linear
	LINEAR_on(LINEAR_PORT,FORWARD_PIN);
    2046:	65 e0       	ldi	r22, 0x05	; 5
    2048:	83 e4       	ldi	r24, 0x43	; 67
    204a:	0e 94 15 10 	call	0x202a	; 0x202a <LINEAR_on>
	LINEAR_off(LINEAR_PORT,BACKWARD_PIN);
    204e:	64 e0       	ldi	r22, 0x04	; 4
    2050:	83 e4       	ldi	r24, 0x43	; 67
    2052:	0e 94 19 10 	call	0x2032	; 0x2032 <LINEAR_off>
	TIMER_delay_lin(time);
    2056:	c7 01       	movw	r24, r14
    2058:	b6 01       	movw	r22, r12
    205a:	0e 94 51 11 	call	0x22a2	; 0x22a2 <TIMER_delay_lin>
	
	 //Stop linear
	LINEAR_off(LINEAR_PORT,FORWARD_PIN);
    205e:	65 e0       	ldi	r22, 0x05	; 5
    2060:	83 e4       	ldi	r24, 0x43	; 67
    2062:	0e 94 19 10 	call	0x2032	; 0x2032 <LINEAR_off>
	LINEAR_off(LINEAR_PORT,BACKWARD_PIN);
    2066:	64 e0       	ldi	r22, 0x04	; 4
    2068:	83 e4       	ldi	r24, 0x43	; 67
    206a:	0e 94 19 10 	call	0x2032	; 0x2032 <LINEAR_off>
}
    206e:	ff 90       	pop	r15
    2070:	ef 90       	pop	r14
    2072:	df 90       	pop	r13
    2074:	cf 90       	pop	r12
    2076:	08 95       	ret

00002078 <step_backward>:


void step_backward(float time){
    2078:	cf 92       	push	r12
    207a:	df 92       	push	r13
    207c:	ef 92       	push	r14
    207e:	ff 92       	push	r15
    2080:	6b 01       	movw	r12, r22
    2082:	7c 01       	movw	r14, r24

	
	//backward linear
	LINEAR_off(LINEAR_PORT,FORWARD_PIN);
    2084:	65 e0       	ldi	r22, 0x05	; 5
    2086:	83 e4       	ldi	r24, 0x43	; 67
    2088:	0e 94 19 10 	call	0x2032	; 0x2032 <LINEAR_off>
	LINEAR_on(LINEAR_PORT,BACKWARD_PIN);
    208c:	64 e0       	ldi	r22, 0x04	; 4
    208e:	83 e4       	ldi	r24, 0x43	; 67
    2090:	0e 94 15 10 	call	0x202a	; 0x202a <LINEAR_on>
	TIMER_delay_lin(time);
    2094:	c7 01       	movw	r24, r14
    2096:	b6 01       	movw	r22, r12
    2098:	0e 94 51 11 	call	0x22a2	; 0x22a2 <TIMER_delay_lin>
	
	//Stop linear
	LINEAR_off(LINEAR_PORT,FORWARD_PIN);
    209c:	65 e0       	ldi	r22, 0x05	; 5
    209e:	83 e4       	ldi	r24, 0x43	; 67
    20a0:	0e 94 19 10 	call	0x2032	; 0x2032 <LINEAR_off>
	LINEAR_off(LINEAR_PORT,BACKWARD_PIN);
    20a4:	64 e0       	ldi	r22, 0x04	; 4
    20a6:	83 e4       	ldi	r24, 0x43	; 67
    20a8:	0e 94 19 10 	call	0x2032	; 0x2032 <LINEAR_off>
}
    20ac:	ff 90       	pop	r15
    20ae:	ef 90       	pop	r14
    20b0:	df 90       	pop	r13
    20b2:	cf 90       	pop	r12
    20b4:	08 95       	ret

000020b6 <step_lin>:
//time 119s forward
//time 125s backward
//1s = 1.512mm
//1000ms = 0.152mm

void step_lin(float s){
    20b6:	cf 92       	push	r12
    20b8:	df 92       	push	r13
    20ba:	ef 92       	push	r14
    20bc:	ff 92       	push	r15
    20be:	6b 01       	movw	r12, r22
    20c0:	7c 01       	movw	r14, r24
	
	if(s<0){
    20c2:	20 e0       	ldi	r18, 0x00	; 0
    20c4:	30 e0       	ldi	r19, 0x00	; 0
    20c6:	a9 01       	movw	r20, r18
    20c8:	0e 94 b4 13 	call	0x2768	; 0x2768 <__cmpsf2>
    20cc:	88 23       	and	r24, r24
    20ce:	74 f4       	brge	.+28     	; 0x20ec <step_lin+0x36>
		float stroke = floor((float) (fabs(s)*627.78));	
    20d0:	c7 01       	movw	r24, r14
    20d2:	b6 01       	movw	r22, r12
    20d4:	9f 77       	andi	r25, 0x7F	; 127
    20d6:	2c ee       	ldi	r18, 0xEC	; 236
    20d8:	31 ef       	ldi	r19, 0xF1	; 241
    20da:	4c e1       	ldi	r20, 0x1C	; 28
    20dc:	54 e4       	ldi	r21, 0x44	; 68
    20de:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    20e2:	0e 94 a3 14 	call	0x2946	; 0x2946 <floor>
		step_backward(stroke);
    20e6:	0e 94 3c 10 	call	0x2078	; 0x2078 <step_backward>
    20ea:	0d c0       	rjmp	.+26     	; 0x2106 <step_lin+0x50>
		//TIMER_delay(3000);

}
	else{
		float stroke = floor((float) (fabs(s)*627.78));
    20ec:	c7 01       	movw	r24, r14
    20ee:	b6 01       	movw	r22, r12
    20f0:	9f 77       	andi	r25, 0x7F	; 127
    20f2:	2c ee       	ldi	r18, 0xEC	; 236
    20f4:	31 ef       	ldi	r19, 0xF1	; 241
    20f6:	4c e1       	ldi	r20, 0x1C	; 28
    20f8:	54 e4       	ldi	r21, 0x44	; 68
    20fa:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    20fe:	0e 94 a3 14 	call	0x2946	; 0x2946 <floor>
		step_forward(stroke);
    2102:	0e 94 1d 10 	call	0x203a	; 0x203a <step_forward>
		//TIMER_delay(3000);
	}
}
    2106:	ff 90       	pop	r15
    2108:	ef 90       	pop	r14
    210a:	df 90       	pop	r13
    210c:	cf 90       	pop	r12
    210e:	08 95       	ret

00002110 <STEPPER_init>:

	sec = (60 * fractS); 
}

void STEPPER_init(uint8_t stepPort,uint8_t stepPin){
	DIO_init(stepPort,stepPin,OUT);
    2110:	41 e0       	ldi	r20, 0x01	; 1
    2112:	0e 94 10 12 	call	0x2420	; 0x2420 <DIO_init>
    2116:	08 95       	ret

00002118 <STEPPER_on>:
}

void STEPPER_on(uint8_t stepPort,uint8_t stepPin){
	DIO_write(stepPort,stepPin,HIGH);
    2118:	41 e0       	ldi	r20, 0x01	; 1
    211a:	0e 94 8a 12 	call	0x2514	; 0x2514 <DIO_write>
    211e:	08 95       	ret

00002120 <STEPPER_off>:
}

void STEPPER_off(uint8_t stepPort,uint8_t stepPin){
	DIO_write(stepPort,stepPin,LOW);
    2120:	40 e0       	ldi	r20, 0x00	; 0
    2122:	0e 94 8a 12 	call	0x2514	; 0x2514 <DIO_write>
    2126:	08 95       	ret

00002128 <step>:
}

void step(double angle){
    2128:	8f 92       	push	r8
    212a:	9f 92       	push	r9
    212c:	af 92       	push	r10
    212e:	bf 92       	push	r11
    2130:	cf 92       	push	r12
    2132:	df 92       	push	r13
    2134:	ef 92       	push	r14
    2136:	ff 92       	push	r15
    2138:	cf 93       	push	r28
	long i = round(angle/0.0247875);
    213a:	28 e2       	ldi	r18, 0x28	; 40
    213c:	3f e0       	ldi	r19, 0x0F	; 15
    213e:	4b ec       	ldi	r20, 0xCB	; 203
    2140:	5c e3       	ldi	r21, 0x3C	; 60
    2142:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
    2146:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <round>
    214a:	0e 94 30 14 	call	0x2860	; 0x2860 <__fixsfsi>
    214e:	4b 01       	movw	r8, r22
    2150:	5c 01       	movw	r10, r24
    2152:	6b 01       	movw	r12, r22
    2154:	7c 01       	movw	r14, r24


		
	//Azimuth
		
	while(i>0){
    2156:	1c c0       	rjmp	.+56     	; 0x2190 <step+0x68>
 
		STEPPER_on(STEPPER_PORT,PUL_PIN);
    2158:	63 e0       	ldi	r22, 0x03	; 3
    215a:	84 e4       	ldi	r24, 0x44	; 68
    215c:	0e 94 8c 10 	call	0x2118	; 0x2118 <STEPPER_on>
		PORTB ^= (1<<0);
    2160:	85 b1       	in	r24, 0x05	; 5
    2162:	c1 e0       	ldi	r28, 0x01	; 1
    2164:	8c 27       	eor	r24, r28
    2166:	85 b9       	out	0x05, r24	; 5
		TIMER_delay(pulse);
    2168:	80 e1       	ldi	r24, 0x10	; 16
    216a:	90 e0       	ldi	r25, 0x00	; 0
    216c:	0e 94 06 11 	call	0x220c	; 0x220c <TIMER_delay>
		STEPPER_off(STEPPER_PORT,PUL_PIN);
    2170:	63 e0       	ldi	r22, 0x03	; 3
    2172:	84 e4       	ldi	r24, 0x44	; 68
    2174:	0e 94 90 10 	call	0x2120	; 0x2120 <STEPPER_off>
		PORTB ^= (1<<0);
    2178:	85 b1       	in	r24, 0x05	; 5
    217a:	c8 27       	eor	r28, r24
    217c:	c5 b9       	out	0x05, r28	; 5
		TIMER_delay(pulse); 
    217e:	80 e1       	ldi	r24, 0x10	; 16
    2180:	90 e0       	ldi	r25, 0x00	; 0
    2182:	0e 94 06 11 	call	0x220c	; 0x220c <TIMER_delay>
		i--;
    2186:	81 e0       	ldi	r24, 0x01	; 1
    2188:	c8 1a       	sub	r12, r24
    218a:	d1 08       	sbc	r13, r1
    218c:	e1 08       	sbc	r14, r1
    218e:	f1 08       	sbc	r15, r1


		
	//Azimuth
		
	while(i>0){
    2190:	1c 14       	cp	r1, r12
    2192:	1d 04       	cpc	r1, r13
    2194:	1e 04       	cpc	r1, r14
    2196:	1f 04       	cpc	r1, r15
    2198:	fc f2       	brlt	.-66     	; 0x2158 <step+0x30>
		TIMER_delay(pulse); 
		i--;
		
}
	
	PORTB ^= (1<<0);
    219a:	85 b1       	in	r24, 0x05	; 5
    219c:	c1 e0       	ldi	r28, 0x01	; 1
    219e:	8c 27       	eor	r24, r28
    21a0:	85 b9       	out	0x05, r24	; 5
	long afterStep = 600000 - (j * pulse * 2);
    21a2:	88 0c       	add	r8, r8
    21a4:	99 1c       	adc	r9, r9
    21a6:	aa 1c       	adc	r10, r10
    21a8:	bb 1c       	adc	r11, r11
    21aa:	88 0c       	add	r8, r8
    21ac:	99 1c       	adc	r9, r9
    21ae:	aa 1c       	adc	r10, r10
    21b0:	bb 1c       	adc	r11, r11
    21b2:	88 0c       	add	r8, r8
    21b4:	99 1c       	adc	r9, r9
    21b6:	aa 1c       	adc	r10, r10
    21b8:	bb 1c       	adc	r11, r11
    21ba:	88 0c       	add	r8, r8
    21bc:	99 1c       	adc	r9, r9
    21be:	aa 1c       	adc	r10, r10
    21c0:	bb 1c       	adc	r11, r11
    21c2:	80 ee       	ldi	r24, 0xE0	; 224
    21c4:	93 e9       	ldi	r25, 0x93	; 147
    21c6:	a4 e0       	ldi	r26, 0x04	; 4
    21c8:	b0 e0       	ldi	r27, 0x00	; 0
    21ca:	88 19       	sub	r24, r8
    21cc:	99 09       	sbc	r25, r9
    21ce:	aa 09       	sbc	r26, r10
    21d0:	bb 09       	sbc	r27, r11
    21d2:	bc 01       	movw	r22, r24
    21d4:	cd 01       	movw	r24, r26
    21d6:	66 0f       	add	r22, r22
    21d8:	77 1f       	adc	r23, r23
    21da:	88 1f       	adc	r24, r24
    21dc:	99 1f       	adc	r25, r25
	TIMER_delay_10(afterStep);
    21de:	0e 94 a1 11 	call	0x2342	; 0x2342 <TIMER_delay_10>
	PORTB ^= (1<<0);
    21e2:	85 b1       	in	r24, 0x05	; 5
    21e4:	c8 27       	eor	r28, r24
    21e6:	c5 b9       	out	0x05, r28	; 5



}
    21e8:	cf 91       	pop	r28
    21ea:	ff 90       	pop	r15
    21ec:	ef 90       	pop	r14
    21ee:	df 90       	pop	r13
    21f0:	cf 90       	pop	r12
    21f2:	bf 90       	pop	r11
    21f4:	af 90       	pop	r10
    21f6:	9f 90       	pop	r9
    21f8:	8f 90       	pop	r8
    21fa:	08 95       	ret

000021fc <TIMER_init>:


#include "timer.h"

void TIMER_init(){
	TCCR0B = 0x00;
    21fc:	15 bc       	out	0x25, r1	; 37
	TCCR1A = 0x00;
    21fe:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B = 0x00;
    2202:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	TCCR1C = 0x00;
    2206:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7f8082>
    220a:	08 95       	ret

0000220c <TIMER_delay>:
long overflows_10;
int overflowCounter;
long overflowCounter_10;
float Tmax;

void TIMER_delay(int millisec){ 
    220c:	bc 01       	movw	r22, r24
	TCCR1B |= (1<<0); //no prescalar (1)
    220e:	e1 e8       	ldi	r30, 0x81	; 129
    2210:	f0 e0       	ldi	r31, 0x00	; 0
    2212:	80 81       	ld	r24, Z
    2214:	81 60       	ori	r24, 0x01	; 1
    2216:	80 83       	st	Z, r24
    //Ttick = 0.0000625; //in ms
	//Tmax = Ttick * pow(2,16);   
	Tmax = 4.096; //seconds
    2218:	8f e6       	ldi	r24, 0x6F	; 111
    221a:	92 e1       	ldi	r25, 0x12	; 18
    221c:	a3 e8       	ldi	r26, 0x83	; 131
    221e:	b0 e4       	ldi	r27, 0x40	; 64
    2220:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <Tmax>
    2224:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <Tmax+0x1>
    2228:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <Tmax+0x2>
    222c:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <Tmax+0x3>
	overflows = round(millisec/Tmax);
    2230:	07 2e       	mov	r0, r23
    2232:	00 0c       	add	r0, r0
    2234:	88 0b       	sbc	r24, r24
    2236:	99 0b       	sbc	r25, r25
    2238:	0e 94 68 14 	call	0x28d0	; 0x28d0 <__floatsisf>
    223c:	2f e6       	ldi	r18, 0x6F	; 111
    223e:	32 e1       	ldi	r19, 0x12	; 18
    2240:	43 e8       	ldi	r20, 0x83	; 131
    2242:	50 e4       	ldi	r21, 0x40	; 64
    2244:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
    2248:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <round>
    224c:	0e 94 30 14 	call	0x2860	; 0x2860 <__fixsfsi>
    2250:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <overflows+0x1>
    2254:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <overflows>
	overflowCounter = 0;
    2258:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__data_end+0x1>
    225c:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <__data_end>
	
	/*the and condition breaks the timer if the button is pressed, thus you 
	 don't have to wait for the delay to finish so that the ISR is executed */
	while(overflowCounter < overflows){   
    2260:	0e c0       	rjmp	.+28     	; 0x227e <TIMER_delay+0x72>
		while( (TIFR1 & (1<<0)) == 0 ); 
    2262:	b0 9b       	sbis	0x16, 0	; 22
    2264:	fe cf       	rjmp	.-4      	; 0x2262 <TIMER_delay+0x56>
		//clear bit
		TIFR1 |= (1<<0);
    2266:	86 b3       	in	r24, 0x16	; 22
    2268:	81 60       	ori	r24, 0x01	; 1
    226a:	86 bb       	out	0x16, r24	; 22
		//Timer Stop
		overflowCounter++;
    226c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
    2270:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x1>
    2274:	01 96       	adiw	r24, 0x01	; 1
    2276:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x1>
    227a:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
	overflows = round(millisec/Tmax);
	overflowCounter = 0;
	
	/*the and condition breaks the timer if the button is pressed, thus you 
	 don't have to wait for the delay to finish so that the ISR is executed */
	while(overflowCounter < overflows){   
    227e:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
    2282:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
    2286:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <overflows>
    228a:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <overflows+0x1>
    228e:	28 17       	cp	r18, r24
    2290:	39 07       	cpc	r19, r25
    2292:	3c f3       	brlt	.-50     	; 0x2262 <TIMER_delay+0x56>
		//clear bit
		TIFR1 |= (1<<0);
		//Timer Stop
		overflowCounter++;
	}
	overflowCounter = 0;
    2294:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__data_end+0x1>
    2298:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <__data_end>
			
	TCCR1B = 0x00;
    229c:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    22a0:	08 95       	ret

000022a2 <TIMER_delay_lin>:
}

void TIMER_delay_lin(float millisec){ 
    22a2:	cf 92       	push	r12
    22a4:	df 92       	push	r13
    22a6:	ef 92       	push	r14
    22a8:	ff 92       	push	r15
	TCCR1B |= (1<<0); //no prescalar (1)
    22aa:	e1 e8       	ldi	r30, 0x81	; 129
    22ac:	f0 e0       	ldi	r31, 0x00	; 0
    22ae:	20 81       	ld	r18, Z
    22b0:	21 60       	ori	r18, 0x01	; 1
    22b2:	20 83       	st	Z, r18
    //Ttick = 0.0000625; //in ms
	//Tmax = Ttick * pow(2,16);   
	Tmax = 4.096; //seconds
    22b4:	0f 2e       	mov	r0, r31
    22b6:	ff e6       	ldi	r31, 0x6F	; 111
    22b8:	cf 2e       	mov	r12, r31
    22ba:	f2 e1       	ldi	r31, 0x12	; 18
    22bc:	df 2e       	mov	r13, r31
    22be:	f3 e8       	ldi	r31, 0x83	; 131
    22c0:	ef 2e       	mov	r14, r31
    22c2:	f0 e4       	ldi	r31, 0x40	; 64
    22c4:	ff 2e       	mov	r15, r31
    22c6:	f0 2d       	mov	r31, r0
    22c8:	c0 92 08 01 	sts	0x0108, r12	; 0x800108 <Tmax>
    22cc:	d0 92 09 01 	sts	0x0109, r13	; 0x800109 <Tmax+0x1>
    22d0:	e0 92 0a 01 	sts	0x010A, r14	; 0x80010a <Tmax+0x2>
    22d4:	f0 92 0b 01 	sts	0x010B, r15	; 0x80010b <Tmax+0x3>
	overflows = ceil(millisec/Tmax);
    22d8:	a7 01       	movw	r20, r14
    22da:	96 01       	movw	r18, r12
    22dc:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
    22e0:	0e 94 9d 13 	call	0x273a	; 0x273a <ceil>
    22e4:	0e 94 30 14 	call	0x2860	; 0x2860 <__fixsfsi>
    22e8:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <overflows+0x1>
    22ec:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <overflows>
	overflowCounter = 0;
    22f0:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__data_end+0x1>
    22f4:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <__data_end>
	
	/*the and condition breaks the timer if the button is pressed, thus you 
	 don't have to wait for the delay to finish so that the ISR is executed */
	while(overflowCounter < overflows){   
    22f8:	0e c0       	rjmp	.+28     	; 0x2316 <TIMER_delay_lin+0x74>
		while( (TIFR1 & (1<<0)) == 0 ); 
    22fa:	b0 9b       	sbis	0x16, 0	; 22
    22fc:	fe cf       	rjmp	.-4      	; 0x22fa <TIMER_delay_lin+0x58>
		//clear bit
		TIFR1 |= (1<<0);
    22fe:	86 b3       	in	r24, 0x16	; 22
    2300:	81 60       	ori	r24, 0x01	; 1
    2302:	86 bb       	out	0x16, r24	; 22
		//Timer Stop
		overflowCounter++;
    2304:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
    2308:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x1>
    230c:	01 96       	adiw	r24, 0x01	; 1
    230e:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x1>
    2312:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
	overflows = ceil(millisec/Tmax);
	overflowCounter = 0;
	
	/*the and condition breaks the timer if the button is pressed, thus you 
	 don't have to wait for the delay to finish so that the ISR is executed */
	while(overflowCounter < overflows){   
    2316:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
    231a:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
    231e:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <overflows>
    2322:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <overflows+0x1>
    2326:	28 17       	cp	r18, r24
    2328:	39 07       	cpc	r19, r25
    232a:	3c f3       	brlt	.-50     	; 0x22fa <TIMER_delay_lin+0x58>
		//clear bit
		TIFR1 |= (1<<0);
		//Timer Stop
		overflowCounter++;
	}
	overflowCounter = 0;
    232c:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__data_end+0x1>
    2330:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <__data_end>
			
	TCCR1B = 0x00;
    2334:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
}
    2338:	ff 90       	pop	r15
    233a:	ef 90       	pop	r14
    233c:	df 90       	pop	r13
    233e:	cf 90       	pop	r12
    2340:	08 95       	ret

00002342 <TIMER_delay_10>:

void TIMER_delay_10(long millisec){ 
    2342:	0f 93       	push	r16
    2344:	1f 93       	push	r17
	TCCR1B |= (1<<0); //no prescalar (1)
    2346:	e1 e8       	ldi	r30, 0x81	; 129
    2348:	f0 e0       	ldi	r31, 0x00	; 0
    234a:	20 81       	ld	r18, Z
    234c:	21 60       	ori	r18, 0x01	; 1
    234e:	20 83       	st	Z, r18
    //Ttick = 0.0000625; //in ms
	//Tmax = Ttick * pow(2,16);   
	Tmax = 4.096; //seconds
    2350:	0f e6       	ldi	r16, 0x6F	; 111
    2352:	12 e1       	ldi	r17, 0x12	; 18
    2354:	23 e8       	ldi	r18, 0x83	; 131
    2356:	30 e4       	ldi	r19, 0x40	; 64
    2358:	00 93 08 01 	sts	0x0108, r16	; 0x800108 <Tmax>
    235c:	10 93 09 01 	sts	0x0109, r17	; 0x800109 <Tmax+0x1>
    2360:	20 93 0a 01 	sts	0x010A, r18	; 0x80010a <Tmax+0x2>
    2364:	30 93 0b 01 	sts	0x010B, r19	; 0x80010b <Tmax+0x3>
	overflows_10 = round((long)(millisec)/(Tmax));
    2368:	0e 94 68 14 	call	0x28d0	; 0x28d0 <__floatsisf>
    236c:	2f e6       	ldi	r18, 0x6F	; 111
    236e:	32 e1       	ldi	r19, 0x12	; 18
    2370:	43 e8       	ldi	r20, 0x83	; 131
    2372:	50 e4       	ldi	r21, 0x40	; 64
    2374:	0e 94 be 13 	call	0x277c	; 0x277c <__divsf3>
    2378:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <round>
    237c:	0e 94 30 14 	call	0x2860	; 0x2860 <__fixsfsi>
    2380:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <overflows_10>
    2384:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <overflows_10+0x1>
    2388:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <overflows_10+0x2>
    238c:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <overflows_10+0x3>
	overflowCounter_10 = 0;
    2390:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <overflowCounter_10>
    2394:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <overflowCounter_10+0x1>
    2398:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <overflowCounter_10+0x2>
    239c:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <overflowCounter_10+0x3>
	
	/*the and condition breaks the timer if the button is pressed, thus you 
	 don't have to wait for the delay to finish so that the ISR is executed */
	while( overflowCounter_10 < overflows_10){   
    23a0:	18 c0       	rjmp	.+48     	; 0x23d2 <TIMER_delay_10+0x90>
		while( (TIFR1 & (1<<0)) == 0 ); 
    23a2:	b0 9b       	sbis	0x16, 0	; 22
    23a4:	fe cf       	rjmp	.-4      	; 0x23a2 <TIMER_delay_10+0x60>
		//clear bit
		TIFR1 |= (1<<0);
    23a6:	86 b3       	in	r24, 0x16	; 22
    23a8:	81 60       	ori	r24, 0x01	; 1
    23aa:	86 bb       	out	0x16, r24	; 22
		//Timer Stop
		overflowCounter_10 = overflowCounter_10 +1;
    23ac:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <overflowCounter_10>
    23b0:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <overflowCounter_10+0x1>
    23b4:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <overflowCounter_10+0x2>
    23b8:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <overflowCounter_10+0x3>
    23bc:	01 96       	adiw	r24, 0x01	; 1
    23be:	a1 1d       	adc	r26, r1
    23c0:	b1 1d       	adc	r27, r1
    23c2:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <overflowCounter_10>
    23c6:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <overflowCounter_10+0x1>
    23ca:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <overflowCounter_10+0x2>
    23ce:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <overflowCounter_10+0x3>
	overflows_10 = round((long)(millisec)/(Tmax));
	overflowCounter_10 = 0;
	
	/*the and condition breaks the timer if the button is pressed, thus you 
	 don't have to wait for the delay to finish so that the ISR is executed */
	while( overflowCounter_10 < overflows_10){   
    23d2:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <overflowCounter_10>
    23d6:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <overflowCounter_10+0x1>
    23da:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <overflowCounter_10+0x2>
    23de:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <overflowCounter_10+0x3>
    23e2:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <overflows_10>
    23e6:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <overflows_10+0x1>
    23ea:	a0 91 14 01 	lds	r26, 0x0114	; 0x800114 <overflows_10+0x2>
    23ee:	b0 91 15 01 	lds	r27, 0x0115	; 0x800115 <overflows_10+0x3>
    23f2:	48 17       	cp	r20, r24
    23f4:	59 07       	cpc	r21, r25
    23f6:	6a 07       	cpc	r22, r26
    23f8:	7b 07       	cpc	r23, r27
    23fa:	9c f2       	brlt	.-90     	; 0x23a2 <TIMER_delay_10+0x60>
		//clear bit
		TIFR1 |= (1<<0);
		//Timer Stop
		overflowCounter_10 = overflowCounter_10 +1;
	}
	overflowCounter_10 = 0;
    23fc:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <overflowCounter_10>
    2400:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <overflowCounter_10+0x1>
    2404:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <overflowCounter_10+0x2>
    2408:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <overflowCounter_10+0x3>
			
	TCCR1B = 0x00;
    240c:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
}
    2410:	1f 91       	pop	r17
    2412:	0f 91       	pop	r16
    2414:	08 95       	ret

00002416 <main>:
#define F_CPU 16000000UL

int main(void)
{

	APP_init();
    2416:	0e 94 92 00 	call	0x124	; 0x124 <APP_init>
	
	//Main loop
	while(1){
		
		APP_start();
    241a:	0e 94 ac 00 	call	0x158	; 0x158 <APP_start>
    241e:	fd cf       	rjmp	.-6      	; 0x241a <main+0x4>

00002420 <DIO_init>:
    2420:	82 34       	cpi	r24, 0x42	; 66
    2422:	31 f1       	breq	.+76     	; 0x2470 <DIO_init+0x50>
    2424:	18 f4       	brcc	.+6      	; 0x242c <DIO_init+0xc>
    2426:	81 34       	cpi	r24, 0x41	; 65
    2428:	39 f0       	breq	.+14     	; 0x2438 <DIO_init+0x18>
    242a:	08 95       	ret
    242c:	83 34       	cpi	r24, 0x43	; 67
    242e:	e1 f1       	breq	.+120    	; 0x24a8 <DIO_init+0x88>
    2430:	84 34       	cpi	r24, 0x44	; 68
    2432:	09 f4       	brne	.+2      	; 0x2436 <DIO_init+0x16>
    2434:	54 c0       	rjmp	.+168    	; 0x24de <DIO_init+0xbe>
    2436:	08 95       	ret
    2438:	41 11       	cpse	r20, r1
    243a:	0c c0       	rjmp	.+24     	; 0x2454 <DIO_init+0x34>
    243c:	2a b3       	in	r18, 0x1a	; 26
    243e:	81 e0       	ldi	r24, 0x01	; 1
    2440:	90 e0       	ldi	r25, 0x00	; 0
    2442:	02 c0       	rjmp	.+4      	; 0x2448 <DIO_init+0x28>
    2444:	88 0f       	add	r24, r24
    2446:	99 1f       	adc	r25, r25
    2448:	6a 95       	dec	r22
    244a:	e2 f7       	brpl	.-8      	; 0x2444 <DIO_init+0x24>
    244c:	80 95       	com	r24
    244e:	82 23       	and	r24, r18
    2450:	8a bb       	out	0x1a, r24	; 26
    2452:	08 95       	ret
    2454:	41 30       	cpi	r20, 0x01	; 1
    2456:	09 f0       	breq	.+2      	; 0x245a <DIO_init+0x3a>
    2458:	5c c0       	rjmp	.+184    	; 0x2512 <DIO_init+0xf2>
    245a:	2a b3       	in	r18, 0x1a	; 26
    245c:	81 e0       	ldi	r24, 0x01	; 1
    245e:	90 e0       	ldi	r25, 0x00	; 0
    2460:	02 c0       	rjmp	.+4      	; 0x2466 <DIO_init+0x46>
    2462:	88 0f       	add	r24, r24
    2464:	99 1f       	adc	r25, r25
    2466:	6a 95       	dec	r22
    2468:	e2 f7       	brpl	.-8      	; 0x2462 <DIO_init+0x42>
    246a:	82 2b       	or	r24, r18
    246c:	8a bb       	out	0x1a, r24	; 26
    246e:	08 95       	ret
    2470:	41 11       	cpse	r20, r1
    2472:	0c c0       	rjmp	.+24     	; 0x248c <DIO_init+0x6c>
    2474:	24 b1       	in	r18, 0x04	; 4
    2476:	81 e0       	ldi	r24, 0x01	; 1
    2478:	90 e0       	ldi	r25, 0x00	; 0
    247a:	02 c0       	rjmp	.+4      	; 0x2480 <DIO_init+0x60>
    247c:	88 0f       	add	r24, r24
    247e:	99 1f       	adc	r25, r25
    2480:	6a 95       	dec	r22
    2482:	e2 f7       	brpl	.-8      	; 0x247c <DIO_init+0x5c>
    2484:	80 95       	com	r24
    2486:	82 23       	and	r24, r18
    2488:	84 b9       	out	0x04, r24	; 4
    248a:	08 95       	ret
    248c:	41 30       	cpi	r20, 0x01	; 1
    248e:	09 f0       	breq	.+2      	; 0x2492 <DIO_init+0x72>
    2490:	40 c0       	rjmp	.+128    	; 0x2512 <DIO_init+0xf2>
    2492:	24 b1       	in	r18, 0x04	; 4
    2494:	81 e0       	ldi	r24, 0x01	; 1
    2496:	90 e0       	ldi	r25, 0x00	; 0
    2498:	02 c0       	rjmp	.+4      	; 0x249e <DIO_init+0x7e>
    249a:	88 0f       	add	r24, r24
    249c:	99 1f       	adc	r25, r25
    249e:	6a 95       	dec	r22
    24a0:	e2 f7       	brpl	.-8      	; 0x249a <DIO_init+0x7a>
    24a2:	82 2b       	or	r24, r18
    24a4:	84 b9       	out	0x04, r24	; 4
    24a6:	08 95       	ret
    24a8:	41 11       	cpse	r20, r1
    24aa:	0c c0       	rjmp	.+24     	; 0x24c4 <DIO_init+0xa4>
    24ac:	27 b1       	in	r18, 0x07	; 7
    24ae:	81 e0       	ldi	r24, 0x01	; 1
    24b0:	90 e0       	ldi	r25, 0x00	; 0
    24b2:	02 c0       	rjmp	.+4      	; 0x24b8 <DIO_init+0x98>
    24b4:	88 0f       	add	r24, r24
    24b6:	99 1f       	adc	r25, r25
    24b8:	6a 95       	dec	r22
    24ba:	e2 f7       	brpl	.-8      	; 0x24b4 <DIO_init+0x94>
    24bc:	80 95       	com	r24
    24be:	82 23       	and	r24, r18
    24c0:	87 b9       	out	0x07, r24	; 7
    24c2:	08 95       	ret
    24c4:	41 30       	cpi	r20, 0x01	; 1
    24c6:	29 f5       	brne	.+74     	; 0x2512 <DIO_init+0xf2>
    24c8:	27 b1       	in	r18, 0x07	; 7
    24ca:	81 e0       	ldi	r24, 0x01	; 1
    24cc:	90 e0       	ldi	r25, 0x00	; 0
    24ce:	02 c0       	rjmp	.+4      	; 0x24d4 <DIO_init+0xb4>
    24d0:	88 0f       	add	r24, r24
    24d2:	99 1f       	adc	r25, r25
    24d4:	6a 95       	dec	r22
    24d6:	e2 f7       	brpl	.-8      	; 0x24d0 <DIO_init+0xb0>
    24d8:	82 2b       	or	r24, r18
    24da:	87 b9       	out	0x07, r24	; 7
    24dc:	08 95       	ret
    24de:	41 11       	cpse	r20, r1
    24e0:	0c c0       	rjmp	.+24     	; 0x24fa <DIO_init+0xda>
    24e2:	2a b1       	in	r18, 0x0a	; 10
    24e4:	81 e0       	ldi	r24, 0x01	; 1
    24e6:	90 e0       	ldi	r25, 0x00	; 0
    24e8:	02 c0       	rjmp	.+4      	; 0x24ee <DIO_init+0xce>
    24ea:	88 0f       	add	r24, r24
    24ec:	99 1f       	adc	r25, r25
    24ee:	6a 95       	dec	r22
    24f0:	e2 f7       	brpl	.-8      	; 0x24ea <DIO_init+0xca>
    24f2:	80 95       	com	r24
    24f4:	82 23       	and	r24, r18
    24f6:	8a b9       	out	0x0a, r24	; 10
    24f8:	08 95       	ret
    24fa:	41 30       	cpi	r20, 0x01	; 1
    24fc:	51 f4       	brne	.+20     	; 0x2512 <DIO_init+0xf2>
    24fe:	2a b1       	in	r18, 0x0a	; 10
    2500:	81 e0       	ldi	r24, 0x01	; 1
    2502:	90 e0       	ldi	r25, 0x00	; 0
    2504:	02 c0       	rjmp	.+4      	; 0x250a <DIO_init+0xea>
    2506:	88 0f       	add	r24, r24
    2508:	99 1f       	adc	r25, r25
    250a:	6a 95       	dec	r22
    250c:	e2 f7       	brpl	.-8      	; 0x2506 <DIO_init+0xe6>
    250e:	82 2b       	or	r24, r18
    2510:	8a b9       	out	0x0a, r24	; 10
    2512:	08 95       	ret

00002514 <DIO_write>:
    2514:	82 34       	cpi	r24, 0x42	; 66
    2516:	31 f1       	breq	.+76     	; 0x2564 <DIO_write+0x50>
    2518:	18 f4       	brcc	.+6      	; 0x2520 <DIO_write+0xc>
    251a:	81 34       	cpi	r24, 0x41	; 65
    251c:	39 f0       	breq	.+14     	; 0x252c <DIO_write+0x18>
    251e:	08 95       	ret
    2520:	83 34       	cpi	r24, 0x43	; 67
    2522:	e1 f1       	breq	.+120    	; 0x259c <DIO_write+0x88>
    2524:	84 34       	cpi	r24, 0x44	; 68
    2526:	09 f4       	brne	.+2      	; 0x252a <DIO_write+0x16>
    2528:	54 c0       	rjmp	.+168    	; 0x25d2 <DIO_write+0xbe>
    252a:	08 95       	ret
    252c:	41 11       	cpse	r20, r1
    252e:	0c c0       	rjmp	.+24     	; 0x2548 <DIO_write+0x34>
    2530:	2b b3       	in	r18, 0x1b	; 27
    2532:	81 e0       	ldi	r24, 0x01	; 1
    2534:	90 e0       	ldi	r25, 0x00	; 0
    2536:	02 c0       	rjmp	.+4      	; 0x253c <DIO_write+0x28>
    2538:	88 0f       	add	r24, r24
    253a:	99 1f       	adc	r25, r25
    253c:	6a 95       	dec	r22
    253e:	e2 f7       	brpl	.-8      	; 0x2538 <DIO_write+0x24>
    2540:	80 95       	com	r24
    2542:	82 23       	and	r24, r18
    2544:	8b bb       	out	0x1b, r24	; 27
    2546:	08 95       	ret
    2548:	41 30       	cpi	r20, 0x01	; 1
    254a:	09 f0       	breq	.+2      	; 0x254e <DIO_write+0x3a>
    254c:	5c c0       	rjmp	.+184    	; 0x2606 <DIO_write+0xf2>
    254e:	2b b3       	in	r18, 0x1b	; 27
    2550:	81 e0       	ldi	r24, 0x01	; 1
    2552:	90 e0       	ldi	r25, 0x00	; 0
    2554:	02 c0       	rjmp	.+4      	; 0x255a <DIO_write+0x46>
    2556:	88 0f       	add	r24, r24
    2558:	99 1f       	adc	r25, r25
    255a:	6a 95       	dec	r22
    255c:	e2 f7       	brpl	.-8      	; 0x2556 <DIO_write+0x42>
    255e:	82 2b       	or	r24, r18
    2560:	8b bb       	out	0x1b, r24	; 27
    2562:	08 95       	ret
    2564:	41 11       	cpse	r20, r1
    2566:	0c c0       	rjmp	.+24     	; 0x2580 <DIO_write+0x6c>
    2568:	25 b1       	in	r18, 0x05	; 5
    256a:	81 e0       	ldi	r24, 0x01	; 1
    256c:	90 e0       	ldi	r25, 0x00	; 0
    256e:	02 c0       	rjmp	.+4      	; 0x2574 <DIO_write+0x60>
    2570:	88 0f       	add	r24, r24
    2572:	99 1f       	adc	r25, r25
    2574:	6a 95       	dec	r22
    2576:	e2 f7       	brpl	.-8      	; 0x2570 <DIO_write+0x5c>
    2578:	80 95       	com	r24
    257a:	82 23       	and	r24, r18
    257c:	85 b9       	out	0x05, r24	; 5
    257e:	08 95       	ret
    2580:	41 30       	cpi	r20, 0x01	; 1
    2582:	09 f0       	breq	.+2      	; 0x2586 <DIO_write+0x72>
    2584:	40 c0       	rjmp	.+128    	; 0x2606 <DIO_write+0xf2>
    2586:	25 b1       	in	r18, 0x05	; 5
    2588:	81 e0       	ldi	r24, 0x01	; 1
    258a:	90 e0       	ldi	r25, 0x00	; 0
    258c:	02 c0       	rjmp	.+4      	; 0x2592 <DIO_write+0x7e>
    258e:	88 0f       	add	r24, r24
    2590:	99 1f       	adc	r25, r25
    2592:	6a 95       	dec	r22
    2594:	e2 f7       	brpl	.-8      	; 0x258e <DIO_write+0x7a>
    2596:	82 2b       	or	r24, r18
    2598:	85 b9       	out	0x05, r24	; 5
    259a:	08 95       	ret
    259c:	41 11       	cpse	r20, r1
    259e:	0c c0       	rjmp	.+24     	; 0x25b8 <DIO_write+0xa4>
    25a0:	28 b1       	in	r18, 0x08	; 8
    25a2:	81 e0       	ldi	r24, 0x01	; 1
    25a4:	90 e0       	ldi	r25, 0x00	; 0
    25a6:	02 c0       	rjmp	.+4      	; 0x25ac <DIO_write+0x98>
    25a8:	88 0f       	add	r24, r24
    25aa:	99 1f       	adc	r25, r25
    25ac:	6a 95       	dec	r22
    25ae:	e2 f7       	brpl	.-8      	; 0x25a8 <DIO_write+0x94>
    25b0:	80 95       	com	r24
    25b2:	82 23       	and	r24, r18
    25b4:	88 b9       	out	0x08, r24	; 8
    25b6:	08 95       	ret
    25b8:	41 30       	cpi	r20, 0x01	; 1
    25ba:	29 f5       	brne	.+74     	; 0x2606 <DIO_write+0xf2>
    25bc:	28 b1       	in	r18, 0x08	; 8
    25be:	81 e0       	ldi	r24, 0x01	; 1
    25c0:	90 e0       	ldi	r25, 0x00	; 0
    25c2:	02 c0       	rjmp	.+4      	; 0x25c8 <DIO_write+0xb4>
    25c4:	88 0f       	add	r24, r24
    25c6:	99 1f       	adc	r25, r25
    25c8:	6a 95       	dec	r22
    25ca:	e2 f7       	brpl	.-8      	; 0x25c4 <DIO_write+0xb0>
    25cc:	82 2b       	or	r24, r18
    25ce:	88 b9       	out	0x08, r24	; 8
    25d0:	08 95       	ret
    25d2:	41 11       	cpse	r20, r1
    25d4:	0c c0       	rjmp	.+24     	; 0x25ee <DIO_write+0xda>
    25d6:	2b b1       	in	r18, 0x0b	; 11
    25d8:	81 e0       	ldi	r24, 0x01	; 1
    25da:	90 e0       	ldi	r25, 0x00	; 0
    25dc:	02 c0       	rjmp	.+4      	; 0x25e2 <DIO_write+0xce>
    25de:	88 0f       	add	r24, r24
    25e0:	99 1f       	adc	r25, r25
    25e2:	6a 95       	dec	r22
    25e4:	e2 f7       	brpl	.-8      	; 0x25de <DIO_write+0xca>
    25e6:	80 95       	com	r24
    25e8:	82 23       	and	r24, r18
    25ea:	8b b9       	out	0x0b, r24	; 11
    25ec:	08 95       	ret
    25ee:	41 30       	cpi	r20, 0x01	; 1
    25f0:	51 f4       	brne	.+20     	; 0x2606 <DIO_write+0xf2>
    25f2:	2b b1       	in	r18, 0x0b	; 11
    25f4:	81 e0       	ldi	r24, 0x01	; 1
    25f6:	90 e0       	ldi	r25, 0x00	; 0
    25f8:	02 c0       	rjmp	.+4      	; 0x25fe <DIO_write+0xea>
    25fa:	88 0f       	add	r24, r24
    25fc:	99 1f       	adc	r25, r25
    25fe:	6a 95       	dec	r22
    2600:	e2 f7       	brpl	.-8      	; 0x25fa <DIO_write+0xe6>
    2602:	82 2b       	or	r24, r18
    2604:	8b b9       	out	0x0b, r24	; 11
    2606:	08 95       	ret

00002608 <acos>:
    2608:	9f 93       	push	r25
    260a:	9f 77       	andi	r25, 0x7F	; 127
    260c:	0e 94 ba 14 	call	0x2974	; 0x2974 <__fp_arccos>
    2610:	0f 90       	pop	r0
    2612:	00 20       	and	r0, r0
    2614:	42 f4       	brpl	.+16     	; 0x2626 <acos+0x1e>
    2616:	90 58       	subi	r25, 0x80	; 128
    2618:	a2 ea       	ldi	r26, 0xA2	; 162
    261a:	2a ed       	ldi	r18, 0xDA	; 218
    261c:	3f e0       	ldi	r19, 0x0F	; 15
    261e:	49 e4       	ldi	r20, 0x49	; 73
    2620:	50 e4       	ldi	r21, 0x40	; 64
    2622:	0e 94 2d 13 	call	0x265a	; 0x265a <__addsf3x>
    2626:	0c 94 a4 15 	jmp	0x2b48	; 0x2b48 <__fp_round>

0000262a <__subsf3>:
    262a:	50 58       	subi	r21, 0x80	; 128

0000262c <__addsf3>:
    262c:	bb 27       	eor	r27, r27
    262e:	aa 27       	eor	r26, r26
    2630:	0e 94 2d 13 	call	0x265a	; 0x265a <__addsf3x>
    2634:	0c 94 a4 15 	jmp	0x2b48	; 0x2b48 <__fp_round>
    2638:	0e 94 6b 15 	call	0x2ad6	; 0x2ad6 <__fp_pscA>
    263c:	38 f0       	brcs	.+14     	; 0x264c <__addsf3+0x20>
    263e:	0e 94 72 15 	call	0x2ae4	; 0x2ae4 <__fp_pscB>
    2642:	20 f0       	brcs	.+8      	; 0x264c <__addsf3+0x20>
    2644:	39 f4       	brne	.+14     	; 0x2654 <__addsf3+0x28>
    2646:	9f 3f       	cpi	r25, 0xFF	; 255
    2648:	19 f4       	brne	.+6      	; 0x2650 <__addsf3+0x24>
    264a:	26 f4       	brtc	.+8      	; 0x2654 <__addsf3+0x28>
    264c:	0c 94 2d 15 	jmp	0x2a5a	; 0x2a5a <__fp_nan>
    2650:	0e f4       	brtc	.+2      	; 0x2654 <__addsf3+0x28>
    2652:	e0 95       	com	r30
    2654:	e7 fb       	bst	r30, 7
    2656:	0c 94 fe 14 	jmp	0x29fc	; 0x29fc <__fp_inf>

0000265a <__addsf3x>:
    265a:	e9 2f       	mov	r30, r25
    265c:	0e 94 c9 15 	call	0x2b92	; 0x2b92 <__fp_split3>
    2660:	58 f3       	brcs	.-42     	; 0x2638 <__addsf3+0xc>
    2662:	ba 17       	cp	r27, r26
    2664:	62 07       	cpc	r22, r18
    2666:	73 07       	cpc	r23, r19
    2668:	84 07       	cpc	r24, r20
    266a:	95 07       	cpc	r25, r21
    266c:	20 f0       	brcs	.+8      	; 0x2676 <__addsf3x+0x1c>
    266e:	79 f4       	brne	.+30     	; 0x268e <__addsf3x+0x34>
    2670:	a6 f5       	brtc	.+104    	; 0x26da <__addsf3x+0x80>
    2672:	0c 94 03 16 	jmp	0x2c06	; 0x2c06 <__fp_zero>
    2676:	0e f4       	brtc	.+2      	; 0x267a <__addsf3x+0x20>
    2678:	e0 95       	com	r30
    267a:	0b 2e       	mov	r0, r27
    267c:	ba 2f       	mov	r27, r26
    267e:	a0 2d       	mov	r26, r0
    2680:	0b 01       	movw	r0, r22
    2682:	b9 01       	movw	r22, r18
    2684:	90 01       	movw	r18, r0
    2686:	0c 01       	movw	r0, r24
    2688:	ca 01       	movw	r24, r20
    268a:	a0 01       	movw	r20, r0
    268c:	11 24       	eor	r1, r1
    268e:	ff 27       	eor	r31, r31
    2690:	59 1b       	sub	r21, r25
    2692:	99 f0       	breq	.+38     	; 0x26ba <__addsf3x+0x60>
    2694:	59 3f       	cpi	r21, 0xF9	; 249
    2696:	50 f4       	brcc	.+20     	; 0x26ac <__addsf3x+0x52>
    2698:	50 3e       	cpi	r21, 0xE0	; 224
    269a:	68 f1       	brcs	.+90     	; 0x26f6 <__addsf3x+0x9c>
    269c:	1a 16       	cp	r1, r26
    269e:	f0 40       	sbci	r31, 0x00	; 0
    26a0:	a2 2f       	mov	r26, r18
    26a2:	23 2f       	mov	r18, r19
    26a4:	34 2f       	mov	r19, r20
    26a6:	44 27       	eor	r20, r20
    26a8:	58 5f       	subi	r21, 0xF8	; 248
    26aa:	f3 cf       	rjmp	.-26     	; 0x2692 <__addsf3x+0x38>
    26ac:	46 95       	lsr	r20
    26ae:	37 95       	ror	r19
    26b0:	27 95       	ror	r18
    26b2:	a7 95       	ror	r26
    26b4:	f0 40       	sbci	r31, 0x00	; 0
    26b6:	53 95       	inc	r21
    26b8:	c9 f7       	brne	.-14     	; 0x26ac <__addsf3x+0x52>
    26ba:	7e f4       	brtc	.+30     	; 0x26da <__addsf3x+0x80>
    26bc:	1f 16       	cp	r1, r31
    26be:	ba 0b       	sbc	r27, r26
    26c0:	62 0b       	sbc	r22, r18
    26c2:	73 0b       	sbc	r23, r19
    26c4:	84 0b       	sbc	r24, r20
    26c6:	ba f0       	brmi	.+46     	; 0x26f6 <__addsf3x+0x9c>
    26c8:	91 50       	subi	r25, 0x01	; 1
    26ca:	a1 f0       	breq	.+40     	; 0x26f4 <__addsf3x+0x9a>
    26cc:	ff 0f       	add	r31, r31
    26ce:	bb 1f       	adc	r27, r27
    26d0:	66 1f       	adc	r22, r22
    26d2:	77 1f       	adc	r23, r23
    26d4:	88 1f       	adc	r24, r24
    26d6:	c2 f7       	brpl	.-16     	; 0x26c8 <__addsf3x+0x6e>
    26d8:	0e c0       	rjmp	.+28     	; 0x26f6 <__addsf3x+0x9c>
    26da:	ba 0f       	add	r27, r26
    26dc:	62 1f       	adc	r22, r18
    26de:	73 1f       	adc	r23, r19
    26e0:	84 1f       	adc	r24, r20
    26e2:	48 f4       	brcc	.+18     	; 0x26f6 <__addsf3x+0x9c>
    26e4:	87 95       	ror	r24
    26e6:	77 95       	ror	r23
    26e8:	67 95       	ror	r22
    26ea:	b7 95       	ror	r27
    26ec:	f7 95       	ror	r31
    26ee:	9e 3f       	cpi	r25, 0xFE	; 254
    26f0:	08 f0       	brcs	.+2      	; 0x26f4 <__addsf3x+0x9a>
    26f2:	b0 cf       	rjmp	.-160    	; 0x2654 <__addsf3+0x28>
    26f4:	93 95       	inc	r25
    26f6:	88 0f       	add	r24, r24
    26f8:	08 f0       	brcs	.+2      	; 0x26fc <__addsf3x+0xa2>
    26fa:	99 27       	eor	r25, r25
    26fc:	ee 0f       	add	r30, r30
    26fe:	97 95       	ror	r25
    2700:	87 95       	ror	r24
    2702:	08 95       	ret

00002704 <asin>:
    2704:	9f 93       	push	r25
    2706:	9f 77       	andi	r25, 0x7F	; 127
    2708:	ee e3       	ldi	r30, 0x3E	; 62
    270a:	89 37       	cpi	r24, 0x79	; 121
    270c:	9e 07       	cpc	r25, r30
    270e:	28 f4       	brcc	.+10     	; 0x271a <asin+0x16>
    2710:	e8 e6       	ldi	r30, 0x68	; 104
    2712:	f0 e0       	ldi	r31, 0x00	; 0
    2714:	0e 94 57 15 	call	0x2aae	; 0x2aae <__fp_powsodd>
    2718:	0c c0       	rjmp	.+24     	; 0x2732 <asin+0x2e>
    271a:	0e 94 ba 14 	call	0x2974	; 0x2974 <__fp_arccos>
    271e:	90 58       	subi	r25, 0x80	; 128
    2720:	a2 ea       	ldi	r26, 0xA2	; 162
    2722:	2a ed       	ldi	r18, 0xDA	; 218
    2724:	3f e0       	ldi	r19, 0x0F	; 15
    2726:	49 ec       	ldi	r20, 0xC9	; 201
    2728:	5f e3       	ldi	r21, 0x3F	; 63
    272a:	0e 94 2d 13 	call	0x265a	; 0x265a <__addsf3x>
    272e:	0e 94 a4 15 	call	0x2b48	; 0x2b48 <__fp_round>
    2732:	0f 90       	pop	r0
    2734:	07 fc       	sbrc	r0, 7
    2736:	90 58       	subi	r25, 0x80	; 128
    2738:	08 95       	ret

0000273a <ceil>:
    273a:	0e 94 eb 15 	call	0x2bd6	; 0x2bd6 <__fp_trunc>
    273e:	90 f0       	brcs	.+36     	; 0x2764 <ceil+0x2a>
    2740:	9f 37       	cpi	r25, 0x7F	; 127
    2742:	48 f4       	brcc	.+18     	; 0x2756 <ceil+0x1c>
    2744:	91 11       	cpse	r25, r1
    2746:	16 f4       	brtc	.+4      	; 0x274c <ceil+0x12>
    2748:	0c 94 04 16 	jmp	0x2c08	; 0x2c08 <__fp_szero>
    274c:	60 e0       	ldi	r22, 0x00	; 0
    274e:	70 e0       	ldi	r23, 0x00	; 0
    2750:	80 e8       	ldi	r24, 0x80	; 128
    2752:	9f e3       	ldi	r25, 0x3F	; 63
    2754:	08 95       	ret
    2756:	26 f0       	brts	.+8      	; 0x2760 <ceil+0x26>
    2758:	1b 16       	cp	r1, r27
    275a:	61 1d       	adc	r22, r1
    275c:	71 1d       	adc	r23, r1
    275e:	81 1d       	adc	r24, r1
    2760:	0c 94 04 15 	jmp	0x2a08	; 0x2a08 <__fp_mintl>
    2764:	0c 94 1f 15 	jmp	0x2a3e	; 0x2a3e <__fp_mpack>

00002768 <__cmpsf2>:
    2768:	0e 94 da 14 	call	0x29b4	; 0x29b4 <__fp_cmp>
    276c:	08 f4       	brcc	.+2      	; 0x2770 <__cmpsf2+0x8>
    276e:	81 e0       	ldi	r24, 0x01	; 1
    2770:	08 95       	ret

00002772 <cos>:
    2772:	0e 94 7b 15 	call	0x2af6	; 0x2af6 <__fp_rempio2>
    2776:	e3 95       	inc	r30
    2778:	0c 94 b5 15 	jmp	0x2b6a	; 0x2b6a <__fp_sinus>

0000277c <__divsf3>:
    277c:	0e 94 d2 13 	call	0x27a4	; 0x27a4 <__divsf3x>
    2780:	0c 94 a4 15 	jmp	0x2b48	; 0x2b48 <__fp_round>
    2784:	0e 94 72 15 	call	0x2ae4	; 0x2ae4 <__fp_pscB>
    2788:	58 f0       	brcs	.+22     	; 0x27a0 <__divsf3+0x24>
    278a:	0e 94 6b 15 	call	0x2ad6	; 0x2ad6 <__fp_pscA>
    278e:	40 f0       	brcs	.+16     	; 0x27a0 <__divsf3+0x24>
    2790:	29 f4       	brne	.+10     	; 0x279c <__divsf3+0x20>
    2792:	5f 3f       	cpi	r21, 0xFF	; 255
    2794:	29 f0       	breq	.+10     	; 0x27a0 <__divsf3+0x24>
    2796:	0c 94 fe 14 	jmp	0x29fc	; 0x29fc <__fp_inf>
    279a:	51 11       	cpse	r21, r1
    279c:	0c 94 04 16 	jmp	0x2c08	; 0x2c08 <__fp_szero>
    27a0:	0c 94 2d 15 	jmp	0x2a5a	; 0x2a5a <__fp_nan>

000027a4 <__divsf3x>:
    27a4:	0e 94 c9 15 	call	0x2b92	; 0x2b92 <__fp_split3>
    27a8:	68 f3       	brcs	.-38     	; 0x2784 <__divsf3+0x8>

000027aa <__divsf3_pse>:
    27aa:	99 23       	and	r25, r25
    27ac:	b1 f3       	breq	.-20     	; 0x279a <__divsf3+0x1e>
    27ae:	55 23       	and	r21, r21
    27b0:	91 f3       	breq	.-28     	; 0x2796 <__divsf3+0x1a>
    27b2:	95 1b       	sub	r25, r21
    27b4:	55 0b       	sbc	r21, r21
    27b6:	bb 27       	eor	r27, r27
    27b8:	aa 27       	eor	r26, r26
    27ba:	62 17       	cp	r22, r18
    27bc:	73 07       	cpc	r23, r19
    27be:	84 07       	cpc	r24, r20
    27c0:	38 f0       	brcs	.+14     	; 0x27d0 <__divsf3_pse+0x26>
    27c2:	9f 5f       	subi	r25, 0xFF	; 255
    27c4:	5f 4f       	sbci	r21, 0xFF	; 255
    27c6:	22 0f       	add	r18, r18
    27c8:	33 1f       	adc	r19, r19
    27ca:	44 1f       	adc	r20, r20
    27cc:	aa 1f       	adc	r26, r26
    27ce:	a9 f3       	breq	.-22     	; 0x27ba <__divsf3_pse+0x10>
    27d0:	35 d0       	rcall	.+106    	; 0x283c <__divsf3_pse+0x92>
    27d2:	0e 2e       	mov	r0, r30
    27d4:	3a f0       	brmi	.+14     	; 0x27e4 <__divsf3_pse+0x3a>
    27d6:	e0 e8       	ldi	r30, 0x80	; 128
    27d8:	32 d0       	rcall	.+100    	; 0x283e <__divsf3_pse+0x94>
    27da:	91 50       	subi	r25, 0x01	; 1
    27dc:	50 40       	sbci	r21, 0x00	; 0
    27de:	e6 95       	lsr	r30
    27e0:	00 1c       	adc	r0, r0
    27e2:	ca f7       	brpl	.-14     	; 0x27d6 <__divsf3_pse+0x2c>
    27e4:	2b d0       	rcall	.+86     	; 0x283c <__divsf3_pse+0x92>
    27e6:	fe 2f       	mov	r31, r30
    27e8:	29 d0       	rcall	.+82     	; 0x283c <__divsf3_pse+0x92>
    27ea:	66 0f       	add	r22, r22
    27ec:	77 1f       	adc	r23, r23
    27ee:	88 1f       	adc	r24, r24
    27f0:	bb 1f       	adc	r27, r27
    27f2:	26 17       	cp	r18, r22
    27f4:	37 07       	cpc	r19, r23
    27f6:	48 07       	cpc	r20, r24
    27f8:	ab 07       	cpc	r26, r27
    27fa:	b0 e8       	ldi	r27, 0x80	; 128
    27fc:	09 f0       	breq	.+2      	; 0x2800 <__divsf3_pse+0x56>
    27fe:	bb 0b       	sbc	r27, r27
    2800:	80 2d       	mov	r24, r0
    2802:	bf 01       	movw	r22, r30
    2804:	ff 27       	eor	r31, r31
    2806:	93 58       	subi	r25, 0x83	; 131
    2808:	5f 4f       	sbci	r21, 0xFF	; 255
    280a:	3a f0       	brmi	.+14     	; 0x281a <__divsf3_pse+0x70>
    280c:	9e 3f       	cpi	r25, 0xFE	; 254
    280e:	51 05       	cpc	r21, r1
    2810:	78 f0       	brcs	.+30     	; 0x2830 <__divsf3_pse+0x86>
    2812:	0c 94 fe 14 	jmp	0x29fc	; 0x29fc <__fp_inf>
    2816:	0c 94 04 16 	jmp	0x2c08	; 0x2c08 <__fp_szero>
    281a:	5f 3f       	cpi	r21, 0xFF	; 255
    281c:	e4 f3       	brlt	.-8      	; 0x2816 <__divsf3_pse+0x6c>
    281e:	98 3e       	cpi	r25, 0xE8	; 232
    2820:	d4 f3       	brlt	.-12     	; 0x2816 <__divsf3_pse+0x6c>
    2822:	86 95       	lsr	r24
    2824:	77 95       	ror	r23
    2826:	67 95       	ror	r22
    2828:	b7 95       	ror	r27
    282a:	f7 95       	ror	r31
    282c:	9f 5f       	subi	r25, 0xFF	; 255
    282e:	c9 f7       	brne	.-14     	; 0x2822 <__divsf3_pse+0x78>
    2830:	88 0f       	add	r24, r24
    2832:	91 1d       	adc	r25, r1
    2834:	96 95       	lsr	r25
    2836:	87 95       	ror	r24
    2838:	97 f9       	bld	r25, 7
    283a:	08 95       	ret
    283c:	e1 e0       	ldi	r30, 0x01	; 1
    283e:	66 0f       	add	r22, r22
    2840:	77 1f       	adc	r23, r23
    2842:	88 1f       	adc	r24, r24
    2844:	bb 1f       	adc	r27, r27
    2846:	62 17       	cp	r22, r18
    2848:	73 07       	cpc	r23, r19
    284a:	84 07       	cpc	r24, r20
    284c:	ba 07       	cpc	r27, r26
    284e:	20 f0       	brcs	.+8      	; 0x2858 <__divsf3_pse+0xae>
    2850:	62 1b       	sub	r22, r18
    2852:	73 0b       	sbc	r23, r19
    2854:	84 0b       	sbc	r24, r20
    2856:	ba 0b       	sbc	r27, r26
    2858:	ee 1f       	adc	r30, r30
    285a:	88 f7       	brcc	.-30     	; 0x283e <__divsf3_pse+0x94>
    285c:	e0 95       	com	r30
    285e:	08 95       	ret

00002860 <__fixsfsi>:
    2860:	0e 94 37 14 	call	0x286e	; 0x286e <__fixunssfsi>
    2864:	68 94       	set
    2866:	b1 11       	cpse	r27, r1
    2868:	0c 94 04 16 	jmp	0x2c08	; 0x2c08 <__fp_szero>
    286c:	08 95       	ret

0000286e <__fixunssfsi>:
    286e:	0e 94 d1 15 	call	0x2ba2	; 0x2ba2 <__fp_splitA>
    2872:	88 f0       	brcs	.+34     	; 0x2896 <__fixunssfsi+0x28>
    2874:	9f 57       	subi	r25, 0x7F	; 127
    2876:	98 f0       	brcs	.+38     	; 0x289e <__fixunssfsi+0x30>
    2878:	b9 2f       	mov	r27, r25
    287a:	99 27       	eor	r25, r25
    287c:	b7 51       	subi	r27, 0x17	; 23
    287e:	b0 f0       	brcs	.+44     	; 0x28ac <__fixunssfsi+0x3e>
    2880:	e1 f0       	breq	.+56     	; 0x28ba <__fixunssfsi+0x4c>
    2882:	66 0f       	add	r22, r22
    2884:	77 1f       	adc	r23, r23
    2886:	88 1f       	adc	r24, r24
    2888:	99 1f       	adc	r25, r25
    288a:	1a f0       	brmi	.+6      	; 0x2892 <__fixunssfsi+0x24>
    288c:	ba 95       	dec	r27
    288e:	c9 f7       	brne	.-14     	; 0x2882 <__fixunssfsi+0x14>
    2890:	14 c0       	rjmp	.+40     	; 0x28ba <__fixunssfsi+0x4c>
    2892:	b1 30       	cpi	r27, 0x01	; 1
    2894:	91 f0       	breq	.+36     	; 0x28ba <__fixunssfsi+0x4c>
    2896:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__fp_zero>
    289a:	b1 e0       	ldi	r27, 0x01	; 1
    289c:	08 95       	ret
    289e:	0c 94 03 16 	jmp	0x2c06	; 0x2c06 <__fp_zero>
    28a2:	67 2f       	mov	r22, r23
    28a4:	78 2f       	mov	r23, r24
    28a6:	88 27       	eor	r24, r24
    28a8:	b8 5f       	subi	r27, 0xF8	; 248
    28aa:	39 f0       	breq	.+14     	; 0x28ba <__fixunssfsi+0x4c>
    28ac:	b9 3f       	cpi	r27, 0xF9	; 249
    28ae:	cc f3       	brlt	.-14     	; 0x28a2 <__fixunssfsi+0x34>
    28b0:	86 95       	lsr	r24
    28b2:	77 95       	ror	r23
    28b4:	67 95       	ror	r22
    28b6:	b3 95       	inc	r27
    28b8:	d9 f7       	brne	.-10     	; 0x28b0 <__fixunssfsi+0x42>
    28ba:	3e f4       	brtc	.+14     	; 0x28ca <__fixunssfsi+0x5c>
    28bc:	90 95       	com	r25
    28be:	80 95       	com	r24
    28c0:	70 95       	com	r23
    28c2:	61 95       	neg	r22
    28c4:	7f 4f       	sbci	r23, 0xFF	; 255
    28c6:	8f 4f       	sbci	r24, 0xFF	; 255
    28c8:	9f 4f       	sbci	r25, 0xFF	; 255
    28ca:	08 95       	ret

000028cc <__floatunsisf>:
    28cc:	e8 94       	clt
    28ce:	09 c0       	rjmp	.+18     	; 0x28e2 <__floatsisf+0x12>

000028d0 <__floatsisf>:
    28d0:	97 fb       	bst	r25, 7
    28d2:	3e f4       	brtc	.+14     	; 0x28e2 <__floatsisf+0x12>
    28d4:	90 95       	com	r25
    28d6:	80 95       	com	r24
    28d8:	70 95       	com	r23
    28da:	61 95       	neg	r22
    28dc:	7f 4f       	sbci	r23, 0xFF	; 255
    28de:	8f 4f       	sbci	r24, 0xFF	; 255
    28e0:	9f 4f       	sbci	r25, 0xFF	; 255
    28e2:	99 23       	and	r25, r25
    28e4:	a9 f0       	breq	.+42     	; 0x2910 <__floatsisf+0x40>
    28e6:	f9 2f       	mov	r31, r25
    28e8:	96 e9       	ldi	r25, 0x96	; 150
    28ea:	bb 27       	eor	r27, r27
    28ec:	93 95       	inc	r25
    28ee:	f6 95       	lsr	r31
    28f0:	87 95       	ror	r24
    28f2:	77 95       	ror	r23
    28f4:	67 95       	ror	r22
    28f6:	b7 95       	ror	r27
    28f8:	f1 11       	cpse	r31, r1
    28fa:	f8 cf       	rjmp	.-16     	; 0x28ec <__floatsisf+0x1c>
    28fc:	fa f4       	brpl	.+62     	; 0x293c <__floatsisf+0x6c>
    28fe:	bb 0f       	add	r27, r27
    2900:	11 f4       	brne	.+4      	; 0x2906 <__floatsisf+0x36>
    2902:	60 ff       	sbrs	r22, 0
    2904:	1b c0       	rjmp	.+54     	; 0x293c <__floatsisf+0x6c>
    2906:	6f 5f       	subi	r22, 0xFF	; 255
    2908:	7f 4f       	sbci	r23, 0xFF	; 255
    290a:	8f 4f       	sbci	r24, 0xFF	; 255
    290c:	9f 4f       	sbci	r25, 0xFF	; 255
    290e:	16 c0       	rjmp	.+44     	; 0x293c <__floatsisf+0x6c>
    2910:	88 23       	and	r24, r24
    2912:	11 f0       	breq	.+4      	; 0x2918 <__floatsisf+0x48>
    2914:	96 e9       	ldi	r25, 0x96	; 150
    2916:	11 c0       	rjmp	.+34     	; 0x293a <__floatsisf+0x6a>
    2918:	77 23       	and	r23, r23
    291a:	21 f0       	breq	.+8      	; 0x2924 <__floatsisf+0x54>
    291c:	9e e8       	ldi	r25, 0x8E	; 142
    291e:	87 2f       	mov	r24, r23
    2920:	76 2f       	mov	r23, r22
    2922:	05 c0       	rjmp	.+10     	; 0x292e <__floatsisf+0x5e>
    2924:	66 23       	and	r22, r22
    2926:	71 f0       	breq	.+28     	; 0x2944 <__floatsisf+0x74>
    2928:	96 e8       	ldi	r25, 0x86	; 134
    292a:	86 2f       	mov	r24, r22
    292c:	70 e0       	ldi	r23, 0x00	; 0
    292e:	60 e0       	ldi	r22, 0x00	; 0
    2930:	2a f0       	brmi	.+10     	; 0x293c <__floatsisf+0x6c>
    2932:	9a 95       	dec	r25
    2934:	66 0f       	add	r22, r22
    2936:	77 1f       	adc	r23, r23
    2938:	88 1f       	adc	r24, r24
    293a:	da f7       	brpl	.-10     	; 0x2932 <__floatsisf+0x62>
    293c:	88 0f       	add	r24, r24
    293e:	96 95       	lsr	r25
    2940:	87 95       	ror	r24
    2942:	97 f9       	bld	r25, 7
    2944:	08 95       	ret

00002946 <floor>:
    2946:	0e 94 eb 15 	call	0x2bd6	; 0x2bd6 <__fp_trunc>
    294a:	90 f0       	brcs	.+36     	; 0x2970 <floor+0x2a>
    294c:	9f 37       	cpi	r25, 0x7F	; 127
    294e:	48 f4       	brcc	.+18     	; 0x2962 <floor+0x1c>
    2950:	91 11       	cpse	r25, r1
    2952:	16 f0       	brts	.+4      	; 0x2958 <floor+0x12>
    2954:	0c 94 04 16 	jmp	0x2c08	; 0x2c08 <__fp_szero>
    2958:	60 e0       	ldi	r22, 0x00	; 0
    295a:	70 e0       	ldi	r23, 0x00	; 0
    295c:	80 e8       	ldi	r24, 0x80	; 128
    295e:	9f eb       	ldi	r25, 0xBF	; 191
    2960:	08 95       	ret
    2962:	26 f4       	brtc	.+8      	; 0x296c <floor+0x26>
    2964:	1b 16       	cp	r1, r27
    2966:	61 1d       	adc	r22, r1
    2968:	71 1d       	adc	r23, r1
    296a:	81 1d       	adc	r24, r1
    296c:	0c 94 04 15 	jmp	0x2a08	; 0x2a08 <__fp_mintl>
    2970:	0c 94 1f 15 	jmp	0x2a3e	; 0x2a3e <__fp_mpack>

00002974 <__fp_arccos>:
    2974:	df 93       	push	r29
    2976:	cf 93       	push	r28
    2978:	1f 93       	push	r17
    297a:	0f 93       	push	r16
    297c:	8b 01       	movw	r16, r22
    297e:	ec 01       	movw	r28, r24
    2980:	ec e7       	ldi	r30, 0x7C	; 124
    2982:	f0 e0       	ldi	r31, 0x00	; 0
    2984:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fp_powser>
    2988:	0e 94 a4 15 	call	0x2b48	; 0x2b48 <__fp_round>
    298c:	98 01       	movw	r18, r16
    298e:	ae 01       	movw	r20, r28
    2990:	8b 01       	movw	r16, r22
    2992:	ec 01       	movw	r28, r24
    2994:	60 e0       	ldi	r22, 0x00	; 0
    2996:	70 e0       	ldi	r23, 0x00	; 0
    2998:	80 e8       	ldi	r24, 0x80	; 128
    299a:	9f e3       	ldi	r25, 0x3F	; 63
    299c:	0e 94 15 13 	call	0x262a	; 0x262a <__subsf3>
    29a0:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <sqrt>
    29a4:	98 01       	movw	r18, r16
    29a6:	ae 01       	movw	r20, r28
    29a8:	0f 91       	pop	r16
    29aa:	1f 91       	pop	r17
    29ac:	cf 91       	pop	r28
    29ae:	df 91       	pop	r29
    29b0:	0c 94 22 16 	jmp	0x2c44	; 0x2c44 <__mulsf3x>

000029b4 <__fp_cmp>:
    29b4:	99 0f       	add	r25, r25
    29b6:	00 08       	sbc	r0, r0
    29b8:	55 0f       	add	r21, r21
    29ba:	aa 0b       	sbc	r26, r26
    29bc:	e0 e8       	ldi	r30, 0x80	; 128
    29be:	fe ef       	ldi	r31, 0xFE	; 254
    29c0:	16 16       	cp	r1, r22
    29c2:	17 06       	cpc	r1, r23
    29c4:	e8 07       	cpc	r30, r24
    29c6:	f9 07       	cpc	r31, r25
    29c8:	c0 f0       	brcs	.+48     	; 0x29fa <__fp_cmp+0x46>
    29ca:	12 16       	cp	r1, r18
    29cc:	13 06       	cpc	r1, r19
    29ce:	e4 07       	cpc	r30, r20
    29d0:	f5 07       	cpc	r31, r21
    29d2:	98 f0       	brcs	.+38     	; 0x29fa <__fp_cmp+0x46>
    29d4:	62 1b       	sub	r22, r18
    29d6:	73 0b       	sbc	r23, r19
    29d8:	84 0b       	sbc	r24, r20
    29da:	95 0b       	sbc	r25, r21
    29dc:	39 f4       	brne	.+14     	; 0x29ec <__fp_cmp+0x38>
    29de:	0a 26       	eor	r0, r26
    29e0:	61 f0       	breq	.+24     	; 0x29fa <__fp_cmp+0x46>
    29e2:	23 2b       	or	r18, r19
    29e4:	24 2b       	or	r18, r20
    29e6:	25 2b       	or	r18, r21
    29e8:	21 f4       	brne	.+8      	; 0x29f2 <__fp_cmp+0x3e>
    29ea:	08 95       	ret
    29ec:	0a 26       	eor	r0, r26
    29ee:	09 f4       	brne	.+2      	; 0x29f2 <__fp_cmp+0x3e>
    29f0:	a1 40       	sbci	r26, 0x01	; 1
    29f2:	a6 95       	lsr	r26
    29f4:	8f ef       	ldi	r24, 0xFF	; 255
    29f6:	81 1d       	adc	r24, r1
    29f8:	81 1d       	adc	r24, r1
    29fa:	08 95       	ret

000029fc <__fp_inf>:
    29fc:	97 f9       	bld	r25, 7
    29fe:	9f 67       	ori	r25, 0x7F	; 127
    2a00:	80 e8       	ldi	r24, 0x80	; 128
    2a02:	70 e0       	ldi	r23, 0x00	; 0
    2a04:	60 e0       	ldi	r22, 0x00	; 0
    2a06:	08 95       	ret

00002a08 <__fp_mintl>:
    2a08:	88 23       	and	r24, r24
    2a0a:	71 f4       	brne	.+28     	; 0x2a28 <__fp_mintl+0x20>
    2a0c:	77 23       	and	r23, r23
    2a0e:	21 f0       	breq	.+8      	; 0x2a18 <__fp_mintl+0x10>
    2a10:	98 50       	subi	r25, 0x08	; 8
    2a12:	87 2b       	or	r24, r23
    2a14:	76 2f       	mov	r23, r22
    2a16:	07 c0       	rjmp	.+14     	; 0x2a26 <__fp_mintl+0x1e>
    2a18:	66 23       	and	r22, r22
    2a1a:	11 f4       	brne	.+4      	; 0x2a20 <__fp_mintl+0x18>
    2a1c:	99 27       	eor	r25, r25
    2a1e:	0d c0       	rjmp	.+26     	; 0x2a3a <__fp_mintl+0x32>
    2a20:	90 51       	subi	r25, 0x10	; 16
    2a22:	86 2b       	or	r24, r22
    2a24:	70 e0       	ldi	r23, 0x00	; 0
    2a26:	60 e0       	ldi	r22, 0x00	; 0
    2a28:	2a f0       	brmi	.+10     	; 0x2a34 <__fp_mintl+0x2c>
    2a2a:	9a 95       	dec	r25
    2a2c:	66 0f       	add	r22, r22
    2a2e:	77 1f       	adc	r23, r23
    2a30:	88 1f       	adc	r24, r24
    2a32:	da f7       	brpl	.-10     	; 0x2a2a <__fp_mintl+0x22>
    2a34:	88 0f       	add	r24, r24
    2a36:	96 95       	lsr	r25
    2a38:	87 95       	ror	r24
    2a3a:	97 f9       	bld	r25, 7
    2a3c:	08 95       	ret

00002a3e <__fp_mpack>:
    2a3e:	9f 3f       	cpi	r25, 0xFF	; 255
    2a40:	31 f0       	breq	.+12     	; 0x2a4e <__fp_mpack_finite+0xc>

00002a42 <__fp_mpack_finite>:
    2a42:	91 50       	subi	r25, 0x01	; 1
    2a44:	20 f4       	brcc	.+8      	; 0x2a4e <__fp_mpack_finite+0xc>
    2a46:	87 95       	ror	r24
    2a48:	77 95       	ror	r23
    2a4a:	67 95       	ror	r22
    2a4c:	b7 95       	ror	r27
    2a4e:	88 0f       	add	r24, r24
    2a50:	91 1d       	adc	r25, r1
    2a52:	96 95       	lsr	r25
    2a54:	87 95       	ror	r24
    2a56:	97 f9       	bld	r25, 7
    2a58:	08 95       	ret

00002a5a <__fp_nan>:
    2a5a:	9f ef       	ldi	r25, 0xFF	; 255
    2a5c:	80 ec       	ldi	r24, 0xC0	; 192
    2a5e:	08 95       	ret

00002a60 <__fp_powser>:
    2a60:	df 93       	push	r29
    2a62:	cf 93       	push	r28
    2a64:	1f 93       	push	r17
    2a66:	0f 93       	push	r16
    2a68:	ff 92       	push	r15
    2a6a:	ef 92       	push	r14
    2a6c:	df 92       	push	r13
    2a6e:	7b 01       	movw	r14, r22
    2a70:	8c 01       	movw	r16, r24
    2a72:	68 94       	set
    2a74:	06 c0       	rjmp	.+12     	; 0x2a82 <__fp_powser+0x22>
    2a76:	da 2e       	mov	r13, r26
    2a78:	ef 01       	movw	r28, r30
    2a7a:	0e 94 22 16 	call	0x2c44	; 0x2c44 <__mulsf3x>
    2a7e:	fe 01       	movw	r30, r28
    2a80:	e8 94       	clt
    2a82:	a5 91       	lpm	r26, Z+
    2a84:	25 91       	lpm	r18, Z+
    2a86:	35 91       	lpm	r19, Z+
    2a88:	45 91       	lpm	r20, Z+
    2a8a:	55 91       	lpm	r21, Z+
    2a8c:	a6 f3       	brts	.-24     	; 0x2a76 <__fp_powser+0x16>
    2a8e:	ef 01       	movw	r28, r30
    2a90:	0e 94 2d 13 	call	0x265a	; 0x265a <__addsf3x>
    2a94:	fe 01       	movw	r30, r28
    2a96:	97 01       	movw	r18, r14
    2a98:	a8 01       	movw	r20, r16
    2a9a:	da 94       	dec	r13
    2a9c:	69 f7       	brne	.-38     	; 0x2a78 <__fp_powser+0x18>
    2a9e:	df 90       	pop	r13
    2aa0:	ef 90       	pop	r14
    2aa2:	ff 90       	pop	r15
    2aa4:	0f 91       	pop	r16
    2aa6:	1f 91       	pop	r17
    2aa8:	cf 91       	pop	r28
    2aaa:	df 91       	pop	r29
    2aac:	08 95       	ret

00002aae <__fp_powsodd>:
    2aae:	9f 93       	push	r25
    2ab0:	8f 93       	push	r24
    2ab2:	7f 93       	push	r23
    2ab4:	6f 93       	push	r22
    2ab6:	ff 93       	push	r31
    2ab8:	ef 93       	push	r30
    2aba:	9b 01       	movw	r18, r22
    2abc:	ac 01       	movw	r20, r24
    2abe:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__mulsf3>
    2ac2:	ef 91       	pop	r30
    2ac4:	ff 91       	pop	r31
    2ac6:	0e 94 30 15 	call	0x2a60	; 0x2a60 <__fp_powser>
    2aca:	2f 91       	pop	r18
    2acc:	3f 91       	pop	r19
    2ace:	4f 91       	pop	r20
    2ad0:	5f 91       	pop	r21
    2ad2:	0c 94 0f 16 	jmp	0x2c1e	; 0x2c1e <__mulsf3>

00002ad6 <__fp_pscA>:
    2ad6:	00 24       	eor	r0, r0
    2ad8:	0a 94       	dec	r0
    2ada:	16 16       	cp	r1, r22
    2adc:	17 06       	cpc	r1, r23
    2ade:	18 06       	cpc	r1, r24
    2ae0:	09 06       	cpc	r0, r25
    2ae2:	08 95       	ret

00002ae4 <__fp_pscB>:
    2ae4:	00 24       	eor	r0, r0
    2ae6:	0a 94       	dec	r0
    2ae8:	12 16       	cp	r1, r18
    2aea:	13 06       	cpc	r1, r19
    2aec:	14 06       	cpc	r1, r20
    2aee:	05 06       	cpc	r0, r21
    2af0:	08 95       	ret
    2af2:	0c 94 2d 15 	jmp	0x2a5a	; 0x2a5a <__fp_nan>

00002af6 <__fp_rempio2>:
    2af6:	0e 94 d1 15 	call	0x2ba2	; 0x2ba2 <__fp_splitA>
    2afa:	d8 f3       	brcs	.-10     	; 0x2af2 <__fp_pscB+0xe>
    2afc:	e8 94       	clt
    2afe:	e0 e0       	ldi	r30, 0x00	; 0
    2b00:	bb 27       	eor	r27, r27
    2b02:	9f 57       	subi	r25, 0x7F	; 127
    2b04:	f0 f0       	brcs	.+60     	; 0x2b42 <__fp_rempio2+0x4c>
    2b06:	2a ed       	ldi	r18, 0xDA	; 218
    2b08:	3f e0       	ldi	r19, 0x0F	; 15
    2b0a:	49 ec       	ldi	r20, 0xC9	; 201
    2b0c:	06 c0       	rjmp	.+12     	; 0x2b1a <__fp_rempio2+0x24>
    2b0e:	ee 0f       	add	r30, r30
    2b10:	bb 0f       	add	r27, r27
    2b12:	66 1f       	adc	r22, r22
    2b14:	77 1f       	adc	r23, r23
    2b16:	88 1f       	adc	r24, r24
    2b18:	28 f0       	brcs	.+10     	; 0x2b24 <__fp_rempio2+0x2e>
    2b1a:	b2 3a       	cpi	r27, 0xA2	; 162
    2b1c:	62 07       	cpc	r22, r18
    2b1e:	73 07       	cpc	r23, r19
    2b20:	84 07       	cpc	r24, r20
    2b22:	28 f0       	brcs	.+10     	; 0x2b2e <__fp_rempio2+0x38>
    2b24:	b2 5a       	subi	r27, 0xA2	; 162
    2b26:	62 0b       	sbc	r22, r18
    2b28:	73 0b       	sbc	r23, r19
    2b2a:	84 0b       	sbc	r24, r20
    2b2c:	e3 95       	inc	r30
    2b2e:	9a 95       	dec	r25
    2b30:	72 f7       	brpl	.-36     	; 0x2b0e <__fp_rempio2+0x18>
    2b32:	80 38       	cpi	r24, 0x80	; 128
    2b34:	30 f4       	brcc	.+12     	; 0x2b42 <__fp_rempio2+0x4c>
    2b36:	9a 95       	dec	r25
    2b38:	bb 0f       	add	r27, r27
    2b3a:	66 1f       	adc	r22, r22
    2b3c:	77 1f       	adc	r23, r23
    2b3e:	88 1f       	adc	r24, r24
    2b40:	d2 f7       	brpl	.-12     	; 0x2b36 <__fp_rempio2+0x40>
    2b42:	90 48       	sbci	r25, 0x80	; 128
    2b44:	0c 94 21 15 	jmp	0x2a42	; 0x2a42 <__fp_mpack_finite>

00002b48 <__fp_round>:
    2b48:	09 2e       	mov	r0, r25
    2b4a:	03 94       	inc	r0
    2b4c:	00 0c       	add	r0, r0
    2b4e:	11 f4       	brne	.+4      	; 0x2b54 <__fp_round+0xc>
    2b50:	88 23       	and	r24, r24
    2b52:	52 f0       	brmi	.+20     	; 0x2b68 <__fp_round+0x20>
    2b54:	bb 0f       	add	r27, r27
    2b56:	40 f4       	brcc	.+16     	; 0x2b68 <__fp_round+0x20>
    2b58:	bf 2b       	or	r27, r31
    2b5a:	11 f4       	brne	.+4      	; 0x2b60 <__fp_round+0x18>
    2b5c:	60 ff       	sbrs	r22, 0
    2b5e:	04 c0       	rjmp	.+8      	; 0x2b68 <__fp_round+0x20>
    2b60:	6f 5f       	subi	r22, 0xFF	; 255
    2b62:	7f 4f       	sbci	r23, 0xFF	; 255
    2b64:	8f 4f       	sbci	r24, 0xFF	; 255
    2b66:	9f 4f       	sbci	r25, 0xFF	; 255
    2b68:	08 95       	ret

00002b6a <__fp_sinus>:
    2b6a:	ef 93       	push	r30
    2b6c:	e0 ff       	sbrs	r30, 0
    2b6e:	07 c0       	rjmp	.+14     	; 0x2b7e <__fp_sinus+0x14>
    2b70:	a2 ea       	ldi	r26, 0xA2	; 162
    2b72:	2a ed       	ldi	r18, 0xDA	; 218
    2b74:	3f e0       	ldi	r19, 0x0F	; 15
    2b76:	49 ec       	ldi	r20, 0xC9	; 201
    2b78:	5f eb       	ldi	r21, 0xBF	; 191
    2b7a:	0e 94 2d 13 	call	0x265a	; 0x265a <__addsf3x>
    2b7e:	0e 94 a4 15 	call	0x2b48	; 0x2b48 <__fp_round>
    2b82:	0f 90       	pop	r0
    2b84:	03 94       	inc	r0
    2b86:	01 fc       	sbrc	r0, 1
    2b88:	90 58       	subi	r25, 0x80	; 128
    2b8a:	e4 ea       	ldi	r30, 0xA4	; 164
    2b8c:	f0 e0       	ldi	r31, 0x00	; 0
    2b8e:	0c 94 57 15 	jmp	0x2aae	; 0x2aae <__fp_powsodd>

00002b92 <__fp_split3>:
    2b92:	57 fd       	sbrc	r21, 7
    2b94:	90 58       	subi	r25, 0x80	; 128
    2b96:	44 0f       	add	r20, r20
    2b98:	55 1f       	adc	r21, r21
    2b9a:	59 f0       	breq	.+22     	; 0x2bb2 <__fp_splitA+0x10>
    2b9c:	5f 3f       	cpi	r21, 0xFF	; 255
    2b9e:	71 f0       	breq	.+28     	; 0x2bbc <__fp_splitA+0x1a>
    2ba0:	47 95       	ror	r20

00002ba2 <__fp_splitA>:
    2ba2:	88 0f       	add	r24, r24
    2ba4:	97 fb       	bst	r25, 7
    2ba6:	99 1f       	adc	r25, r25
    2ba8:	61 f0       	breq	.+24     	; 0x2bc2 <__fp_splitA+0x20>
    2baa:	9f 3f       	cpi	r25, 0xFF	; 255
    2bac:	79 f0       	breq	.+30     	; 0x2bcc <__fp_splitA+0x2a>
    2bae:	87 95       	ror	r24
    2bb0:	08 95       	ret
    2bb2:	12 16       	cp	r1, r18
    2bb4:	13 06       	cpc	r1, r19
    2bb6:	14 06       	cpc	r1, r20
    2bb8:	55 1f       	adc	r21, r21
    2bba:	f2 cf       	rjmp	.-28     	; 0x2ba0 <__fp_split3+0xe>
    2bbc:	46 95       	lsr	r20
    2bbe:	f1 df       	rcall	.-30     	; 0x2ba2 <__fp_splitA>
    2bc0:	08 c0       	rjmp	.+16     	; 0x2bd2 <__fp_splitA+0x30>
    2bc2:	16 16       	cp	r1, r22
    2bc4:	17 06       	cpc	r1, r23
    2bc6:	18 06       	cpc	r1, r24
    2bc8:	99 1f       	adc	r25, r25
    2bca:	f1 cf       	rjmp	.-30     	; 0x2bae <__fp_splitA+0xc>
    2bcc:	86 95       	lsr	r24
    2bce:	71 05       	cpc	r23, r1
    2bd0:	61 05       	cpc	r22, r1
    2bd2:	08 94       	sec
    2bd4:	08 95       	ret

00002bd6 <__fp_trunc>:
    2bd6:	0e 94 d1 15 	call	0x2ba2	; 0x2ba2 <__fp_splitA>
    2bda:	a0 f0       	brcs	.+40     	; 0x2c04 <__fp_trunc+0x2e>
    2bdc:	be e7       	ldi	r27, 0x7E	; 126
    2bde:	b9 17       	cp	r27, r25
    2be0:	88 f4       	brcc	.+34     	; 0x2c04 <__fp_trunc+0x2e>
    2be2:	bb 27       	eor	r27, r27
    2be4:	9f 38       	cpi	r25, 0x8F	; 143
    2be6:	60 f4       	brcc	.+24     	; 0x2c00 <__fp_trunc+0x2a>
    2be8:	16 16       	cp	r1, r22
    2bea:	b1 1d       	adc	r27, r1
    2bec:	67 2f       	mov	r22, r23
    2bee:	78 2f       	mov	r23, r24
    2bf0:	88 27       	eor	r24, r24
    2bf2:	98 5f       	subi	r25, 0xF8	; 248
    2bf4:	f7 cf       	rjmp	.-18     	; 0x2be4 <__fp_trunc+0xe>
    2bf6:	86 95       	lsr	r24
    2bf8:	77 95       	ror	r23
    2bfa:	67 95       	ror	r22
    2bfc:	b1 1d       	adc	r27, r1
    2bfe:	93 95       	inc	r25
    2c00:	96 39       	cpi	r25, 0x96	; 150
    2c02:	c8 f3       	brcs	.-14     	; 0x2bf6 <__fp_trunc+0x20>
    2c04:	08 95       	ret

00002c06 <__fp_zero>:
    2c06:	e8 94       	clt

00002c08 <__fp_szero>:
    2c08:	bb 27       	eor	r27, r27
    2c0a:	66 27       	eor	r22, r22
    2c0c:	77 27       	eor	r23, r23
    2c0e:	cb 01       	movw	r24, r22
    2c10:	97 f9       	bld	r25, 7
    2c12:	08 95       	ret

00002c14 <__gesf2>:
    2c14:	0e 94 da 14 	call	0x29b4	; 0x29b4 <__fp_cmp>
    2c18:	08 f4       	brcc	.+2      	; 0x2c1c <__gesf2+0x8>
    2c1a:	8f ef       	ldi	r24, 0xFF	; 255
    2c1c:	08 95       	ret

00002c1e <__mulsf3>:
    2c1e:	0e 94 22 16 	call	0x2c44	; 0x2c44 <__mulsf3x>
    2c22:	0c 94 a4 15 	jmp	0x2b48	; 0x2b48 <__fp_round>
    2c26:	0e 94 6b 15 	call	0x2ad6	; 0x2ad6 <__fp_pscA>
    2c2a:	38 f0       	brcs	.+14     	; 0x2c3a <__mulsf3+0x1c>
    2c2c:	0e 94 72 15 	call	0x2ae4	; 0x2ae4 <__fp_pscB>
    2c30:	20 f0       	brcs	.+8      	; 0x2c3a <__mulsf3+0x1c>
    2c32:	95 23       	and	r25, r21
    2c34:	11 f0       	breq	.+4      	; 0x2c3a <__mulsf3+0x1c>
    2c36:	0c 94 fe 14 	jmp	0x29fc	; 0x29fc <__fp_inf>
    2c3a:	0c 94 2d 15 	jmp	0x2a5a	; 0x2a5a <__fp_nan>
    2c3e:	11 24       	eor	r1, r1
    2c40:	0c 94 04 16 	jmp	0x2c08	; 0x2c08 <__fp_szero>

00002c44 <__mulsf3x>:
    2c44:	0e 94 c9 15 	call	0x2b92	; 0x2b92 <__fp_split3>
    2c48:	70 f3       	brcs	.-36     	; 0x2c26 <__mulsf3+0x8>

00002c4a <__mulsf3_pse>:
    2c4a:	95 9f       	mul	r25, r21
    2c4c:	c1 f3       	breq	.-16     	; 0x2c3e <__mulsf3+0x20>
    2c4e:	95 0f       	add	r25, r21
    2c50:	50 e0       	ldi	r21, 0x00	; 0
    2c52:	55 1f       	adc	r21, r21
    2c54:	62 9f       	mul	r22, r18
    2c56:	f0 01       	movw	r30, r0
    2c58:	72 9f       	mul	r23, r18
    2c5a:	bb 27       	eor	r27, r27
    2c5c:	f0 0d       	add	r31, r0
    2c5e:	b1 1d       	adc	r27, r1
    2c60:	63 9f       	mul	r22, r19
    2c62:	aa 27       	eor	r26, r26
    2c64:	f0 0d       	add	r31, r0
    2c66:	b1 1d       	adc	r27, r1
    2c68:	aa 1f       	adc	r26, r26
    2c6a:	64 9f       	mul	r22, r20
    2c6c:	66 27       	eor	r22, r22
    2c6e:	b0 0d       	add	r27, r0
    2c70:	a1 1d       	adc	r26, r1
    2c72:	66 1f       	adc	r22, r22
    2c74:	82 9f       	mul	r24, r18
    2c76:	22 27       	eor	r18, r18
    2c78:	b0 0d       	add	r27, r0
    2c7a:	a1 1d       	adc	r26, r1
    2c7c:	62 1f       	adc	r22, r18
    2c7e:	73 9f       	mul	r23, r19
    2c80:	b0 0d       	add	r27, r0
    2c82:	a1 1d       	adc	r26, r1
    2c84:	62 1f       	adc	r22, r18
    2c86:	83 9f       	mul	r24, r19
    2c88:	a0 0d       	add	r26, r0
    2c8a:	61 1d       	adc	r22, r1
    2c8c:	22 1f       	adc	r18, r18
    2c8e:	74 9f       	mul	r23, r20
    2c90:	33 27       	eor	r19, r19
    2c92:	a0 0d       	add	r26, r0
    2c94:	61 1d       	adc	r22, r1
    2c96:	23 1f       	adc	r18, r19
    2c98:	84 9f       	mul	r24, r20
    2c9a:	60 0d       	add	r22, r0
    2c9c:	21 1d       	adc	r18, r1
    2c9e:	82 2f       	mov	r24, r18
    2ca0:	76 2f       	mov	r23, r22
    2ca2:	6a 2f       	mov	r22, r26
    2ca4:	11 24       	eor	r1, r1
    2ca6:	9f 57       	subi	r25, 0x7F	; 127
    2ca8:	50 40       	sbci	r21, 0x00	; 0
    2caa:	9a f0       	brmi	.+38     	; 0x2cd2 <__mulsf3_pse+0x88>
    2cac:	f1 f0       	breq	.+60     	; 0x2cea <__mulsf3_pse+0xa0>
    2cae:	88 23       	and	r24, r24
    2cb0:	4a f0       	brmi	.+18     	; 0x2cc4 <__mulsf3_pse+0x7a>
    2cb2:	ee 0f       	add	r30, r30
    2cb4:	ff 1f       	adc	r31, r31
    2cb6:	bb 1f       	adc	r27, r27
    2cb8:	66 1f       	adc	r22, r22
    2cba:	77 1f       	adc	r23, r23
    2cbc:	88 1f       	adc	r24, r24
    2cbe:	91 50       	subi	r25, 0x01	; 1
    2cc0:	50 40       	sbci	r21, 0x00	; 0
    2cc2:	a9 f7       	brne	.-22     	; 0x2cae <__mulsf3_pse+0x64>
    2cc4:	9e 3f       	cpi	r25, 0xFE	; 254
    2cc6:	51 05       	cpc	r21, r1
    2cc8:	80 f0       	brcs	.+32     	; 0x2cea <__mulsf3_pse+0xa0>
    2cca:	0c 94 fe 14 	jmp	0x29fc	; 0x29fc <__fp_inf>
    2cce:	0c 94 04 16 	jmp	0x2c08	; 0x2c08 <__fp_szero>
    2cd2:	5f 3f       	cpi	r21, 0xFF	; 255
    2cd4:	e4 f3       	brlt	.-8      	; 0x2cce <__mulsf3_pse+0x84>
    2cd6:	98 3e       	cpi	r25, 0xE8	; 232
    2cd8:	d4 f3       	brlt	.-12     	; 0x2cce <__mulsf3_pse+0x84>
    2cda:	86 95       	lsr	r24
    2cdc:	77 95       	ror	r23
    2cde:	67 95       	ror	r22
    2ce0:	b7 95       	ror	r27
    2ce2:	f7 95       	ror	r31
    2ce4:	e7 95       	ror	r30
    2ce6:	9f 5f       	subi	r25, 0xFF	; 255
    2ce8:	c1 f7       	brne	.-16     	; 0x2cda <__mulsf3_pse+0x90>
    2cea:	fe 2b       	or	r31, r30
    2cec:	88 0f       	add	r24, r24
    2cee:	91 1d       	adc	r25, r1
    2cf0:	96 95       	lsr	r25
    2cf2:	87 95       	ror	r24
    2cf4:	97 f9       	bld	r25, 7
    2cf6:	08 95       	ret

00002cf8 <round>:
    2cf8:	0e 94 d1 15 	call	0x2ba2	; 0x2ba2 <__fp_splitA>
    2cfc:	e8 f0       	brcs	.+58     	; 0x2d38 <round+0x40>
    2cfe:	9e 37       	cpi	r25, 0x7E	; 126
    2d00:	e8 f0       	brcs	.+58     	; 0x2d3c <round+0x44>
    2d02:	96 39       	cpi	r25, 0x96	; 150
    2d04:	b8 f4       	brcc	.+46     	; 0x2d34 <round+0x3c>
    2d06:	9e 38       	cpi	r25, 0x8E	; 142
    2d08:	48 f4       	brcc	.+18     	; 0x2d1c <round+0x24>
    2d0a:	67 2f       	mov	r22, r23
    2d0c:	78 2f       	mov	r23, r24
    2d0e:	88 27       	eor	r24, r24
    2d10:	98 5f       	subi	r25, 0xF8	; 248
    2d12:	f9 cf       	rjmp	.-14     	; 0x2d06 <round+0xe>
    2d14:	86 95       	lsr	r24
    2d16:	77 95       	ror	r23
    2d18:	67 95       	ror	r22
    2d1a:	93 95       	inc	r25
    2d1c:	95 39       	cpi	r25, 0x95	; 149
    2d1e:	d0 f3       	brcs	.-12     	; 0x2d14 <round+0x1c>
    2d20:	b6 2f       	mov	r27, r22
    2d22:	b1 70       	andi	r27, 0x01	; 1
    2d24:	6b 0f       	add	r22, r27
    2d26:	71 1d       	adc	r23, r1
    2d28:	81 1d       	adc	r24, r1
    2d2a:	20 f4       	brcc	.+8      	; 0x2d34 <round+0x3c>
    2d2c:	87 95       	ror	r24
    2d2e:	77 95       	ror	r23
    2d30:	67 95       	ror	r22
    2d32:	93 95       	inc	r25
    2d34:	0c 94 04 15 	jmp	0x2a08	; 0x2a08 <__fp_mintl>
    2d38:	0c 94 1f 15 	jmp	0x2a3e	; 0x2a3e <__fp_mpack>
    2d3c:	0c 94 04 16 	jmp	0x2c08	; 0x2c08 <__fp_szero>

00002d40 <sin>:
    2d40:	9f 93       	push	r25
    2d42:	0e 94 7b 15 	call	0x2af6	; 0x2af6 <__fp_rempio2>
    2d46:	0f 90       	pop	r0
    2d48:	07 fc       	sbrc	r0, 7
    2d4a:	ee 5f       	subi	r30, 0xFE	; 254
    2d4c:	0c 94 b5 15 	jmp	0x2b6a	; 0x2b6a <__fp_sinus>
    2d50:	19 f4       	brne	.+6      	; 0x2d58 <sin+0x18>
    2d52:	16 f4       	brtc	.+4      	; 0x2d58 <sin+0x18>
    2d54:	0c 94 2d 15 	jmp	0x2a5a	; 0x2a5a <__fp_nan>
    2d58:	0c 94 1f 15 	jmp	0x2a3e	; 0x2a3e <__fp_mpack>

00002d5c <sqrt>:
    2d5c:	0e 94 d1 15 	call	0x2ba2	; 0x2ba2 <__fp_splitA>
    2d60:	b8 f3       	brcs	.-18     	; 0x2d50 <sin+0x10>
    2d62:	99 23       	and	r25, r25
    2d64:	c9 f3       	breq	.-14     	; 0x2d58 <sin+0x18>
    2d66:	b6 f3       	brts	.-20     	; 0x2d54 <sin+0x14>
    2d68:	9f 57       	subi	r25, 0x7F	; 127
    2d6a:	55 0b       	sbc	r21, r21
    2d6c:	87 ff       	sbrs	r24, 7
    2d6e:	0e 94 13 17 	call	0x2e26	; 0x2e26 <__fp_norm2>
    2d72:	00 24       	eor	r0, r0
    2d74:	a0 e6       	ldi	r26, 0x60	; 96
    2d76:	40 ea       	ldi	r20, 0xA0	; 160
    2d78:	90 01       	movw	r18, r0
    2d7a:	80 58       	subi	r24, 0x80	; 128
    2d7c:	56 95       	lsr	r21
    2d7e:	97 95       	ror	r25
    2d80:	28 f4       	brcc	.+10     	; 0x2d8c <sqrt+0x30>
    2d82:	80 5c       	subi	r24, 0xC0	; 192
    2d84:	66 0f       	add	r22, r22
    2d86:	77 1f       	adc	r23, r23
    2d88:	88 1f       	adc	r24, r24
    2d8a:	20 f0       	brcs	.+8      	; 0x2d94 <sqrt+0x38>
    2d8c:	26 17       	cp	r18, r22
    2d8e:	37 07       	cpc	r19, r23
    2d90:	48 07       	cpc	r20, r24
    2d92:	30 f4       	brcc	.+12     	; 0x2da0 <sqrt+0x44>
    2d94:	62 1b       	sub	r22, r18
    2d96:	73 0b       	sbc	r23, r19
    2d98:	84 0b       	sbc	r24, r20
    2d9a:	20 29       	or	r18, r0
    2d9c:	31 29       	or	r19, r1
    2d9e:	4a 2b       	or	r20, r26
    2da0:	a6 95       	lsr	r26
    2da2:	17 94       	ror	r1
    2da4:	07 94       	ror	r0
    2da6:	20 25       	eor	r18, r0
    2da8:	31 25       	eor	r19, r1
    2daa:	4a 27       	eor	r20, r26
    2dac:	58 f7       	brcc	.-42     	; 0x2d84 <sqrt+0x28>
    2dae:	66 0f       	add	r22, r22
    2db0:	77 1f       	adc	r23, r23
    2db2:	88 1f       	adc	r24, r24
    2db4:	20 f0       	brcs	.+8      	; 0x2dbe <sqrt+0x62>
    2db6:	26 17       	cp	r18, r22
    2db8:	37 07       	cpc	r19, r23
    2dba:	48 07       	cpc	r20, r24
    2dbc:	30 f4       	brcc	.+12     	; 0x2dca <sqrt+0x6e>
    2dbe:	62 0b       	sbc	r22, r18
    2dc0:	73 0b       	sbc	r23, r19
    2dc2:	84 0b       	sbc	r24, r20
    2dc4:	20 0d       	add	r18, r0
    2dc6:	31 1d       	adc	r19, r1
    2dc8:	41 1d       	adc	r20, r1
    2dca:	a0 95       	com	r26
    2dcc:	81 f7       	brne	.-32     	; 0x2dae <sqrt+0x52>
    2dce:	b9 01       	movw	r22, r18
    2dd0:	84 2f       	mov	r24, r20
    2dd2:	91 58       	subi	r25, 0x81	; 129
    2dd4:	88 0f       	add	r24, r24
    2dd6:	96 95       	lsr	r25
    2dd8:	87 95       	ror	r24
    2dda:	08 95       	ret

00002ddc <tan>:
    2ddc:	df 93       	push	r29
    2dde:	d9 2f       	mov	r29, r25
    2de0:	0e 94 7b 15 	call	0x2af6	; 0x2af6 <__fp_rempio2>
    2de4:	e6 95       	lsr	r30
    2de6:	d7 95       	ror	r29
    2de8:	2a ed       	ldi	r18, 0xDA	; 218
    2dea:	3f e0       	ldi	r19, 0x0F	; 15
    2dec:	49 e4       	ldi	r20, 0x49	; 73
    2dee:	5f e3       	ldi	r21, 0x3F	; 63
    2df0:	b3 3a       	cpi	r27, 0xA3	; 163
    2df2:	62 07       	cpc	r22, r18
    2df4:	73 07       	cpc	r23, r19
    2df6:	84 07       	cpc	r24, r20
    2df8:	95 07       	cpc	r25, r21
    2dfa:	d7 95       	ror	r29
    2dfc:	3a f0       	brmi	.+14     	; 0x2e0c <tan+0x30>
    2dfe:	a2 ea       	ldi	r26, 0xA2	; 162
    2e00:	49 ec       	ldi	r20, 0xC9	; 201
    2e02:	90 68       	ori	r25, 0x80	; 128
    2e04:	0e 94 2d 13 	call	0x265a	; 0x265a <__addsf3x>
    2e08:	0e 94 a4 15 	call	0x2b48	; 0x2b48 <__fp_round>
    2e0c:	e2 ec       	ldi	r30, 0xC2	; 194
    2e0e:	f0 e0       	ldi	r31, 0x00	; 0
    2e10:	0e 94 57 15 	call	0x2aae	; 0x2aae <__fp_powsodd>
    2e14:	dd 0f       	add	r29, r29
    2e16:	13 f0       	brvs	.+4      	; 0x2e1c <tan+0x40>
    2e18:	0e 94 1a 17 	call	0x2e34	; 0x2e34 <inverse>
    2e1c:	dd 0f       	add	r29, r29
    2e1e:	0b f4       	brvc	.+2      	; 0x2e22 <tan+0x46>
    2e20:	90 58       	subi	r25, 0x80	; 128
    2e22:	df 91       	pop	r29
    2e24:	08 95       	ret

00002e26 <__fp_norm2>:
    2e26:	91 50       	subi	r25, 0x01	; 1
    2e28:	50 40       	sbci	r21, 0x00	; 0
    2e2a:	66 0f       	add	r22, r22
    2e2c:	77 1f       	adc	r23, r23
    2e2e:	88 1f       	adc	r24, r24
    2e30:	d2 f7       	brpl	.-12     	; 0x2e26 <__fp_norm2>
    2e32:	08 95       	ret

00002e34 <inverse>:
    2e34:	9b 01       	movw	r18, r22
    2e36:	ac 01       	movw	r20, r24
    2e38:	60 e0       	ldi	r22, 0x00	; 0
    2e3a:	70 e0       	ldi	r23, 0x00	; 0
    2e3c:	80 e8       	ldi	r24, 0x80	; 128
    2e3e:	9f e3       	ldi	r25, 0x3F	; 63
    2e40:	0c 94 be 13 	jmp	0x277c	; 0x277c <__divsf3>

00002e44 <_exit>:
    2e44:	f8 94       	cli

00002e46 <__stop_program>:
    2e46:	ff cf       	rjmp	.-2      	; 0x2e46 <__stop_program>
